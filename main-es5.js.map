{"version":3,"sources":["webpack:///src/app/layouts/scrolltop/scrolltop.component.ts","webpack:///src/app/layouts/scrolltop/scrolltop.component.html","webpack:///src/app/modals/confirm-logout/confirm-logout/confirm-logout.component.ts","webpack:///src/app/modals/confirm-logout/confirm-logout/confirm-logout.component.html","webpack:///ws (ignored)","webpack:///src/app/modals/forgot-password/forgot-password.component.ts","webpack:///src/app/modals/forgot-password/forgot-password.component.html","webpack:///src/app/layouts/header/disconnected/disconnected.component.ts","webpack:///src/app/layouts/header/disconnected/disconnected.component.html","webpack:///src/app/components/modele/dashboard/information/information.component.ts","webpack:///src/app/components/modele/dashboard/information/information.component.html","webpack:///src/app/components/forgot/send-forgot-model/send-forgot-model.component.html","webpack:///src/app/components/forgot/send-forgot-model/send-forgot-model.component.ts","webpack:///src/app/animation.ts","webpack:///src/app/components/modele/dashboard/setting/setting.component.ts","webpack:///src/app/components/modele/dashboard/setting/setting.component.html","webpack:///src/app/components/modele/albums/albums.component.html","webpack:///src/app/components/modele/albums/albums.component.ts","webpack:///src/app/modals/pack-modal/pack-modal.component.html","webpack:///src/app/modals/pack-modal/pack-modal.component.ts","webpack:///src/app/services/socket/socket.service.ts","webpack:///src/app/components/modele/dashboard/gain/gain.component.ts","webpack:///src/app/components/modele/dashboard/gain/gain.component.html","webpack:///src/app/components/forgot/send-forgot/send-forgot.component.html","webpack:///src/app/components/forgot/send-forgot/send-forgot.component.ts","webpack:///src/app/services/header/header.service.ts","webpack:///src/app/components/modele/dashboard/dashboard.component.ts","webpack:///src/app/components/modele/dashboard/dashboard.component.html","webpack:///src/app/services/auth/auth.service.ts","webpack:///src/app/interfaces/timer.interface.ts","webpack:///src/app/components/modele/dashboard/connexion/connexion.component.ts","webpack:///src/app/components/modele/dashboard/connexion/connexion.component.html","webpack:///src/app/components/modele/live-vip-model/live-vip-model.component.ts","webpack:///src/app/components/modele/live-vip-model/live-vip-model.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/components/live/live-private/live-private-cam/live-private-cam.component.ts","webpack:///src/app/components/live/live-private/live-private-cam/live-private-cam.component.html","webpack:///src/app/components/modele/dashboard/solde/solde.component.html","webpack:///src/app/components/modele/dashboard/solde/solde.component.ts","webpack:///src/app/components/forgot/new-password/new-password.component.html","webpack:///src/app/components/forgot/new-password/new-password.component.ts","webpack:///src/app/components/client/out/out.component.ts","webpack:///src/app/components/client/out/out.component.html","webpack:///src/app/components/modele/profil-model/profil-model.component.html","webpack:///src/app/components/modele/profil-model/profil-model.component.ts","webpack:///src/app/components/live/live-vip/live-vip-stat/live-vip-stat.component.html","webpack:///src/app/components/live/live-vip/live-vip-stat/live-vip-stat.component.ts","webpack:///src/app/components/home/home-disconnected/home-live.component.ts","webpack:///src/app/components/home/home-disconnected/home-live.component.html","webpack:///src/app/utils/slide.ts","webpack:///src/app/modals/popup-info/popup-info.component.ts","webpack:///src/app/modals/popup-info/popup-info.component.html","webpack:///src/app/components/page-not-found/page-not-found.component.ts","webpack:///src/app/components/page-not-found/page-not-found.component.html","webpack:///src/app/components/live/live-vip/live-vip.component.ts","webpack:///src/app/components/live/live-vip/live-vip.component.html","webpack:///src/app/services/timer/timer.service.ts","webpack:///src/app/layouts/header/connected-model/connected-model.component.ts","webpack:///src/app/layouts/header/connected-model/connected-model.component.html","webpack:///src/app/layouts/header/header.component.html","webpack:///src/app/layouts/header/header.component.ts","webpack:///src/app/components/client/profil/password/password.component.html","webpack:///src/app/components/client/profil/password/password.component.ts","webpack:///src/app/components/client/buy-credit/buy-credit.component.html","webpack:///src/app/components/client/buy-credit/buy-credit.component.ts","webpack:///src/app/components/modele/dashboard/password-modele/password-modele.component.html","webpack:///src/app/components/modele/dashboard/password-modele/password-modele.component.ts","webpack:///src/app/components/modele/live-private-model/live-private-model.component.ts","webpack:///src/app/components/modele/live-private-model/live-private-model.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/services/encryption/encryption.service.ts","webpack:///src/app/components/live/live-free/live-free-chat/live-free-chat.component.ts","webpack:///src/app/components/live/live-free/live-free-chat/live-free-chat.component.html","webpack:///src/app/components/modele/inscription-model/inscription-model.component.html","webpack:///src/app/components/modele/inscription-model/inscription-model.component.ts","webpack:///src/app/services/roomVip/room-vip.service.ts","webpack:///src/app/components/modele/shim.js","webpack:///src/app/components/client/reactivate-account/reactivate-account.component.ts","webpack:///src/app/components/client/reactivate-account/reactivate-account.component.html","webpack:///src/app/components/client/signin/signin.component.html","webpack:///src/app/components/client/signin/signin.component.ts","webpack:///node_modules/peerjs/dist sync","webpack:///src/app/services/profil/profil.service.ts","webpack:///src/app/services/model/model.service.ts","webpack:///src/app/services/auth/auth.interceptor.ts","webpack:///src/app/app.module.ts","webpack:///src/app/services/client/client.service.ts","webpack:///src/app/pipes/sanitize/sanitize.pipe.ts","webpack:///src/app/services/roomPrivate/room-private.service.ts","webpack:///src/app/services/popup/popup.service.ts","webpack:///src/app/layouts/header/connected/connected.component.ts","webpack:///src/app/layouts/header/connected/connected.component.html","webpack:///src/app/services/chat/chat.service.ts","webpack:///src/app/services/room/room.service.ts","webpack:///src/app/components/modele/dashboard/credit/pack-bronze/pack-bronze.component.ts","webpack:///src/app/components/modele/dashboard/credit/pack-bronze/pack-bronze.component.html","webpack:///src/app/components/client/signup/signup.component.html","webpack:///src/app/components/client/signup/signup.component.ts","webpack:///src/app/components/modele/live-chat-model/live-chat-model.component.html","webpack:///src/app/components/modele/live-chat-model/live-chat-model.component.ts","webpack:///src/app/components/modele/dashboard/credit/pack-argent/pack-argent.component.ts","webpack:///src/app/components/modele/dashboard/credit/pack-argent/pack-argent.component.html","webpack:///src/app/services/album/album.service.ts","webpack:///src/app/services/credit/credit.service.ts","webpack:///src/app/services/notification/notification.service.ts","webpack:///src/app/components/modele/connexion-model/connexion-model.component.html","webpack:///src/app/components/modele/connexion-model/connexion-model.component.ts","webpack:///src/app/modals/popup-image/popup-image.component.ts","webpack:///src/app/modals/popup-image/popup-image.component.html","webpack:///src/app/components/client/confirm-email/confirm-email.component.ts","webpack:///src/app/components/client/confirm-email/confirm-email.component.html","webpack:///src/app/components/modele/dashboard/credit/credit.component.html","webpack:///src/app/components/modele/dashboard/credit/credit.component.ts","webpack:///src/app/services/log/log.service.ts","webpack:///src/app/components/live/live-private/live-private.component.ts","webpack:///src/app/components/live/live-private/live-private.component.html","webpack:///src/app/components/client/enter/enter.component.ts","webpack:///src/app/components/client/enter/enter.component.html","webpack:///src/app/components/live/live-free/live-free.component.ts","webpack:///src/app/components/live/live-free/live-free.component.html","webpack:///src/app/interfaces/get-model.interface.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/components/client/profil/profil.component.ts","webpack:///src/app/components/client/profil/profil.component.html","webpack:///src/app/components/client/profil/delete/delete.component.html","webpack:///src/app/components/client/profil/delete/delete.component.ts","webpack:///src/app/components/live/topbar/topbar.component.html","webpack:///src/app/components/live/topbar/topbar.component.ts","webpack:///src/app/components/modele/dashboard/credit/pack-or/pack-or.component.ts","webpack:///src/app/components/modele/dashboard/credit/pack-or/pack-or.component.html","webpack:///src/app/components/home/home-connected/home-client.component.html","webpack:///src/app/components/home/home-connected/home-client.component.ts","webpack:///src/app/components/modele/dashboard/credit/pack-bienvenue/pack-bienvenue.component.ts","webpack:///src/app/components/modele/dashboard/credit/pack-bienvenue/pack-bienvenue.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["ScrolltopComponent","hide","window","scroll","event","scrollTop","show","body","animate","console","log","ConfirmLogoutComponent","dialogRef","authService","socketService","store","roomService","logService","clientService","data","exclamation","password","error","empty","action","close","createLog","subscribe","room","get","leave","parseInt","remove","leaveRoom","logoutUser","lastRoom","validate","ForgotPasswordComponent","DisconnectedComponent","headerSrv","animationState","connect","active","actif","divName","toggleShowDiv","InformationComponent","profilService","notificationService","information","id","like","dislike","social_network","sex_orientation","description","getInfo","updateProfil","success","getProfil","oldInfo","restoreInfo","saveInfo","SendForgotModelComponent","modelService","loading","email","forgot","infoMsg","message","errorMsg","send","SlideInOutAnimation","SettingComponent","profileService","colorSwitch","checkedSound","checkedMail","checkedMessage","setting","sound_message","sound_notification","mail_notification","formData","FormData","info","pseudo","path_soft","cin","date_birth","photoImg","originalInfo","originalSetting","fileInput","file","target","files","mimeType","reader","FileReader","type","readAsDataURL","onload","result","append","name","updatePhoto","events","UploadProgress","Response","path","updateSetting","updateInfo","switchSound","switchMail","switchMessage","restoreSetting","saveSetting","AlbumsComponent","route","albumService","dialog","bg","profil","photoAdd","bannier","totalAlbum","sectionAlbum","page","contextAlbum","currentAlbum","fileData","albums","count","param","snapshot","queryParamMap","initAlbum","countAlbum","getCount","vip","free","debut","getAlbums","context","verified","textAlbum","fetchAlbum","marge","Math","floor","mime","document","querySelector","scrollIntoView","index","length","verifyMimeType","failure","fileUploadProgress","uploadAlbumModel","round","loaded","total","paths","push","addAlbums","url","open","width","afterClosed","ngOnInit","take","fileChoose","profilChoose","PackModalComponent","creditService","currentOnglet","currentSelected","montantSelected","creditSelected","currentPack","clientId","credit","creditId","listPack","packBienvenue","packBronze","packArgent","packOr","getMyCredit","getMyInfos","montant","buyPack","buyCreditClient","then","SocketService","socket","roomPrivateService","eventName","subscriber","on","next","emit","idRoom","modelId","role","clientPseudo","updateActif","GainComponent","roomVIPService","updating","gain","date","gainVIP","gainPrivate","modelPseudo","useDefaultGridStyle","options","gridStyle","stroke","lineDash","axes","update","getData","startUpdates","setInterval","autoSize","series","xKey","yKey","yName","marker","size","fill","color","position","nice","tick","label","format","background","visible","tooltip","enabled","navigator","title","text","legend","item","getInfoModel","getGainVip","getGainPrivate","getGain","forEach","gainTmp","getDate","createdAt","year","substring","month","day","SendForgotComponent","HeaderService","hidded","unselected","DashboardComponent","pageId","menu","slided","activate","addClass","removeClass","load","httpOptions","headers","AuthService","http","router","endpoint","authentified","who","set","authentication","user","post","reportProgress","observe","token","newPassword","put","authToken","removeToken","navigate","TypeTimer","ConnexionComponent","history","lundi","mardi","mercredi","jeudi","vendredi","samedi","dimanche","yKeys","yNames","grouped","fills","strokeWidth","formatter","params","keys","value","LiveVipModelComponent","_platform","chatService","roomVipService","timerService","imgPoster","thrombone","dot","toggleDot","client","img","chatColor","creditModel","idCreditModel","winCredit","timer","hour","minute","second","fail","reinit","stat","id_show","type_show","tarif_show","time_show","time_passed","hour_passed","minute_passed","second_passed","actualCredit","totalCredit","messages","leaved","joinSub","leaveSub","messageSub","peerSub","peerList","getPeerId","peer","peerId","call","onStop","mediaDevices","getUserMedia","video","audio","stream","lazyStream","_video","nativeElement","srcObject","play","answer","remoteStream","includes","streamRemoteVideo","currentPeer","peerConnection","err","initLiveVideo","unsubscribe","getInfoRoom","getCredit","getRoomModel","getMessages","initSocket","getInfoClient","initTimer","getCostShow","joinedRoom","joinRoom","joinVip","listen","peerIdShare","connectWithPeer","type_source","id_source","type_chat","code_couleur","postMessage","msg","sendMessage","getMessage","leaveTimer","clearTimer","leaveVip","updateStatus","beginTimerModel","VIP","created","updated","updatedAt","convertTime","toString","toUpperCase","beginTimer","delay","Date","updateTimer","onStart","ms","pause","getVideoTracks","stop","callPeer","remote_video","toggleDots","liveOut","environment","production","CRYPT_PSEUDO","CRYPT_PASS","CRYPT_PSEUDO_MODEL","CRYPT_PASS_MODEL","LivePrivateCamComponent","clientSelected","idSelected","canSelect","SoldeComponent","coinImg","solde","NewPasswordComponent","activatedRoute","confirmPassword","errorToken","queryParams","verifyToken","getCredential","reinitPassword","access_token","saveToken","saveLog","createRoom","OutComponent","ProfilModelComponent","camera","totalAlbumPrivate","pagePrivate","currentAlbumPrivate","totalAlbumVIP","pageVIP","currentAlbumVIP","totalAlbumFree","pageFree","currentAlbumFree","model","age","status","date_last_connection","horaire","arrowLeft","arrowRight","init","getStatus","getFullYear","year_birth","full","section","toLeft","toRight","LiveVipStatComponent","stats1","stats2","startMinuteur","lightbox","path_album","HomeLiveComponent","modelSrv","gallery","mainModel","allLive","other","imageData","getLive","getNoLive","items","map","src","thumb","lightboxRef","ref","setConfig","imageSize","Cover","thumbPosition","Top","type_album","getModelAlbums","ANIMATION_SPEED","routeTransitionAnimations","optional","transform","PopupInfoComponent","PageNotFoundComponent","LiveVipComponent","popupService","clientCredit","indisponible","sendClientPeerId","paramMap","errorRoom","getModel","initColor","creditTimer","profile","getMyInfo","obsolete","getColor","getTimer","aucunCredit","creditInsuffisant","setTimeout","undefined","timerId","showCredit","showSecond","showType","roomId","buy","TimerService","step","hourCreated","hourUpdated","minCreated","minUpdated","secCreated","secUpdated","ConnectedModelComponent","authSrv","chat","settings","goToChat","logout","HeaderComponent","isConnected","isClickable","isModel","isVisible","isActif","connected","clickable","PasswordComponent","formBuilder","submitted","errorPassword","mustMatch","controlName","matchControlName","formGroup","control","controls","matchingControl","errors","setErrors","passwordForm","group","oldPassword","required","validators","preventDefault","invalid","passwords","changePassword","BuyCreditComponent","promo","select","PasswordModeleComponent","old","confirm","changeForm","reset","LivePrivateModelComponent","clients","getActif","getActifs","ansModelPeerId","roomVIP","askLeave","leavePrivate","PRIVATE","beginCountCredit","nbSecond","chooseClient","liveVIP","AppComponent","unselect","EncryptionService","key","Utf8","parse","iv","enString","encrypted","encrypt","JSON","stringify","keySize","mode","CBC","padding","Pkcs7","decString","decrypted","decrypt","LiveFreeChatComponent","iterableDiffers","listColor","iterableDiffer","find","create","ready","top","changes","diff","prop","InscriptionModelComponent","emailExist","pseudoExist","fileRecto","errorRecto","fileVerso","errorVerso","filePhoto","errorPhoto","fileSoft","errorSoft","signForm","firstname","lastname","day_birth","month_birth","path_recto","path_verso","path_cin","passwordConfirm","initDay","initYear","i","tmp","click","ok","preview","previewRecto","nameRecto","previewVerso","nameVerso","previewPhoto","namePhoto","previewSoft","nameSoft","uploadImagesModel","registerModel","res","createSetting","createCredit","createProfil","selectPhoto","register","RoomVipService","parcelRequire","ReactivateAccountComponent","errorMessageToken","successMessageToken","confirmToken","reactivateAccount","SigninComponent","encryptionService","checked","pseudoStorage","passStorage","errorAuth","loginForm","isRemembered","localStorage","setItem","pseudoCrypted","encryptUsingAES256","passCrypted","getItem","decryptUsingAES256","replace","setValue","loginClient","isRemember","remember","login","webpackEmptyContext","req","e","Error","code","resolve","module","exports","ProfilService","patch","ModelService","live","offline","slice","userId","AuthInterceptor","getToken","header","clone","setHeaders","Authorization","handle","pipe","statusCode","config","customNotifierOptions","horizontal","distance","vertical","gap","theme","behaviour","autoHide","onClick","onMouseover","showDismissButton","stacking","animations","preset","speed","easing","offset","shift","overlap","AppModule","provide","useClass","multi","useValue","withConfig","warnOnNgModelWithFormControl","forRoot","ClientService","linkRoom","SanitizePipe","_sanitizer","bypassSecurityTrustHtml","RoomPrivateService","joined","type_room","PopupService","ConnectedComponent","navigateByUrl","lastChat","ChatService","RoomService","PackBronzeComponent","SignupComponent","registerClient","createCreditClient","LiveChatModelComponent","join","launchLive","PackArgentComponent","AlbumService","albumPrivate","albumVIP","albumFree","album","begin","end","CreditService","cout","affaire","NotificationService","_snackbar","ngxNotificationMsgService","SUCCESS","displayIcon","closeable","direction","TOP_RIGHT","displayProgressBar","INFO","FAILURE","NONE","duration","horizontalPosition","verticalPosition","panelClass","ConnexionModelComponent","loginModel","PopupImageComponent","deleteAlbum","ConfirmEmailComponent","CreditComponent","LogService","LivePrivateComponent","invitedVIP","passedVIP","actifSub","modelLeaveSub","modelPassedVipSub","invitationVipSub","askModelPeerId","joinPrivate","invitationVIP","getSpecificProfil","getInfoRoomVIP","EnterComponent","logoDark","alert","LiveFreeComponent","passedToPrivate","modelPassedPrivateSub","modelLeavedSub","invalideRoom","livePrivate","routes","component","AppRoutingModule","scrollPositionRestoration","relativeLinkResolution","ProfilComponent","sound","autoRecharge","disabled","isModifing","showExclam","clientEmail","clientCreditId","newPseudo","changePseudo","changeSound","toogleRecharge","recharge","tryChangeEmail","modifing","openDialogPassword","deleteAccount","DeleteComponent","onNoClick","deactivateAccount","TopbarComponent","strech","microOn","microOff","mute","noVideo","volume","soundOff","add","isSound","isVideo","isStreched","isMicro","currentMinute","countUser","showTools","material","PackOrComponent","HomeClientComponent","image","totalInLive","paginationLive","photoLive","indiceLive","totalInChat","paginationChat","photoChat","indiceChat","totalOffline","paginationOffline","photoOffline","indiceOffline","OFFLINE","INLINE","LIVE","getTotal","initPagination","margeLive","ceil","margeChat","margeOffline","initPhoto","contxt","indice","getList","prev","PackBienvenueComponent","bootstrapModule","webpackEmptyAsyncContext","Promise"],"mappings":"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AI,CAACoH,aAAL;;AACA,kBAAI,OAAI,CAACA,aAAL,GAAqB,EAAzB,EAA6B;AAC3B,uBAAI,CAACA,aAAL,GAAqB,CAArB;AACA,uBAAI,CAACD,aAAL;;AACA,oBAAI,OAAI,CAACA,aAAL,GAAqB,EAAzB,EAA6B;AAC3B,yBAAI,CAACA,aAAL,GAAqB,CAArB;AACA,yBAAI,CAACD,WAAL;AACD;AACF;AACN,aAVU,EAUR,IAVQ,CAAX;AAWD;;;;;;;yBAlEUuI,oB;AAAoB,O;;;cAApBA,oB;AAAoB,0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,gB;AAAA,uO;AAAA;AAAA;ADPjC;;AACE;;AAAI;;AACJ;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AAEF;;AACF;;AACA;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACA;;AAAyC;;AACzC;;AAAyC;;AAC3C;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;AAOF;;;;AA/HY;;AAAA;;AAkBA;;AAAA;;AAkBA;;AAAA;;AA0BA;;AAAA;;AAiBO;;AAAA;;AACA;;AAAA;;AAAkC;;AAAA;;AAClC;;AAAA;;AAAkC;;AAAA;;AAiBzC;;AAAA;;AAiBA;;AAAA;;;;;;;;;;;;;;;;;;;;;AEtIZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACGI;;AAEE;;AACE;;AACA;AAAA;;AAAA;;AAAA;AAAA,aAAyD,OAAzD,EAAyD;AAAA;;AAAA;;AAAA,mBAChD,OAAAI,QAAA,MAAc,CAAd,CADgD;AAChC,WADzB;;AADA;;AAGA;;AACE;;AACF;;AACF;;AACE;;AACE;;AACA;;AAAkB;;AAAoB;;AACxC;;AACJ;;;;;;AAXS;;AAAA;;AASe;;AAAA;;;;;;;;AAQlB;;AAEE;;AACE;;AACA;AAAA;;AAAA;;AAAA;;AAAA;AAAA,aAAiD,OAAjD,EAAiD;AAAA;;AAAA;;AAAA,mBACxC,QAAAA,QAAA,MAAc,CAAd,CADwC;AACxB,WADzB;;AADA;;AAGA;;AACE;;AACF;;AACA;;AACE;;AACA;;AAAkB;;AAAgB;;AACpC;;AACF;;AACF;;;;;;AAXS;;AAAA;;AAQe;;AAAA;;;;;;AAM1B;;AACE;;AACF;;;;;;;;AAoCA;;AACE;;AACE;;AACA;AAAA;;AAAA;;AAAA;;AAAA;AAAA,aAAiD,OAAjD,EAAiD;AAAA;;AAAA;;AAAA,mBACxC,QAAAA,QAAA,MAAc,CAAd,CADwC;AACxB,WADzB;;AADA;;AAGA;;AACE;;AACA;;AAAkB;;AAAgB;;AACpC;;AACF;;AACF;;;;;;AARS;;AAAA;;AAKe;;AAAA;;;;;;AAM1B;;AACE;;AACF;;;;ADvFN,UAAM5c,IAAI,GAAG,CACX;AACE6c,kBAAU,EAAE;AADd,OADW,CAAb;;UAWaC,iB;AAgBX,mCACUC,QADV,EAEU1W,YAFV,EAGS2W,OAHT,EAISJ,QAJT,EAI2B;AAAA;;AAHjB,eAAAG,QAAA,GAAAA,QAAA;AACA,eAAA1W,YAAA,GAAAA,YAAA;AACD,eAAA2W,OAAA,GAAAA,OAAA;AACA,eAAAJ,QAAA,GAAAA,QAAA;AAnBT,eAAAK,SAAA,GAAY;AACV7Y,qBAAS,EAAE,IADD;AAEVD,kBAAM,EAAE,EAFE;AAGVpC,cAAE,EAAE;AAHM,WAAZ;AAMA,eAAAmb,OAAA,GAAU,EAAV;AACA,eAAAC,KAAA,GAAQ,EAAR;AAEA,eAAApW,YAAA,GAA4B,EAA5B;AAIA,eAAAqW,SAAA,GAAYpd,IAAZ;AAQC;;;;iBAED,oBAAQ;AACN,iBAAKgc,IAAL;AACA,iBAAKqB,OAAL;AACA,iBAAKC,SAAL;AACD;;;iBAGD,gBAAO;AACL;AACA,iBAAKC,KAAL,GAAa,KAAKH,SAAL,CAAeI,GAAf,CAAmB,UAAAlP,IAAI;AAAA,qBAAI,IAAI,oDAAJ,CAAc;AAAEmP,mBAAG,EAAEnP,IAAI,CAACuO,UAAZ;AAAwBa,qBAAK,EAAEpP,IAAI,CAACuO;AAApC,eAAd,CAAJ;AAAA,aAAvB,CAAb;AACA;AACA;;AACA,gBAAMc,WAAW,GAAG,KAAKX,OAAL,CAAaY,GAAb,CAAiB,UAAjB,CAApB,CALK,CAOL;;AACAD,uBAAW,CAACE,SAAZ,CAAsB;AACpBC,uBAAS,EAAE,qDAAUC,KADD;AAEpBC,2BAAa,EAAE,8DAAmBC;AAFd,aAAtB,EARK,CAYL;;AACAN,uBAAW,CAAC7N,IAAZ,CAAiB,KAAKyN,KAAtB;AACD;;;iBAED,mBAAU;AAAA;;AACR,iBAAKR,QAAL,CAAcM,OAAd,GAAwB7c,SAAxB,CACE,UAACR,IAAD,EAAU;AACR,qBAAI,CAACkd,OAAL,GAAeld,IAAf;AACA,qBAAI,CAACid,SAAL,GAAiB,OAAI,CAACC,OAAL,CAAa,CAAb,CAAjB,CAFQ,CAGR;AACD,aALH;AAOD;;;iBAED,qBAAY;AAAA;;AACV,iBAAKH,QAAL,CAAcO,SAAd,GAA0B9c,SAA1B,CACE,UAACR,IAAD,EAAU;AACR,qBAAI,CAACmd,KAAL,GAAand,IAAb,CADQ,CAER;AACD,aAJH;AAMD;;;iBAED,kBAAS0L,OAAT,EAA0BtH,SAA1B,EAA6C;AAAA;;AAC3C,gBAAMpE,IAAI,GAAG;AACX0L,qBAAO,EAAPA,OADW;AAEXwS,wBAAU,EAAE;AAFD,aAAb;AAIA,iBAAK7X,YAAL,CAAkB8X,cAAlB,CAAiCne,IAAjC,EAAuCQ,SAAvC,CACE,UAACR,IAAD,EAAe;AACb,qBAAI,CAACod,SAAL,GAAiB,EAAjB;AACA,kBAAMP,UAAU,GAAG;AACjBA,0BAAU,EAAGzY;AADI,eAAnB;AAIA,qBAAI,CAACgZ,SAAL,GAAiBpd,IAAjB;;AACA,qBAAI,CAACod,SAAL,CAAelU,IAAf,CAAoB2T,UAApB,EAPa,CAQb;;;AACA,qBAAI,CAACb,IAAL;AACD,aAXH;AAaD;;;;;;;yBApFUc,iB,EAAiB,kJ,EAAA,2I,EAAA,mH,EAAA,6H;AAAA,O;;;cAAjBA,iB;AAAiB,sC;AAAA,iB;AAAA,e;AAAA,s7B;AAAA;AAAA;AClB9B;;AAEA;;AACE;;AACE;;AAeF;;AAEA;;AACE;;AACI;;AACE;;AAeF;;AAEA;;AAIJ;;AACF;;AAuBA;;AACE;;AACE;;AAAU;;AACV;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AAWF;;AAEA;;AAIF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;AACF;;AAEF;;;;AA5GyB;;AAAA;;AAoB0B;;AAAA;;AAiBrB;;AAAA;;AAsC2B;;AAAA;;AAa7B;;AAAA;;;;;;;;;;;;;;;;;;;;;AC5F5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEA,UAAMsB,eAAe,GAAG,OAAxB;AAEO,UAAMC,yBAAyB,GAAG,oEAAQ,cAAR,EAAuB,CAC5D,uEAAW,SAAX,EAAsB,CACpB,kEAAM,gBAAN,EAAwB,CAAC,kEAAM;AAAE5Q,gBAAQ,EAAE,OAAZ;AAAqBnE,aAAK,EAAE;AAA5B,OAAN,CAAD,CAAxB,EAAuE;AAAEgV,gBAAQ,EAAE;AAAZ,OAAvE,CADoB,EAEpB,kEAAM,CACJ,kEAAM,QAAN,EAAgB,CACd,kEAAM;AAAEC,iBAAS,EAAE;AAAb,OAAN,CADc,EAEd,8EACKH,eADL,mBAEE,kEAAM;AAAEG,iBAAS,EAAE;AAAb,OAAN,CAFF,CAFc,CAAhB,EAMG;AAAED,gBAAQ,EAAE;AAAZ,OANH,CADI,EAQJ,kEAAM,QAAN,EAAgB,CACd,kEAAM;AAAEC,iBAAS,EAAE;AAAb,OAAN,CADc,EAEd,8EACKH,eADL,mBAEE,kEAAM;AAAEG,iBAAS,EAAE;AAAb,OAAN,CAFF,CAFc,CAAhB,EAMG;AAAED,gBAAQ,EAAE;AAAZ,OANH,CARI,CAAN,CAFoB,CAAtB,CAD4D,CAAvB,CAAlC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCKME,kB;AAIX,oCACS/e,SADT,EAEkCO,IAFlC,EAGUmQ,MAHV,EAGwB;AAAA;;AAFf,eAAA1Q,SAAA,GAAAA,SAAA;AACyB,eAAAO,IAAA,GAAAA,IAAA;AACxB,eAAAmQ,MAAA,GAAAA,MAAA;AANV,eAAAhC,KAAA,GAAQ,EAAR;AACA,eAAAjL,OAAA,GAAU,EAAV;AACA,eAAA7C,MAAA,GAAS,EAAT;AAME,eAAKA,MAAL,GAAcL,IAAI,CAACK,MAAnB;AACA,eAAK8N,KAAL,GAAanO,IAAI,CAACmO,KAAlB;AACA,eAAKjL,OAAL,GAAelD,IAAI,CAACkD,OAApB;AACA;;;;iBAEF,oBAAQ,CACP;;;iBAEK,oBAAQ;;;;;;AACZ,0BAAI,KAAK7C,MAAL,IAAe,QAAnB,EAA6B;AAC3B,6BAAK8P,MAAL,CAAYe,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACD,uBAFD,MAEO,IAAI,KAAK7Q,MAAL,IAAe,OAAnB,EAA4B;AACjC,6BAAK8P,MAAL,CAAYe,QAAZ,CAAqB,CAAC,mBAAD,CAArB;AACD,uBAFM,MAEA,IAAI,KAAK7Q,MAAL,KAAiB,IAArB,EAA2B,CAChC;AACD,uBAFM,MAEA;AACL,6BAAK8P,MAAL,CAAYe,QAAZ,CAAqB,CAAC,KAAK7Q,MAAN,CAArB;AACD;;yDACM,KAAKZ,SAAL,CAAea,KAAf,E;;;;;;;;;AACR;;;;;;;yBA5BUke,kB,EAAkB,sI,EAAA,gEAMnB,wEANmB,C,EAMJ,uH;AAAA,O;;;cANdA,kB;AAAkB,uC;AAAA,iB;AAAA,e;AAAA,qK;AAAA;AAAA;ACT/B;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;;;AAGF;;AACF;;AACA;;AACE;;AAA2B;AAAA,qBAAS,IAAAvd,QAAA,EAAT;AAAmB,aAAnB;;AAA0E;;AAAS;;AAChH;;AACF;;;;AAZI;;AAAA;;AAIO;;AAAA;;AAMoD;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCLlDwd,qB;AAEX,yCAAc;AAAA;AAAG;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA,qB;AAAqB,O;;;cAArBA,qB;AAAqB,2C;AAAA,gB;AAAA,e;AAAA,qF;AAAA;AAAA;ACPlC;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCaA;;;;;;;;;;AC0CM;;AACE;;AACE;;AAAoC;AAAA;;AAAA;;AAAA;AAAA;;AAAgB;;AAAmB;;AAEzE;;AACA;;AACE;;AAAyC;AAAA;;AAAA;;AAAA;AAAA;;AAAoB;;AAAc;;AAE7E;;AAIF;;;;;;;;;;;;;;;;UD7COC,gB;AA0DX,kCAC+BnM,SAD/B,EAEUpC,MAFV,EAGU/J,KAHV,EAIUvD,YAJV,EAKU4P,cALV,EAMU7S,KANV,EAOU4S,WAPV,EAQU7S,aARV,EASUgf,YATV,EAUU/c,aAVV,EAWU7B,aAXV,EAYUuG,MAZV,EAaUoM,YAbV,EAcU7Q,mBAdV,EAckD;AAAA;;AAAA;;AAbnB,eAAA0Q,SAAA,GAAAA,SAAA;AACrB,eAAApC,MAAA,GAAAA,MAAA;AACA,eAAA/J,KAAA,GAAAA,KAAA;AACA,eAAAvD,YAAA,GAAAA,YAAA;AACA,eAAA4P,cAAA,GAAAA,cAAA;AACA,eAAA7S,KAAA,GAAAA,KAAA;AACA,eAAA4S,WAAA,GAAAA,WAAA;AACA,eAAA7S,aAAA,GAAAA,aAAA;AACA,eAAAgf,YAAA,GAAAA,YAAA;AACA,eAAA/c,aAAA,GAAAA,aAAA;AACA,eAAA7B,aAAA,GAAAA,aAAA;AACA,eAAAuG,MAAA,GAAAA,MAAA;AACA,eAAAoM,YAAA,GAAAA,YAAA;AACA,eAAA7Q,mBAAA,GAAAA,mBAAA;AAvEV,eAAAgG,OAAA,GAAkB,KAAlB;AACA,eAAA8K,SAAA,GAAY,yBAAZ;AACA,eAAAC,SAAA,GAAY,6BAAZ;AACA,eAAAxP,IAAA,GAAO,8BAAP;AACA,eAAAyP,GAAA,GAAM,8BAAN;AACA,eAAAvS,KAAA,GAAQ,wBAAR;AAEA,eAAAwS,SAAA,GAAqB,KAArB;AAGA,eAAAzG,WAAA,GAAc,EAAd;AAIA,eAAAnJ,OAAA,GAAkB,EAAlB;AACA,eAAA+P,SAAA,GAAY,OAAZ;AAEA,eAAArH,YAAA,GAAuB,EAAvB;AACA,eAAAgT,YAAA,GAAuB,CAAvB;AACA,eAAA7L,MAAA,GAAS,6BAAT;AAEA,eAAAuB,QAAA,GAAmB,EAAnB;AACA,eAAAC,MAAA,GAAkB,KAAlB;AAEA,eAAAsK,YAAA,GAAwB,KAAxB;AAEA,eAAAxL,KAAA,GAAQ;AACNtR,cAAE,EAAE,CADE;AAENuR,gBAAI,EAAE,CAFA;AAGNC,kBAAM,EAAE,CAHF;AAINC,kBAAM,EAAE,CAJF;AAKNC,gBAAI,EAAE,KALA;AAMNC,kBAAM,EAAE;AANF,WAAR;AASA,eAAAvU,IAAA,GAAO;AACL4C,cAAE,EAAE,CADC;AAELqI,kBAAM,EAAE,IAFH;AAGLoJ,kBAAM,EAAE,IAHH;AAILvO,gBAAI,EAAE;AAJD,WAAP;AAoBQ,eAAA2P,QAAA,GAAuB,EAAvB;;AAoZA,eAAAC,SAAA,GAAY,YAAM;AACxBvV,mBAAO,CAACC,GAAR,CAAY,UAAZ;;AACA,mBAAI,CAACuV,IAAL,CAAUxJ,EAAV,CAAa,MAAb,EAAqB,UAACvJ,EAAD,EAAQ;AAC3BzC,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBwC,EAAxB;AACA,qBAAI,CAACgT,MAAL,GAAchT,EAAd;;AACA,qBAAI,CAACpC,aAAL,CAAmBmf,gBAAnB,CAAoC;AAAC/J,sBAAM,EAAE,OAAI,CAACA,MAAd;AAAsBtU,oBAAI,EAAE,OAAI,CAACgL,MAAL,GAAY;AAAxC,eAApC;AACD,aAJD;;AAMA,mBAAI,CAACqJ,IAAL,CAAUxJ,EAAV,CAAa,MAAb,EAAqB,UAAC0J,IAAD,EAAU;AAC7B,qBAAI,CAACC,MAAL;;AACA/G,uBAAS,CAACgH,YAAV,CAAuBC,YAAvB,CAAoC;AAClCC,qBAAK,EAAE,IAD2B;AAElCC,qBAAK,EAAE;AAF2B,eAApC,EAGGrK,IAHH,CAGQ,UAACsK,MAAD,EAAY;AAClB,uBAAI,CAACC,UAAL,GAAkBD,MAAlB;AACA,oBAAME,MAAM,GAAG,OAAI,CAACJ,KAAL,CAAWK,aAA1B;AACAD,sBAAM,CAACE,SAAP,GAAmBJ,MAAnB;;AACAE,sBAAM,CAACG,IAAP;;AAEAX,oBAAI,CAACY,MAAL,CAAYN,MAAZ;AACAN,oBAAI,CAAC1J,EAAL,CAAQ,QAAR,EAAkB,UAACuK,YAAD,EAAkB;AAClC,sBAAI,CAAC,OAAI,CAACjB,QAAL,CAAckB,QAAd,CAAuBd,IAAI,CAACF,IAA5B,CAAL,EAAwC;AACtC,2BAAI,CAACiB,iBAAL,CAAuBF,YAAvB;;AACA,2BAAI,CAACG,WAAL,GAAmBhB,IAAI,CAACiB,cAAxB;;AACA,2BAAI,CAACrB,QAAL,CAAc1L,IAAd,CAAmB8L,IAAI,CAACF,IAAxB;AACD;AACF,iBAND;AAOD,eAjBD,WAiBS,UAAAoB,GAAG,EAAI;AACd5W,uBAAO,CAACC,GAAR,CAAY2W,GAAG,GAAG,qBAAlB;AACD,eAnBD;AAoBD,aAtBD;AAuBD,WA/BO;;AAlYJ,eAAKpB,IAAL,GAAY,IAAI,6CAAJ,EAAZ;AACA,cAAM/S,EAAE,GAAG,KAAKqE,KAAL,CAAWgB,QAAX,CAAoB2X,QAApB,CAA6Bre,GAA7B,CAAiC,OAAjC,CAAX;AACA,eAAKgL,OAAL,GAAe9K,QAAQ,CAACmB,EAAD,CAAvB;AACD;;;;iBAEH,oBAAQ;AACN,gBAAI,CAAC,KAAK2J,OAAV,EAAmB;AACjB,mBAAKsT,SAAL;AACA,qBAAO,IAAP;AACD;;AACD,iBAAKC,QAAL;AACA,iBAAKC,SAAL;AACA,iBAAKnf,aAAL,CAAmBiB,QAAnB,CAA4B,KAAKmP,MAAL,CAAY/G,GAAxC;AACD;;;iBAEK,uBAAc;;;;;;;AACjB,6BAAM,KAAK+V,WAAL,EAAN;;;sCAA0B3e,S,CACzB,UAACR,IAAD,EAAU,CACR;AACD,uB;;;;;;;;;AAKJ,W,CAED;;;;iBACA,oBAAW;AAAA;;AACT,iBAAK6C,YAAL,CAAkBoc,QAAlB,CAA2B,KAAKvT,OAAhC,EAAyClL,SAAzC,CACI,UAACR,IAAD,EAAU;AACR;AACA,qBAAI,CAACuG,EAAL,GAAUvG,IAAI,CAACoE,SAAf;AACA,qBAAI,CAACiI,WAAL,GAAmBrM,IAAI,CAACmE,MAAxB;;AACA,kBAAInE,IAAI,CAACof,OAAL,CAAazD,MAAb,KAAwB,QAA5B,EAAsC;AACpC,uBAAI,CAACqD,SAAL;;AACA,uBAAO,IAAP;AACD;;AACD,qBAAI,CAACK,SAAL;AACD,aAVL;AAYD,W,CAED;;;;iBACA,qBAAY;AAAA;;AACR,iBAAKtf,aAAL,CAAmB6K,UAAnB,GAAgCpK,SAAhC,CACE,UAACR,IAAD,EAAU;AACR;AACA,qBAAI,CAACmK,QAAL,GAAgBnK,IAAI,CAAC+B,EAArB;AACA,qBAAI,CAAC6J,YAAL,GAAoB5L,IAAI,CAACmE,MAAzB;AACA,qBAAI,CAACya,YAAL,GAAoB5e,IAAI,CAACoK,MAAL,GAAcpK,IAAI,CAACoK,MAAL,CAAYA,MAA1B,GAAmC,CAAvD,CAJQ,CAIkD;;AAC1D,qBAAI,CAACiM,WAAL;AACD,aAPH;AASH;;;iBAED,uBAAc;AAAA;;AACZ,iBAAK5D,cAAL,CAAoB8D,YAApB,CAAiC,KAAK7K,OAAtC,EAA+ClL,SAA/C,CACE,UAACR,IAAD,EAAU;AACRV,qBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BS,IAA3B;AACA,qBAAI,CAACyL,MAAL,GAAczL,IAAI,CAACyL,MAAnB;;AAEA,kBAAIzL,IAAI,CAACyL,MAAL,KAAgB,IAApB,EAA0B;AACxB,uBAAI,CAAC6T,QAAL;;AACA,uBAAI,CAAC9d,KAAL,GAAa,CAAb;AACA,uBAAI,CAACiK,MAAL,GAAc,CAAd;AACA,uBAAO,KAAP;AACD;;AAED,qBAAI,CAACjK,KAAL,GAAaxB,IAAI,CAACwB,KAAL,GAAa,CAAb,GAAiB,CAAjB,GAAoBxB,IAAI,CAACwB,KAAtC;;AAEA,kBAAI,OAAI,CAAC2I,QAAL,KAAkBnK,IAAI,CAACmK,QAA3B,EAAqC;AACnC,uBAAI,CAAC6U,SAAL;;AACA,uBAAO,KAAP;AACD;;AACD,qBAAI,CAACxI,WAAL;;AACA,qBAAI,CAACC,UAAL;AACD,aApBH;AAsBD,W,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBAGA,uBAAc;AAAA;;AACZ,iBAAKjE,WAAL,CAAiBkF,UAAjB,CAA4B,KAAKjM,MAAjC,EAAyC,KAAzC,EAAgDjL,SAAhD,CACE,UAACR,IAAD,EAAU;AACR,qBAAI,CAACsU,QAAL,GAAgBtU,IAAhB;AACD,aAHH;AAKD;;;iBAED,sBAAa;AAAA;;AACX,iBAAKL,aAAL,CAAmBoX,OAAnB,CAA2B,KAAKtL,MAAhC,EAAwC,KAAKC,OAA7C;AAEA,iBAAK/L,aAAL,CAAmBqX,MAAnB,kBAAoC,KAAKvL,MAAzC,QAAoDjL,SAApD,CACE,UAACR,IAAD,EAAe;AACb;AACA,qBAAI,CAACwB,KAAL,GAAaxB,IAAI,GAAG,CAAP,GAAW,CAAX,GAAeA,IAA5B;AACA,qBAAI,CAACwB,KAAL,GAAaxB,IAAI,GAAG,CAAP,GAAW,CAAX,GAAeA,IAA5B;AACAV,qBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,OAAI,CAACiC,KAA3B;AACD,aANH;AASA,iBAAK7B,aAAL,CAAmBqX,MAAnB,kBAAoC,KAAKvL,MAAzC,QAAoDjL,SAApD,CACE,UAACR,IAAD,EAAe;AACb;AACA,qBAAI,CAACwB,KAAL,GAAaxB,IAAI,GAAG,CAAP,GAAW,CAAX,GAAeA,IAA5B;AACA,qBAAI,CAACwB,KAAL,GAAaxB,IAAI,GAAG,CAAP,GAAW,CAAX,GAAeA,IAA5B;AACAV,qBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,OAAI,CAACiC,KAA3B;AACD,aANH;AASA,iBAAK7B,aAAL,CAAmBqX,MAAnB,mBAAqC,KAAKvL,MAA1C,QAAqDjL,SAArD,CACE,UAACR,IAAD,EAAU;AACR;AACA,qBAAI,CAACwW,WAAL;AACD,aAJH;AAOA,iBAAK7W,aAAL,CAAmBqX,MAAnB,wBAA0C,KAAKvL,MAA/C,QAA0DjL,SAA1D,CACE,UAACR,IAAD,EAAU;AACR,qBAAI,CAACuU,MAAL,GAAc,IAAd;AACA,qBAAI,CAACsK,YAAL,GAAoB,IAApB;AACA,qBAAI,CAACrd,KAAL,GAAa,CAAb;;AACA,qBAAI,CAACmd,YAAL,CAAkBza,IAAlB,CAAuB,qBAAvB,EAA6C,mBAA7C,YACG,OAAI,CAACmI,WADR;AAED,aAPH;AAUA,iBAAKsK,SAAL;AACA,iBAAKR,aAAL;AACD;;;iBAED,oBAAW;AACT,iBAAKwI,YAAL,CAAkBza,IAAlB,CAAuB,qBAAvB,EAA6C,mBAA7C;AAED;;;iBAED,qBAAY;AAAA;;AACV,gBAAI,KAAKtE,KAAL,CAAWc,GAAX,CAAe,aAAf,CAAJ,EAAmC;AACjC,mBAAKuS,SAAL,GAAiB,KAAKrT,KAAL,CAAWc,GAAX,CAAe,aAAf,CAAjB;AACA,qBAAO,IAAP;AACD;;AAAA;AACD,iBAAK+R,cAAL,CAAoB8M,QAApB,GAA+B/e,SAA/B,CACE,UAACR,IAAD,EAAU;AACR,qBAAI,CAACiT,SAAL,GAAiBjT,IAAI,CAACwN,KAAtB;;AACA,qBAAI,CAAC5N,KAAL,CAAW2Q,GAAX,CAAe,aAAf,EAA8BvQ,IAAI,CAACwN,KAAnC;AACD,aAJH;AAMD;;;iBAED,uBAAc;AAAA;;AACZ,gBAAI,CAAC,KAAKtK,OAAV,EAAmB;AACnB,gBAAMlD,IAAI,GAAS;AACjByL,oBAAM,EAAE,KAAKA,MADI;AAEjBvI,qBAAO,EAAE,KAAKA,OAFG;AAGjBiU,yBAAW,EAAE,QAHI;AAIjBC,uBAAS,EAAE,KAAKjN,QAJC;AAKjBmN,0BAAY,EAAE,KAAKrE,SALF;AAMjBoE,uBAAS,EAAE;AANM,aAAnB;AAQA/X,mBAAO,CAACC,GAAR,CAAYS,IAAZ;AACA,iBAAKwS,WAAL,CAAiB+E,WAAjB,CAA6BvX,IAA7B,EAAmCQ,SAAnC,CACE,UAACR,IAAD,EAAU;AACR,qBAAI,CAACwW,WAAL;;AACA,kBAAMgB,GAAG,GAAe;AACtB/W,oBAAI,EAAE,OAAI,CAACgL,MAAL,GAAc,GADE;AAEtBE,oBAAI,EAAE,QAFgB;AAGtB5J,kBAAE,EAAE,OAAI,CAACoI,QAHa;AAItBjH,uBAAO,EAAE,OAAI,CAACA;AAJQ,eAAxB;;AAMA,qBAAI,CAACvD,aAAL,CAAmB8X,WAAnB,CAA+BD,GAA/B;;AACA,qBAAI,CAACtU,OAAL,GAAe,IAAf;AACD,aAXH;AAaD;;;iBAED,sBAAa;AACX,iBAAK4P,SAAL,GAAiB,CAAC,KAAKA,SAAvB;AACAxT,mBAAO,CAACC,GAAR,CAAY,KAAKuT,SAAjB;AACD;;;iBAGK,mBAAU;;;;;;;;;AAEZ,6BAAM,KAAK6E,UAAL,GAAkB3M,IAAlB,CACJ,UAAChL,IAAD,EAAU;AACR,+BAAI,CAACyS,cAAL,CAAoB3R,SAApB;;AACA,+BAAI,CAACnB,aAAL,CAAmBkY,QAAnB,CAA4B,OAAI,CAACpM,MAAjC,EAAyC,QAAzC,EAAmDT,IAAnD,CACE,YAAM;AACJ,iCAAI,CAACpL,KAAL,CAAWiB,MAAX,CAAkB,SAAlB;;AACA,iCAAI,CAACsP,MAAL,CAAYe,QAAZ,CAAqB,CAAC,qBAAD,CAArB;AACD,yBAJH;AAMD,uBATG,CAAN;;;AAUE,2BAAK+D,MAAL;;;;;;;;;AACL;;;iBAEK,sBAAa;;;;;;;;;AACXjV,0B,GAAO;AACX+B,0BAAE,EAAE,KAAKsR,KAAL,CAAWtR,EADJ;AAEXkD,4BAAI,EAAE,6EAAU+S,GAFL;AAGXzD,8BAAM,EAAE,IAHG;AAIXrL,4BAAI,EAAE,IAAIuP,IAAJ,GAAWJ,QAAX;AAJK,uB,EAMb;;;AACO,6BAAM,KAAK3F,YAAL,CAAkBgG,WAAlB,CAA8B1Y,IAA9B,EAAoCQ,SAApC,CACX,UAACR,IAAD,EAAU;AACR;AACA,+BAAI,CAACqT,KAAL,CAAWK,MAAX,GAAoB,IAApB;AACD,uBAJU,CAAN;;;;;;;;;;;;AAMR;;;iBAED,eAAM;AACJ,gBAAMjU,SAAS,GAAG,KAAK6G,MAAL,CAAY+C,IAAZ,CAAiB,iGAAjB,EAAqC;AACrDC,mBAAK,EAAE,MAD8C;AAErDtJ,kBAAI,EAAE;AAF+C,aAArC,CAAlB;AAIAP,qBAAS,CAAC8J,WAAV,GAAwB/I,SAAxB,CAAkC,UAAA4E,MAAM,EAAI,CAAE,CAA9C;AACD;;;iBAED,qBAAY;AACV,iBAAKuZ,YAAL,CAAkBza,IAAlB,CAAuB,IAAvB,EAA4B,mBAA5B;AAEA,iBAAK2a,YAAL,GAAoB,IAApB;AACD;;;iBAEK,qBAAY;;;;;;;;;AACT,6BAAM,KAAK9e,aAAL,CAAmBuW,SAAnB,GAA+B9V,SAA/B,CACX,UAACR,IAAD,EAAU;AACR,+BAAI,CAAC4e,YAAL,GAAoB5e,IAAI,CAACoK,MAAzB;AACA9K,+BAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,OAAI,CAACqf,YAAnC;AACA,4BAAI,OAAI,CAACzf,IAAL,CAAUiL,MAAV,GAAmB,OAAI,CAACwU,YAA5B,EAA0C,OAAO,IAAP;AAC1C,+BAAI,CAACvL,KAAL,CAAWI,IAAX,GAAkB,IAAlB,CAJQ,CAKR;;AAAA;AACA,4BAAI,CAAC,OAAI,CAACJ,KAAL,CAAWK,MAAhB,EAAwB;AACtB,iCAAI,CAAC7R,mBAAL,CAAyB8G,OAAzB,CAAiC,oBAAjC,EAAuD,0BAAvD;AACD;AACF,uBAVU,CAAN;;;;;;;;;;;;AAYR,W,CAEC;;;;iBACM,qBAAY;;;;;;;;AAChB,2BAAK+J,YAAL,CAAkB8M,QAAlB,CAA2B,KAAK9T,OAAhC,EAAyC,6EAAUsM,GAAnD,EAAwDxX,SAAxD,CACE,UAAOR,IAAP;AAAA,+BAAgB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACd;AACMiY,yCAFQ,GAEQjY,IAAI,CAAC8O,SAFb;AAGRoJ,yCAHQ,GAGQlY,IAAI,CAACmY,SAHb;AAId,uCAAK9E,KAAL,CAAWtR,EAAX,GAAgB/B,IAAI,CAAC+B,EAArB,CAJc,CAKd;;AALc,2DAMiB,KAAK2Q,YAAL,CAAkB0F,WAAlB,CAA8BH,OAAO,CAACI,QAAR,EAA9B,EAAkDH,OAAO,CAACG,QAAR,EAAlD,CANjB,EAMP/E,IANO,0BAMPA,IANO,EAMDC,MANC,0BAMDA,MANC,EAMOC,MANP,0BAMOA,MANP;AAOd,uCAAKH,KAAL,CAAWC,IAAX,GAAkBA,IAAlB;AACA,uCAAKD,KAAL,CAAWE,MAAX,GAAoBA,MAApB;AACA,uCAAKF,KAAL,CAAWG,MAAX,GAAoBA,MAApB,CATc,CAUd;;AAVc;AAWd,yCAAM,KAAKoD,WAAL,EAAN;;AAXc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAhB;AAAA,uBADF;;;;;;;;;AAeD;;;iBAEK,uBAAc;;;;;;;;;AACX,6BAAM,KAAKlE,YAAL,CAAkBkE,WAAlB,CAA8B,6EAAUoB,GAAxC,EAA6CxX,SAA7C,CACX,UAACR,IAAD,EAAe;AACb,+BAAI,CAACb,IAAL,CAAU4C,EAAV,GAAe/B,IAAI,CAAC+B,EAApB;AACA,+BAAI,CAAC5C,IAAL,CAAUiL,MAAV,GAAmBpK,IAAI,CAACoK,MAAxB;AACA,+BAAI,CAACjL,IAAL,CAAUqU,MAAV,GAAmBxT,IAAI,CAACwT,MAAxB;AACA,+BAAI,CAACrU,IAAL,CAAU8F,IAAV,GAAiBjF,IAAI,CAACiF,IAAtB,CAJa,CAKb;;AAAA;AACA,4BAAI,OAAI,CAAC2Z,YAAL,GAAoB,OAAI,CAACzf,IAAL,CAAUiL,MAAlC,EAA0C;AACxC,iCAAI,CAACqV,WAAL;;AACA,iCAAO,IAAP;AACD,yBAHD,MAGO,IAAI,OAAI,CAACb,YAAL,IAAsB,OAAI,CAACzf,IAAL,CAAUiL,MAAV,GAAmB,CAA7C,EAAiD;AACtD,iCAAI,CAACsV,iBAAL;;AACA,iCAAO,IAAP;AACD;;AACD,+BAAI,CAACnH,UAAL;AACD,uBAfU,CAAN;;;;;;;;;;;;AAiBR;;;iBAED,6BAAoB;AAAA;;AAClB,iBAAKoG,YAAL,CAAkBza,IAAlB,CAAuB,IAAvB,EAA4B,oBAA5B;AAEAyb,sBAAU,CACR,YAAM;AACJ,qBAAI,CAACrJ,SAAL;AAED,aAJO,EAIL,KAJK,CAAV;AAMD;;;iBAED,uBAAc;AACZ,iBAAKjD,KAAL,CAAWI,IAAX,GAAkB,IAAlB;AACA,iBAAKkL,YAAL,CAAkBza,IAAlB,CAAuB,kBAAvB,EAA0C,iBAA1C;AAED;;;iBAEK,sBAAa;;;;;;;;;AACXsU,2B,GAAQ,KAAKrZ,IAAL,CAAUqU,MAAV,GAAmB,I,EACjC;;;AACO,6BAAM,KAAK2L,WAAL,EAAN;;;;AAAP,6CAAiC3e,SAAjC,EAA4C;AAC1C,gCAACR,IAAD,EAAe;AACb;AACA,+BAAI,CAAC4e,YAAL,GAAoB5e,IAAI,CAACoK,MAAL,GAAcpK,IAAI,CAACoK,MAAnB,GAA4B,CAAhD;;AACA,4BAAIpK,IAAI,CAACoK,MAAL,IAAe,CAAnB,EAAsB;AACpB,iCAAI,CAACqV,WAAL;;AACA,iCAAO,IAAP;AACD,yBAHD,MAGO,IAAIzf,IAAI,CAACoK,MAAL,IAAgB,OAAI,CAACjL,IAAL,CAAUiL,MAAV,GAAmB,CAAvC,EAA2C;AAChD,iCAAI,CAACsV,iBAAL;;AACA,iCAAO,IAAP;AACD;AACF,uBAXH;;;AAaA3S,iCAAW,CACT;AAAA,+BAAY;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sCACL,KAAKsG,KAAL,CAAWK,MADN;AAAA;AAAA;AAAA;;AAAA;AAED,yCAAM,KAAKyL,WAAL,EAAN;;AAFC;AAAA;AAER,yDAAiC3e,SAAjC,CACE,UAACR,IAAD,EAAe;AACb;AACA,2CAAI,CAAC4e,YAAL,GAAoB5e,IAAI,CAACoK,MAAL,GAAcpK,IAAI,CAACoK,MAAnB,GAA4B,CAAhD;;AACA,wCAAIpK,IAAI,CAACoK,MAAL,IAAe,CAAnB,EAAsB;AACpB,6CAAI,CAACqV,WAAL;;AACA,6CAAO,IAAP;AACD,qCAHD,MAGO,IAAIzf,IAAI,CAACoK,MAAL,IAAgB,OAAI,CAACjL,IAAL,CAAUiL,MAAV,GAAmB,CAAvC,EAA2C;AAChD,6CAAI,CAACsV,iBAAL;;AACA,6CAAO,IAAP;AACD;AACF,mCAXH;;AAFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAZ;AAAA,uBADS,EAiBNlH,KAjBM,CAAX;;;;;;;;;AAmBD;;;iBAEK,uBAAc;;;;;;;4BACb,KAAKrO,QAAL,KAAkByV,SAAnB,IAAkC,KAAKzgB,IAAL,CAAUiL,MAAV,IAAoB,I;;;;;yDAAc,I;;;AAClEpK,0B,GAAoB;AACxBmK,gCAAQ,EAAE,KAAKA,QADS;AAExBuB,+BAAO,EAAE,KAAKA,OAFU;AAGxBmU,+BAAO,EAAE,KAAKxM,KAAL,CAAWtR,EAHI;AAIxB+d,kCAAU,EAAE,KAAK3gB,IAAL,CAAUiL,MAJE;AAKxB2V,kCAAU,EAAE,KAAK5gB,IAAL,CAAUqU,MALE;AAMxBwM,gCAAQ,EAAE,KAAK7gB,IAAL,CAAU8F,IANI;AAOxBgb,8BAAM,EAAE,KAAKxU;AAPW,uB,EAS1B;;;AACO,6BAAM,KAAKiH,YAAL,CAAkByM,WAAlB,CAA8Bnf,IAA9B,CAAN;;;;;;;;;;;;AACR,W,CAEH;;;;iBACA,yBAAgB;AACd,iBAAK2Y,OAAL;AACA,iBAAK9D,SAAL;AACD;;;iBAED,mBAAO;AAAA;;AACL,gBAAG,0EAAkB,KAAKtC,SAAvB,KAAqC,kBAAkBrE,SAA1D,EAAqE;AACnEA,uBAAS,CAACgH,YAAV,CAAuBC,YAAvB,CAAoC;AAACC,qBAAK,EAAE;AAAR,eAApC,EAAmDpK,IAAnD,CAAwD,UAAC4N,EAAD,EAAqB;AAC3E,oBAAMpD,MAAM,GAAG,OAAI,CAACJ,KAAL,CAAWK,aAA1B;AACAD,sBAAM,CAACE,SAAP,GAAmBkD,EAAnB;;AACApD,sBAAM,CAACG,IAAP;AACD,eAJD;AAKD;AACF;;;iBAED,kBAAS;AACP,gBAAI,KAAKP,KAAT,EAAgB;AACd,mBAAKA,KAAL,CAAWK,aAAX,CAAyBoD,KAAzB;;AACA,kBAAK,KAAKzD,KAAL,CAAWK,aAAX,CAAyBC,SAAzB,CAAmDoD,cAAnD,GAAoE,CAApE,CAAL,EAA6E;AAC1E,qBAAK1D,KAAL,CAAWK,aAAX,CAAyBC,SAAzB,CAAmDoD,cAAnD,GAAoE,CAApE,EAAuEC,IAAvE;AACF;;AACD,mBAAK3D,KAAL,CAAWK,aAAX,CAAyBC,SAAzB,GAAqC,IAArC;AACD;AACF;;;iBAmCD,2BAAe;AACb,iBAAKsD,QAAL,CAAc,KAAK/B,WAAnB;AACD;;;iBAEO,kBAASlV,EAAT,EAAmB;AAAA;;AACzBmM,qBAAS,CAACgH,YAAV,CAAuBC,YAAvB,CAAoC;AAClCC,mBAAK,EAAE,IAD2B;AAElCC,mBAAK,EAAE;AAF2B,aAApC,EAGGrK,IAHH,CAGQ,UAACsK,MAAD,EAAY;AAClB,qBAAI,CAACC,UAAL,GAAkBD,MAAlB;;AAEA,kBAAMN,IAAI,GAAG,OAAI,CAACF,IAAL,CAAUE,IAAV,CAAejT,EAAf,EAAmBuT,MAAnB,CAAb;;AACAN,kBAAI,CAAC1J,EAAL,CAAQ,QAAR,EAAkB,UAACuK,YAAD,EAAkB;AAClC,oBAAI,CAAC,OAAI,CAACjB,QAAL,CAAckB,QAAd,CAAuBd,IAAI,CAACF,IAA5B,CAAL,EAAwC;AACtC,yBAAI,CAACiB,iBAAL,CAAuBF,YAAvB;;AACA,yBAAI,CAACG,WAAL,GAAmBhB,IAAI,CAACiB,cAAxB;;AACA,yBAAI,CAACrB,QAAL,CAAc1L,IAAd,CAAmB8L,IAAI,CAACF,IAAxB;AACD;AACF,eAND;AAOD,aAdD,WAcS,UAAAoB,GAAG,EAAI;AACd5W,qBAAO,CAACC,GAAR,CAAY2W,GAAG,GAAG,mBAAlB;AACD,aAhBD;AAiBD;;;iBAEO,2BAAkBZ,MAAlB,EAA6B;AACnC,gBAAME,MAAM,GAAG,KAAKyD,YAAL,CAAkBxD,aAAjC;AACAD,kBAAM,CAACE,SAAP,GAAmBJ,MAAnB;;AACAE,kBAAM,CAACG,IAAP;AACD;;;;;;;yBAzgBU+I,gB,EAAgB,gEA2DjB,yDA3DiB,C,EA2DN,uH,EAAA,+H,EAAA,kJ,EAAA,kJ,EAAA,sI,EAAA,gJ,EAAA,sJ,EAAA,4I,EAAA,+I,EAAA,+I,EAAA,oI,EAAA,4I,EAAA,iK;AAAA,O;;;cA3DVA,gB;AAAgB,qC;AAAA;AAAA;;;;;;;;;;;;;;;;;;AC9B7B;;AAGA;;AACE;;AAAkC;AAAA,qBAAS,IAAAxF,UAAA,EAAT;AAAqB,aAArB;;AAAlC;;AACA;;AACE;;AAOA;;AACE;;AAEE;;AAGF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAG;;AAAI;;AACP;;AACE;;AACF;;AACF;;AACA;;AAaF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AAAoC;AAAA,qBAAS,IAAAgH,GAAA,EAAT;AAAc,aAAd;;AAAgB;;AAAmB;;AAEzE;;AACA;;AACE;;AAAyC;AAAA,qBAAS,IAAA/G,OAAA,EAAT;AAAkB,aAAlB;;AAAoB;;AAAc;;AAE7E;;AACF;;AAGA;;AAcF;;AACA;;AACE;;AACE;;AACE;;AACA;;AACA;;AACF;;AACA;;AAAM;AAAA,qBAAY,IAAA1B,WAAA,EAAZ;AAAyB,aAAzB;;AACN;;AACI;;AAC2C;AAAA;AAAA;;AAD3C;;AAEA;;AACE;;AACE;;AACF;;AACF;;AACJ;;AACF;;AACA;;AACF;;AACF;;AAEF;;;;AAjGuB;;AAAA;;AAChB;;AAAA;;AAES;;AAAA,6FAAmB,OAAnB,EAAmB,SAAnB,EAAmB,MAAnB,EAAmB,cAAnB,EAAmB,QAAnB,EAAmB,gBAAnB,EAAmB,QAAnB,EAAmB,gBAAnB,EAAmB,QAAnB,EAAmB,gBAAnB,EAAmB,QAAnB,EAAmB,UAAnB;;AAQkB;;AAAA;;AAED;;AAAA;;AAKT;;AAAA;;AAWI;;AAAA,6FAAmB,UAAnB,EAAmB,YAAnB,EAAmB,aAAnB,EAAmB,eAAnB,EAAmB,QAAnB,EAAmB,UAAnB,EAAmB,QAAnB,EAAmB,MAAnB;;AA+B6B;;AAAA;;AAkB1C;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAKwC;;AAAA;;AAGlC;;AAAA;;;;;;;;;;;;;;;;;;;;;AC3FrB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,UAAM1H,WAAW,GAAG;AAClBC,eAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAE,0BAAgB;AAAlB,SAAhB;AADS,OAApB;;UAOamQ,Y;AAGX,8BACUjQ,IADV,EAEUtQ,KAFV,EAEoC;AAAA;;AAD1B,eAAAsQ,IAAA,GAAAA,IAAA;AACA,eAAAtQ,KAAA,GAAAA,KAAA;AAJV,eAAAwQ,QAAA,GAAW,yEAAYA,QAAvB;AAKK;;;;iBAEL,qBAAY6H,OAAZ,EAA6BC,OAA7B,EAA8C;AAC5C,gBAAIkI,IAAI,GAAG,CAAX;AAAc,gBAAI9M,IAAI,GAAG,CAAX;AAAc,gBAAIC,MAAM,GAAG,CAAb;AAAgB,gBAAIC,MAAM,GAAG,CAAb;AAE5C,gBAAI6M,WAAW,GAAGzf,QAAQ,CAACqX,OAAO,CAACjJ,SAAR,CAAkB,EAAlB,EAAsB,EAAtB,CAAD,CAA1B;AACA,gBAAIsR,WAAW,GAAG1f,QAAQ,CAACsX,OAAO,CAAClJ,SAAR,CAAkB,EAAlB,EAAsB,EAAtB,CAAD,CAA1B;AAEA,gBAAIuR,UAAU,GAAG3f,QAAQ,CAACqX,OAAO,CAACjJ,SAAR,CAAkB,EAAlB,EAAsB,EAAtB,CAAD,CAAzB;AACA,gBAAIwR,UAAU,GAAG5f,QAAQ,CAACsX,OAAO,CAAClJ,SAAR,CAAkB,EAAlB,EAAsB,EAAtB,CAAD,CAAzB;AAEA,gBAAIyR,UAAU,GAAG7f,QAAQ,CAACqX,OAAO,CAACjJ,SAAR,CAAkB,EAAlB,EAAsB,EAAtB,CAAD,CAAzB;AACA,gBAAI0R,UAAU,GAAG9f,QAAQ,CAACsX,OAAO,CAAClJ,SAAR,CAAkB,EAAlB,EAAsB,EAAtB,CAAD,CAAzB;;AAEA,mBAAOqR,WAAW,GAAGC,WAArB,EAAkC;AAChCG,wBAAU;;AACV,kBAAIA,UAAU,GAAG,EAAjB,EAAqB;AAACF,0BAAU;AAAIE,0BAAU,GAAG,CAAb;AAAgB;;AACpD,kBAAIF,UAAU,GAAG,EAAjB,EAAqB;AAACF,2BAAW;AAAIE,0BAAU,GAAG,CAAb;AAAgB;;AACrDH,kBAAI;AACL;;AAED,mBAAOG,UAAU,GAAGC,UAApB,EAAgC;AAC9BC,wBAAU;;AACV,kBAAIA,UAAU,GAAG,EAAjB,EAAqB;AAACF,0BAAU;AAAIE,0BAAU,GAAG,CAAb;AAAgB;;AACpDL,kBAAI;AACL;;AAED,mBAAOK,UAAU,GAAGC,UAApB,EAAgC;AAC9BD,wBAAU;AAAIL,kBAAI;AACnB,aA3B2C,CA4B5C;;;AAEA9M,gBAAI,GAAGpL,IAAI,CAACC,KAAL,CAAWiY,IAAI,GAAG,IAAlB,CAAP;AACA7M,kBAAM,GAAGrL,IAAI,CAACC,KAAL,CAAYiY,IAAI,GAAG,IAAR,GAAgB,EAA3B,CAAT;AACA5M,kBAAM,GAAI4M,IAAI,GAAG,IAAR,GAAgB,EAAzB;AAEA,mBAAO;AAAC9M,kBAAI,EAAJA,IAAD;AAAOC,oBAAM,EAANA,MAAP;AAAeC,oBAAM,EAANA;AAAf,aAAP;AACD;;;iBAED,kBAAS9H,OAAT,EAA0BzG,IAA1B,EAAyC;AACvC,gBAAMjF,IAAI,GAAG;AACX0L,qBAAO,EAAEA,OADE;AAEXzG,kBAAI,EAAEA;AAFK,aAAb;AAIA,mBAAO,KAAKiL,IAAL,CAAUQ,IAAV,WAAkB,KAAKN,QAAvB,aAAwCpQ,IAAxC,EAA8C+P,WAA9C,CAAP;AACD;;;iBAED,qBAAY9K,IAAZ,EAA6B;AAC3B,mBAAO,KAAKiL,IAAL,CAAUxP,GAAV,WAAiB,KAAK0P,QAAtB,wBAA4CnL,IAA5C,GAAoD8K,WAApD,CAAP;AACD;;;iBAED,qBAAY/P,IAAZ,EAAkB;AAChB,mBAAO,KAAKkQ,IAAL,CAAUQ,IAAV,WAAkB,KAAKN,QAAvB,oBAAgDpQ,IAAhD,EAAsD+P,WAAtD,CAAP;AACD;;;iBAED,qBAAY/P,IAAZ,EAA+B;AAC7B;AACA,mBAAO,KAAKkQ,IAAL,CAAUQ,IAAV,WAAkB,KAAKN,QAAvB,oBAAgDpQ,IAAhD,EAAsD+P,WAAtD,CAAP;AACD;;;iBAED,yBAAgBrE,OAAhB,EAAiCzG,IAAjC,EAAgD;AAC9C,gBAAMjF,IAAI,GAAG;AACX0L,qBAAO,EAAEA,OADE;AAEXzG,kBAAI,EAAEA;AAFK,aAAb;AAIA,mBAAO,KAAKiL,IAAL,CAAUQ,IAAV,WAAkB,KAAKN,QAAvB,6BAAwDpQ,IAAxD,EAA8D+P,WAA9D,CAAP;AACD;;;;;;;yBAxEUoQ,Y,EAAY,uH,EAAA,4H;AAAA,O;;;eAAZA,Y;AAAY,iBAAZA,YAAY,K;AAAA,oBAFX;;;;;;;;;;;;;;;;;ACVd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;UAaaQ,uB;AASX,yCACUC,OADV,EAEUzQ,MAFV,EAGU7J,MAHV,EAIUzD,YAJV,EAIoC;AAAA;;AAH1B,eAAA+d,OAAA,GAAAA,OAAA;AACA,eAAAzQ,MAAA,GAAAA,MAAA;AACA,eAAA7J,MAAA,GAAAA,MAAA;AACA,eAAAzD,YAAA,GAAAA,YAAA;AAZV,eAAAxB,cAAA,GAAiB,KAAjB;AACA,eAAAwf,IAAA,GAAO,+BAAP;AACA,eAAAC,QAAA,GAAW,2BAAX;AAIA,eAAAvf,MAAA,GAAiB,CAAjB;AAOO;;;;iBAEP,oBAAQ;AACN,gBAAI,KAAKC,KAAT,EAAgB,KAAKD,MAAL,GAAcX,QAAQ,CAAC,KAAKY,KAAN,CAAtB;AACjB;;;iBAED,uBAAcC,OAAd,EAA+B;AAC7B,gBAAIA,OAAO,KAAK,mBAAhB,EAAqC;AACnCnC,qBAAO,CAACC,GAAR,CAAY,KAAK8B,cAAjB;AACA,mBAAKA,cAAL,GAAsB,KAAKA,cAAL,KAAwB,KAAxB,GAAgC,IAAhC,GAAuC,KAA7D;AACA/B,qBAAO,CAACC,GAAR,CAAY,KAAK8B,cAAjB;AACD;AACF;;;iBAED,kBAAS;AACP,gBAAM5B,SAAS,GAAG,KAAK6G,MAAL,CAAY+C,IAAZ,CAAiB,qHAAjB,EAAyC;AACzDC,mBAAK,EAAE,MADkD;AAEzDtJ,kBAAI,EAAE;AAACK,sBAAM,EAAE;AAAT;AAFmD,aAAzC,CAAlB;AAKAZ,qBAAS,CAAC8J,WAAV,GAAwB/I,SAAxB,CAAkC,UAAA4E,MAAM,EAAI,CAAE,CAA9C;AACD;;;iBAED,oBAAW;AAAA;;AACT,iBAAKvC,YAAL,CAAkBR,OAAlB,GAA4B7B,SAA5B,CACE,UAACR,IAAD,EAAU;AACR,kBAAM2b,MAAM,GAAG3b,IAAI,CAACof,OAAL,CAAazD,MAA5B;;AACA,kBAAIA,MAAM,KAAK,SAAf,EAA0B;AACxB,uBAAI,CAACxL,MAAL,CAAYe,QAAZ,CAAqB,CAAC,sBAAD,CAArB;AACD,eAFD,MAEO,IAAIyK,MAAM,KAAK,QAAf,EAAyB;AAC9B,uBAAI,CAACxL,MAAL,CAAYe,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD,eAFM,MAEA;AACL,uBAAI,CAACf,MAAL,CAAYe,QAAZ,CAAqB,CAAC,cAAD,CAArB;AACD;AACF,aAVH;AAYD;;;;;;;yBAlDUyP,uB,EAAuB,wI,EAAA,uH,EAAA,mI,EAAA,2I;AAAA,O;;;cAAvBA,uB;AAAuB,4C;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,gB;AAAA,+e;AAAA;AAAA;ACdpC;;AACE;;AACA;;AAEA;;AAAsB;AAAA,qBAAS,IAAAjf,aAAA,CAAc,mBAAd,CAAT;AAA2C,aAA3C;;AAA6C;;AACrE;;AAEA;;AAEE;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AAA8C;;AAChD;;AAEA;;AAA4D;AAAA,qBAAS,IAAAqf,QAAA,EAAT;AAAmB,aAAnB;;AAC1D;;AACA;;AACF;;AAEA;;AAAuB;AAAA,qBAAS,IAAAC,MAAA,EAAT;AAAiB,aAAjB;;AACrB;;AACA;;AACF;;AAEF;;;;AA/BO;;AAAA;;AACA;;AAAA,uJAAgB,SAAhB,EAAgB,uFAAhB;;AAKwB;;AAAA;;AAEP;;AAAA;;AAI4B;;AAAA;;AAK3B;;AAAA;;AAChB;;AAAA;;AAGiB;;AAAA;;AACjB;;AAAA;;AAImC;;AAAA;;;;;;qBDf9B,CAAC,qEAAD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEXZ;;AACE;;AACE;;AACE;;AAAO;;AAAM;;AAAE;;AACjB;;AACF;;AACA;;AACE;;AACF;;AACF;;;;;;AAFyB;;AAAA;;;;;;AAIzB;;AACE;;AACE;;AACE;;AAAO;;AAAM;;AAAE;;AACjB;;AACF;;AACA;;AACE;;AACF;;AACF;;;;;;AAFsB;;AAAA;;;;;;AAItB;;AACE;;AACE;;AACE;;AAAO;;AAAM;;AAAE;;AACjB;;AACF;;AACA;;AACE;;AACF;;AACF;;;;;;AAFmB;;AAAA;;;;;;;;;;UCrBRC,e;AAkBX,mCAAc;AAAA;;AAfd,eAAAC,WAAA,GAAuB,KAAvB;AAIA,eAAAC,WAAA,GAAuB,IAAvB;AAIA,eAAAC,OAAA,GAAmB,KAAnB;AACA,eAAAC,SAAA,GAAqB,KAArB;AAIA,eAAAC,OAAA,GAAkB,CAAlB;AAGC;;;;iBAED,oBAAQ;AACN,gBAAI,KAAKC,SAAT,EAAoB,KAAKL,WAAL,GAAoB,KAAKK,SAAL,IAAkB,MAAtC;AACpB,gBAAI,KAAKC,SAAT,EAAoB,KAAKL,WAAL,GAAoB,KAAKK,SAAL,IAAkB,MAAtC;AACpB,gBAAI,KAAK/F,KAAT,EAAgB,KAAK2F,OAAL,GAAgB,KAAK3F,KAAL,IAAc,MAA9B;AAChB,gBAAI,KAAKja,KAAT,EAAgB,KAAK8f,OAAL,GAAe1gB,QAAQ,CAAC,KAAKY,KAAN,CAAvB;AACjB;;;;;;;yBA1BUyf,e;AAAe,O;;;cAAfA,e;AAAe,mC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,sS;AAAA;AAAA;ADV5B;;AAEE;;AAWA;;AAWA;;AAWF;;;;AAnC4B;;AAEa;;AAAA;;AAWG;;AAAA;;AAWH;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEf/B;;AAA6E;;AAAmB;;;;;;AADlG;;AACE;;AACF;;;;;;AADU;;AAAA;;;;;;AAOR;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AANF;;AACE;;AAGA;;AAGF;;;;;;AANU;;AAAA;;AAGA;;AAAA;;;;;;AASR;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AANF;;AACE;;AAGA;;AAGF;;;;;;AANU;;AAAA;;AAGA;;AAAA;;;;;;AAIV;;AACE;;AACE;;AACF;;AACF;;;;UC5BKQ,iB;AAKX,mCACUC,WADV,EAEU3hB,aAFV,EAGU8B,mBAHV,EAISpC,SAJT,EAImD;AAAA;;AAHzC,eAAAiiB,WAAA,GAAAA,WAAA;AACA,eAAA3hB,aAAA,GAAAA,aAAA;AACA,eAAA8B,mBAAA,GAAAA,mBAAA;AACD,eAAApC,SAAA,GAAAA,SAAA;AAPT,eAAAkiB,SAAA,GAAqB,KAArB;AACA,eAAAC,aAAA,GAAgB,IAAhB;;AAuBA,eAAAC,SAAA,GAAY,UAACC,WAAD,EAAuBC,gBAAvB,EAAqD;AAC/D,mBAAO,UAACC,SAAD,EAA0B;AAC/B,kBAAMC,OAAO,GAAGD,SAAS,CAACE,QAAV,CAAmBJ,WAAnB,CAAhB;AACA,kBAAMK,eAAe,GAAGH,SAAS,CAACE,QAAV,CAAmBH,gBAAnB,CAAxB;;AAEA,kBAAII,eAAe,CAACC,MAAhB,IAA0B,CAACD,eAAe,CAACC,MAAhB,CAAuBP,SAAtD,EAAiE;AAC7D;AACH;;AACD,kBAAII,OAAO,CAAC5P,KAAR,KAAkB8P,eAAe,CAAC9P,KAAtC,EAA6C;AACzC8P,+BAAe,CAACE,SAAhB,CAA0B;AAAER,2BAAS,EAAE;AAAb,iBAA1B;AACH,eAFD,MAEO;AACHM,+BAAe,CAACE,SAAhB,CAA0B,IAA1B;AACH;AACJ,aAZC;AAaD,WAdD;;AAfE,eAAKC,YAAL,GAAoB,KAAKZ,WAAL,CAAiBa,KAAjB,CAAuB;AACzCC,uBAAW,EAAG,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CAD2B;AAEzC;AACA3R,uBAAW,EAAG,CAAC,EAAD,EAAK,0DAAW2R,QAAhB,CAH2B;AAIzCtI,2BAAe,EAAE,CAAC,EAAD,EAAI,0DAAWsI,QAAf;AAJwB,WAAvB,EAKlB;AACAC,sBAAU,EAAG,KAAKb,SAAL,CAAe,aAAf,EAA6B,iBAA7B;AADb,WALkB,CAApB;AAQD;;;;iBAED,oBAAQ,CACP;;;eAED,eAAW;AAAC,mBAAO,KAAKS,YAAL,CAAkBJ,QAAzB;AAAkC;;;iBAkBxC,kBAASjjB,KAAT,EAAc;;;;;;;;;AAClB,2BAAK0iB,SAAL,GAAiB,IAAjB;AACA1iB,2BAAK,CAAC0jB,cAAN;AACA,2BAAKf,aAAL,GAAqB,IAArB;;2BACG,KAAKU,YAAL,CAAkBM,O;;;;;;;;AAGjBC,+B,GAAY,KAAKP,YAAL,CAAkBjQ,K;AAClC,2BAAKtS,aAAL,CAAmB+iB,cAAnB,CAAkCD,SAAS,CAACL,WAA5C,EAAyDK,SAAS,CAAC/R,WAAnE,EAAgFtQ,SAAhF,CACE,UAACR,IAAD,EAAe;AACbV,+BAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCS,IAAhC;;AACA,4BAAIA,IAAI,CAACG,KAAT,EAAgB;AACd,iCAAI,CAACyhB,aAAL,GAAqB5hB,IAAI,CAACkD,OAA1B;AACD,yBAFD,MAEO;AACL,iCAAI,CAACrB,mBAAL,CAAyBU,OAAzB,CAAiC,cAAjC,EAAiD,SAAjD;;AACA,iCAAI,CAAC9C,SAAL,CAAea,KAAf,CAAqB,SAArB;AACD;AACF,uBATH;;;;;;;;;AAWD;;;;;;;yBA7DUmhB,iB,EAAiB,2H,EAAA,8I,EAAA,gK,EAAA,sI;AAAA,O;;;cAAjBA,iB;AAAiB,qC;AAAA,iB;AAAA,e;AAAA,u0B;AAAA;AAAA;ADX9B;;AACE;;AAAqB;;AAAuB;;AAE5C;;AACE;;AACE;;AACE;;AAAyB;;AAAmB;;AAC5C;;AACA;;AAGF;;AACA;;AACE;;AAAyB;;AAAoB;;AAC7C;;AACA;;AAQF;;AACA;;AACE;;AAA6B;;AAAsB;;AACnD;;AACA;;AAQA;;AAKF;;AACF;;AACF;;AAEA;;AACE;;AAAgF;;AAAO;;AACvF;;AAA0B;AAAA,qBAAS,IAAAxgB,QAAA,QAAT;AAAyB,aAAzB;;AAA2B;;AAAO;;AAC9D;;AACF;;;;AA5C6D;;AAAA;;AAI/C;;AAAA;;AAOA;;AAAA;;AAYA;;AAAA;;AAQc;;AAAA;;AAUc;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE/BV;;AAA8B;;AAAC;;;;;;;;AA4BvD;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;AACF;;;;;;AAvBU;;AAAA;;AASA;;AAAA;;AAUF;;AAAA;;;;;;AAzBV;;AACE;;AA6BF;;;;;;AA7BoC;;AAAA;;;;;;;;AAiChC;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;;;;;AAtBQ;;AAAA;;AASA;;AAAA;;AAUF;;AAAA;;;;;;AAzBV;;AACE;;AACE;;AA2BF;;AACF;;;;;;AA5BkD;;AAAA;;;;;;;;AAgC9C;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;;;;;AAtBQ;;AAAA;;AASA;;AAAA;;AAUF;;AAAA;;;;;;AAzBV;;AACE;;AACE;;AA2BF;;AACF;;;;;;AA5BkD;;AAAA;;;;;;AAkC1C;;AACE;;AACF;;;;;;;;;;;;;;AAJJ;;AACE;;AACE;;AAGA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;;;;;AA5BoB;;AAAA;;AACc;;AAAA;;AAK1B;;AAAA;;AASA;;AAAA;;AAUF;;AAAA;;;;;;AA5BV;;AACE;;AACE;;AA8BF;;AACF;;;;;;AA/BkD;;AAAA;;;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AACkN,MAAL,CAAYe,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACD;AACF,aAZH;AAcD;;;;;;;yBA/CUggB,qB,EAAqB,+H,EAAA,gI,EAAA,qI,EAAA,uH,EAAA,gK;AAAA,O;;;cAArBA,qB;AAAqB,0C;AAAA,gB;AAAA,e;AAAA,uN;AAAA;AAAA;ACjBlC;;AAEA;;AACE;;AACE;;AAAkB;;AAA0B;;AAC5C;;AAGA;;AAGF;;AACF;;;;AAPgC;;AAAA;;AAGF;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACmBxB;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AAvBY;;AAAA;;AASA;;AAAA;;AASF;;AAAA;;;;;;AASN;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;;;;;AArBQ;;AAAA;;AASA;;AAAA;;AASF;;AAAA;;;;;;AAxBV;;AACE;;AACE;;AA0BF;;AACF;;;;;;AA3BkD;;AAAA;;;;;;AA+B9C;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;;;;;AArBQ;;AAAA;;AASA;;AAAA;;AASF;;AAAA;;;;;;AAxBV;;AACE;;AACE;;AA0BF;;AACF;;;;;;AA3BkD;;AAAA;;;;;;AAiC1C;;AACE;;AACF;;;;;;;;;;;;AAJJ;;AACE;;AACE;;AAGA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACA;;AACE;;AACF;;AACF;;AACA;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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'app-scrolltop',\n  templateUrl: './scrolltop.component.html',\n  styleUrls: ['./scrolltop.component.scss']\n})\nexport class ScrolltopComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    $(\"#pulse\").hide();\n    $(window).scroll(function (event) {\n      var scroll = $(window).scrollTop();\n      if (scroll && scroll > 200) {\n        $(\"#pulse\").show();\n      } else {\n        $(\"#pulse\").hide();\n      }\n  });\n  }\n\n  scroll() {\n    var body = $(\"html, body\");\n    body.animate({scrollTop:0},'swing', function() {\n    console.log(\"Finished animating\");\n    });\n  }\n\n}\n","<div class=\"contain_scroll\">\n  <div id=\"pulse\" (click)=\"scroll()\">\n    <i class=\"fa fa-arrow-up\"></i>\n  </div>\n</div>\n","import { AuthService } from 'src/app/services/auth/auth.service';\r\nimport {Component, Inject, OnInit} from '@angular/core';\r\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { LogService } from '../../../services/log/log.service';\r\nimport { RoomService } from '../../../services/room/room.service';\r\nimport { LocalStorageService } from 'ngx-localstorage';\r\nimport { SocketService } from '../../../services/socket/socket.service';\r\nimport { ClientService } from '../../../services/client/client.service';\r\n\r\n@Component({\r\n  selector: 'app-confirm-logout',\r\n  templateUrl: './confirm-logout.component.html',\r\n  styleUrls: ['./confirm-logout.component.scss']\r\n})\r\nexport class ConfirmLogoutComponent implements OnInit {\r\n  action: string;\r\n  exclamation = \"assets/icons/exclamation-mark.svg\";\r\n  password: string = \"\";\r\n  error: boolean = false;\r\n  empty: boolean = false;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ConfirmLogoutComponent>,\r\n    private authService:AuthService,\r\n    private socketService: SocketService,\r\n    private store: LocalStorageService,\r\n    private roomService: RoomService,\r\n    private logService: LogService,\r\n    private clientService: ClientService,\r\n    @Inject(MAT_DIALOG_DATA) public data) {\r\n      this.action = data.action;\r\n      // console.log(\"Logout modal \" + this.action);\r\n    }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  async validate(): Promise<void> {\r\n    if (this.action == 'model') {\r\n      await this.logService.createLog('deconnection').subscribe(\r\n        (data) => {\r\n          const room = this.store.get('room');\r\n          this.socketService.leave(parseInt(room), 'model');\r\n          this.store.remove('room');\r\n          this.roomService.leaveRoom();\r\n          this.authService.logoutUser('model', '/modele/connexion');\r\n        }\r\n      )\r\n    }\r\n    else {\r\n      this.clientService.lastRoom(null);\r\n      this.authService.logoutUser('client', '/accueil');\r\n    }\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"contain_pass\">\n  <h2 mat-dialog-title>Déconnexion</h2>\n  <mat-dialog-content>\n    <div class=\"content_text\">\n      <!-- <div class=\"img\">\n        <img [src]=\"exclamation\" alt=\"\" style=\"max-width: 100%;\">\n      </div> -->\n      <div class=\"text_warning\">\n        Souhaitez-vous vous déconnecter de votre compte ?\n      </div>\n    </div>\n  </mat-dialog-content>\n\n  <mat-dialog-actions>\n    <button class=\"btn_cancel\" mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Annuler</button>\n    <button class=\"btn_valid\" (click)=\"validate()\">Confirmer</button>\n  </mat-dialog-actions>\n</div>\n\n","/* (ignored) */","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>forgot-password works!</p>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { SlideInOutAnimation } from 'src/app/animation';\nimport { HeaderService } from '../../../services/header/header.service';\n@Component({\n  selector: 'app-disconnected',\n  templateUrl: './disconnected.component.html',\n  styleUrls: ['./disconnected.component.scss'],\n  animations: [SlideInOutAnimation]\n})\nexport class DisconnectedComponent implements OnInit {\n  animationState = 'out';\n  connect: boolean = false;\n\n  @Input()\n  actif: string;\n  active: number = 0;\n\n  constructor(private headerSrv: HeaderService) { }\n\n  ngOnInit(): void {\n    if (this.actif) this.active = parseInt(this.actif);\n  }\n\n  toggleShowDiv(divName: string) {\n    if (divName === 'contain_disconnected') {\n      console.log(this.animationState);\n      this.animationState = this.animationState === 'out' ? 'in' : 'out';\n      console.log(this.animationState);\n    }\n  }\n\n}\n","\n<div class=\"bars\">\n  <i class=\"fa fa-bars\" (click)=\"toggleShowDiv('contain_disconnected')\"></i>\n</div>\n\n<div class=\"contain_disconnected\" [@slideInOut]=\"animationState\">\n  <div class=\"list one\" [ngClass]=\"{'active': active == 1}\" routerLink=\"/accueil\">\n    Tous les modèles\n    <span></span>\n  </div>\n  <div class=\"list two\" routerLink=\"/connexion\" [ngClass]=\"{'active': active == 2}\">\n    Connexion\n    <span></span>\n  </div>\n  <div class=\"list three lighter\" routerLink=\"/inscription\">\n    Inscription\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Information } from 'src/app/interfaces/model-information.interface';\nimport { ProfilService } from '../../../../services/profil/profil.service';\nimport { NotificationService } from '../../../../services/notification/notification.service';\n\n\n@Component({\n  selector: 'app-information',\n  templateUrl: './information.component.html',\n  styleUrls: ['./information.component.scss']\n})\nexport class InformationComponent implements OnInit {\n  information: Information = {\n    id: 0,\n    like: '',\n    dislike: '',\n    social_network: '',\n    sex_orientation: '',\n    description: ''\n  };\n\n  oldInfo: Information;\n\n  constructor(\n    private profilService: ProfilService,\n    private notificationService: NotificationService\n  ) {}\n\n  ngOnInit(): void {\n    this.getInfo();\n  }\n\n  saveInfo() {\n    this.profilService.updateProfil(this.information).subscribe(\n      (data: any) => {\n        this.notificationService.success(\"Modification\", \"Terminé avec succès\")\n        this.getInfo();\n      }, (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  getInfo() {\n    this.profilService.getProfil().subscribe(\n      (data) => {\n        this.information = data;\n        this.oldInfo = {...this.information};\n        // console.log(this.information);\n      }\n    )\n  }\n\n  restoreInfo() {\n    console.log(this.oldInfo.description);\n    this.information.description = this.oldInfo.description;\n    this.information.like = this.oldInfo.like;\n    this.information.dislike = this.oldInfo.dislike;\n    this.information.social_network = this.oldInfo.social_network;\n    this.information.sex_orientation = this.oldInfo.sex_orientation;\n  }\n\n\n}\n","<div class=\"main_info\">\n<div class=\"title_info\">\n  INFORMATION PERSONNELLE\n</div>\n<div class=\"line\"></div>\n<div class=\"container-fluid contain_info\">\n  <div class=\"row\">\n    <div class=\"col-lg-6\">\n      <div class=\"content_field\">\n        <label for=\"like\">J'aime :</label>\n        <input type=\"text\" class=\"input_field\" placeholder=\"J'aime\"\n        [(ngModel)]=\"information.like\">\n      </div>\n    </div>\n    <div class=\"col-lg-6\">\n      <div class=\"content_field\">\n        <label for=\"dislike\">Je n'aime pas : </label>\n        <input type=\"text\" class=\"input_field\" placeholder=\"J'aime pas\"\n        [(ngModel)]=\"information.dislike\">\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-lg-6\">\n      <div class=\"content_field\">\n        <label for=\"social_network\">Réseaux sociaux :</label>\n        <input type=\"text\" class=\"input_field\" placeholder=\"Réseaux sociaux\"\n        [(ngModel)]=\"information.social_network\">\n      </div>\n    </div>\n    <div class=\"col-lg-6\">\n      <div class=\"content_field\">\n        <label for=\"sex_orientation\">Orientation Sexuelle :</label>\n        <input type=\"text\" class=\"input_field\" placeholder=\"Orientation sexuelle\"\n        [(ngModel)]=\"information.sex_orientation\">\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-lg-12\">\n      <div class=\"content_field\">\n        <label for=\"description\">Description :</label>\n        <textarea name=\"description\" id=\"description\" cols=\"30\" rows=\"40\" class=\"input_field\"\n        placeholder=\"Description .....\"\n        [(ngModel)]=\"information.description\"></textarea>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-lg-4 offset-lg-1\">\n      <div class=\"contain_button\">\n        <button class=\"btn_cancel lighter\" (click)=\"restoreInfo()\">\n          ANNULER\n        </button>\n      </div>\n    </div>\n    <div class=\"col-lg-4 offset-lg-2\">\n      <div class=\"contain_button\">\n        <button class=\"btn_save lighter\" (click)=\"saveInfo()\">\n          ENREGISTRER\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n\n</div>\n","<app-header></app-header>\n\n<div class=\"contain_signup_one\">\n  <div class=\"inside_sign part_one\">\n    <h2>RECUPERATION <br> DU MOT DE PASSE</h2>\n    <div class=\"blank\"></div>\n  </div>\n</div>\n\n<div class=\"contain_signup_two inside_sign\">\n  <h3 class=\"title\">\n    Récupération  <br>\n    du mot de passe oublié\n  </h3>\n\n  <div class=\"descr\">\n      BETWEEN<span class=\"under_bold\">US</span>.LIVE <br>\n      Vous avez oublié le mot de passe ? <br>\n      Veuillez soumettre votre email. <br>\n      Un email de reinitialisation sera envoyé pour confirmation.\n  </div>\n\n  <form autocomplete=\"off\" (ngSubmit)=\"send()\">\n    <div class=\"form-group\">\n      <label for=\"pseudo\">Email *</label>\n      <input type=\"email\" name=\"email\" class=\"form-control input lighter\" [(ngModel)]=\"email\" required>\n      <div *ngIf=\"error\">\n        <small class=\"form-text error-text\">Veuillez compléter</small>\n      </div>\n    </div>\n\n    <div class=\"notif\">\n      * Champ obligatoire\n    </div>\n\n    <div class=\"action\">\n      <button class=\"btn btn_signup lighter\" type=\"submit\">\n        <div class=\"loader\" *ngIf=\"loading\"></div>\n        <span *ngIf=\"!loading\">ENVOYER</span>\n      </button>\n    </div>\n  </form>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ClientService } from '../../../services/client/client.service';\nimport { NotificationService } from '../../../services/notification/notification.service';\nimport { ModelService } from '../../../services/model/model.service';\n\n@Component({\n  selector: 'app-send-forgot-model',\n  templateUrl: './send-forgot-model.component.html',\n  styleUrls: ['./send-forgot-model.component.scss']\n})\nexport class SendForgotModelComponent implements OnInit {\n  loading: boolean = false;\n  email: string = null;\n  error: boolean = false;\n  constructor(\n    private modelService: ModelService,\n    private notificationService: NotificationService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  send() {\n    if (!this.email) {\n      this.error = true;\n      return null;\n    }\n    this.error = false;\n    this.loading = true;\n    this.modelService.forgot(this.email).subscribe(\n      (data: {success: boolean, message: string}) => {\n        this.loading = false;\n        // console.log(data);\n        if (data.success) {\n          this.notificationService.infoMsg(data.message);\n          this.email = null;\n        } else {\n          this.notificationService.errorMsg(data.message);\n        }\n      }, (error) => {\n        console.log(error);\n        this.loading = false;\n      }\n    )\n  }\n\n}\n","import { trigger, state, style, transition,\r\n  animate, group, query, stagger, keyframes\r\n} from '@angular/animations';\r\n\r\nexport const SlideInOutAnimation = [\r\n  trigger('slideInOut', [\r\n      state('in', style({\r\n          'max-height': '500px', 'opacity': '1', 'visibility': 'visible'\r\n      })),\r\n      state('out', style({\r\n          'max-height': '0px', 'opacity': '0', 'visibility': 'hidden'\r\n      })),\r\n      transition('in => out', [group([\r\n          animate('400ms ease-in-out', style({\r\n              'opacity': '0'\r\n          })),\r\n          animate('600ms ease-in-out', style({\r\n              'max-height': '0px'\r\n          })),\r\n          animate('700ms ease-in-out', style({\r\n              'visibility': 'hidden'\r\n          }))\r\n      ]\r\n      )]),\r\n      transition('out => in', [group([\r\n          animate('1ms ease-in-out', style({\r\n              'visibility': 'visible'\r\n          })),\r\n          animate('600ms ease-in-out', style({\r\n              'max-height': '500px'\r\n          })),\r\n          animate('800ms ease-in-out', style({\r\n              'opacity': '1'\r\n          }))\r\n      ]\r\n      )])\r\n  ]),\r\n]\r\n","import { HttpEventType } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Setting } from '../../../../interfaces/setting.interface';\r\nimport { ProfilService } from '../../../../services/profil/profil.service';\r\nimport { NotificationService } from '../../../../services/notification/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-setting',\r\n  templateUrl: './setting.component.html',\r\n  styleUrls: ['./setting.component.scss']\r\n})\r\nexport class SettingComponent implements OnInit {\r\n  colorSwitch = \"#FB77FC\";\r\n  checkedSound: boolean = true;\r\n  checkedMail: boolean = true;\r\n  checkedMessage: boolean = true;\r\n\r\n  originalSetting: Setting;\r\n  setting: Setting = {\r\n    id: 0,\r\n    sound_message: 0,\r\n    sound_notification: 0,\r\n    mail_notification: 0\r\n  }\r\n\r\n  file: File;\r\n  formData = new FormData();\r\n\r\n  originalInfo: any;\r\n  info = {\r\n    pseudo: '',\r\n    email: '',\r\n    path_soft: null,\r\n    cin: '',\r\n    date_birth: ''\r\n  }\r\n\r\n  photoImg = \"assets/icons/photoAdd.svg\";\r\n  constructor(\r\n    private profileService: ProfilService,\r\n    private notificationService: NotificationService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getInfo();\r\n  }\r\n\r\n  getInfo() {\r\n    this.profileService.getInfo().subscribe(\r\n      (data: any) => {\r\n        // console.log(data);\r\n        this.info = data;\r\n        this.originalInfo = {...this.info};\r\n        this.setting = data.setting;\r\n        this.originalSetting = {...this.setting};\r\n      }\r\n    )\r\n  }\r\n\r\n  switchSound(event) {\r\n    this.checkedSound = !this.checkedSound;\r\n    // console.log(this.checkedSound);\r\n    if (this.checkedSound)\r\n      this.setting.sound_notification = 1;\r\n    else\r\n      this.setting.sound_notification = 0;\r\n  }\r\n\r\n  switchMail(event) {\r\n    this.checkedMail = !this.checkedMail;\r\n    // console.log(this.checkedMail);\r\n    if (this.checkedMail)\r\n      this.setting.mail_notification = 1;\r\n    else\r\n      this.setting.mail_notification = 0;\r\n  }\r\n\r\n  switchMessage(event) {\r\n    this.checkedMessage = !this.checkedMessage;\r\n    // console.log(this.checkedMessage);\r\n    if (this.checkedMessage)\r\n      this.setting.sound_message = 1;\r\n    else\r\n      this.setting.sound_message = 0;\r\n  }\r\n\r\n  profilChoose(fileInput) {\r\n    this.file =  fileInput.target.files[0];\r\n    var mimeType: any;\r\n    var reader = new FileReader();\r\n    mimeType = this.file.type;\r\n    if (!(mimeType === \"image/png\" || mimeType === \"image/jpeg\")) return false;\r\n    reader = new FileReader();\r\n    reader.readAsDataURL(this.file);\r\n    reader.onload = (event) => {\r\n      this.info.path_soft = reader.result;\r\n      // this.nameRecto = this.fileRecto.name;\r\n    };\r\n\r\n    this.formData.delete('file');\r\n    this.formData.append('file', this.file, this.file.name);\r\n    this.profileService.updatePhoto(this.formData).subscribe(\r\n      (events) => {\r\n        if (events.type === HttpEventType.UploadProgress) {\r\n          // this.fileUploadProgress = Math.round(events.loaded / events.total * 100) + '%';\r\n        }\r\n        else if (events.type === HttpEventType.Response) {\r\n          const path  = events.body.path;\r\n          this.info.path_soft = path;\r\n        }\r\n      }, (error) => {\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  async saveSetting() {\r\n    this.profileService.updateSetting(this.setting).subscribe(\r\n      (data) => {\r\n        this.profileService.updateInfo(this.info).subscribe(\r\n          (data) => {\r\n              this.notificationService.success(\"Modification\", \"Terminé avec succès\")\r\n          }\r\n        )\r\n      }\r\n    );\r\n  }\r\n\r\n  restoreSetting() {\r\n    this.info.path_soft = this.originalInfo.path_soft;\r\n    this.setting.sound_notification = this.originalSetting.sound_notification;\r\n    this.setting.sound_message = this.originalSetting.sound_message;\r\n    this.setting.mail_notification = this.originalSetting.mail_notification;\r\n  }\r\n\r\n}\r\n","<div class=\"main_info\">\n  <div class=\"title_info\">\n    PARAMETRE DU COMPTE\n  </div>\n  <div class=\"line\"></div>\n\n  <div class=\"container-fluid contain_info\">\n\n    <!-- <div class=\"contain_photo\">\n      <img [src]=\"info.path_soft\" alt=\"\" class=\"photo_soft\">\n      <button (click)=\"fileInput.click()\" class=\"camera\" >\n        <img [src]=\"photoImg\" alt=\"\">\n      </button>\n    </div>\n    <input type=\"file\" #fileInput style=\"visibility: hidden;\"\n    accept=\"image/x-png,image/gif,image/jpeg\" (change)=\"profilChoose($event)\"> -->\n\n    <div class=\"row\">\n      <div class=\"col-lg-6\">\n        <div class=\"content_field\">\n          <label for=\"pseudo\">Pseudo</label>\n          <input type=\"text\" class=\"input_field\" placeholder=\"Mon pseudo\"\n          [(ngModel)]=\"info.pseudo\" disabled>\n        </div>\n      </div>\n      <div class=\"col-lg-6\">\n        <div class=\"content_field\">\n          <label for=\"email\">Email</label>\n          <input type=\"text\" class=\"input_field\" placeholder=\"Mon adresse email\"\n          [(ngModel)]=\"info.email\" disabled>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-lg-6\">\n        <div class=\"content_field\">\n          <label for=\"cin\">CIN</label>\n          <input type=\"text\" class=\"input_field\" placeholder=\"CIN\"\n          [(ngModel)]=\"info.cin\" disabled>\n        </div>\n      </div>\n      <div class=\"col-lg-6\">\n        <div class=\"content_field\">\n          <label for=\"naissance\">Date de naissance</label>\n          <input type=\"text\" class=\"input_field\" placeholder=\"Date de naissance\"\n          [(ngModel)]=\"info.date_birth\" disabled>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row contain_setting\">\n      <div class=\"col-lg-6\">\n        <div class=\"contain_param\">\n          <div>\n            son des notifications\n          </div>\n          <p>\n            Activer / Désactiver les sons de notification\n          </p>\n        </div>\n      </div>\n      <div class=\"col-lg-6\">\n        <div class=\"contain_switch\">\n          <mat-slide-toggle\n          class=\"toogle toggleActivate\"\n          [color]=\"colorSwitch\"\n          [checked]=\"setting.sound_notification === 1\"\n          [disabled]=\"setting.sound_notification == 0\"\n          (change)=\"switchSound($event)\">\n          </mat-slide-toggle>\n          <mat-slide-toggle\n          class=\"toogle toggleDeactivate\"\n          [color]=\"colorSwitch\"\n          [checked]=\"setting.sound_notification === 0\"\n          [disabled]=\"setting.sound_notification == 1\"\n          (change)=\"switchSound($event)\">\n          </mat-slide-toggle>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row contain_setting\">\n      <div class=\"col-lg-6\">\n        <div class=\"contain_param\">\n          <div>\n            notification par mail\n          </div>\n          <p>\n            Activer / Désactiver les sons par mail\n          </p>\n        </div>\n      </div>\n      <div class=\"col-lg-6\">\n        <div class=\"contain_switch\">\n          <mat-slide-toggle\n          class=\"toogle toggleActivate\"\n          [color]=\"colorSwitch\"\n          [checked]=\"setting.mail_notification == 1\"\n          [disabled]=\"setting.mail_notification == 0\"\n          (change)=\"switchMail($event)\">\n          </mat-slide-toggle>\n          <mat-slide-toggle\n          class=\"toogle toggleDeactivate\"\n          [color]=\"colorSwitch\"\n          [checked]=\"setting.mail_notification == 0\"\n          [disabled]=\"setting.mail_notification == 1\"\n          (change)=\"switchMail($event)\">\n          </mat-slide-toggle>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row contain_setting\">\n      <div class=\"col-lg-6\">\n        <div class=\"contain_param\">\n          <div>\n            son des messages\n          </div>\n          <p>\n            Activer / Désactiver les sons de messages\n          </p>\n        </div>\n      </div>\n      <div class=\"col-lg-6\">\n        <div class=\"contain_switch\">\n          <mat-slide-toggle\n          class=\"toogle toggleActivate\"\n          [color]=\"colorSwitch\"\n          [checked]=\"setting.sound_message == 1\"\n          [disabled]=\"setting.sound_message == 0\"\n          (change)=\"switchMessage($event)\">\n          </mat-slide-toggle>\n          <mat-slide-toggle\n          class=\"toogle toggleDeactivate\"\n          [color]=\"colorSwitch\"\n          [checked]=\"setting.sound_message == 0\"\n          [disabled]=\"setting.sound_message == 1\"\n          (change)=\"switchMessage($event)\">\n          </mat-slide-toggle>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-lg-4 offset-lg-1\">\n        <div class=\"contain_button\">\n          <button class=\"btn_cancel\" (click)=\"restoreSetting()\">\n            ANNULER\n          </button>\n        </div>\n      </div>\n      <div class=\"col-lg-4 offset-lg-2\">\n        <div class=\"contain_button\">\n          <button class=\"btn_save\" (click)=\"saveSetting()\">\n            ENREGISTRER\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","<app-header actif=\"2\" connected=\"true\" model=\"true\"></app-header>\n\n<div class=\"main_album\">\n    <div class=\"head_album\"\n    [ngStyle]=\"{'background-image': 'linear-gradient(90deg, rgba(255, 255, 255, 0.062), rgba(255, 255, 255, 0.062)),url(' + bannier + ')'}\">\n    <div class=\"profil\">\n        <img [src]=\"info.path_soft\" alt=\"\" id=\"profil\" *ngIf=\"info.path_soft != null\">\n        <!-- <img [src]=\"profil\" alt=\"\" id=\"profil\" *ngIf=\"info.path_soft == null\"> -->\n        <div class=\"content_camera\" (click)=\"fileInput.click()\">\n          <img [src]=\"photoAdd\" alt=\"\" id=\"photoAdd\">\n        </div>\n      </div>\n    </div>\n\n    <div class=\"under_head_album\" id=\"scrolled_point\">\n      <div class=\"info_model info_mobile\">\n        <div class=\"name_model\">\n          {{info.pseudo}}\n        </div>\n        <!-- <div class=\"status_model\">\n          Les albums de votre carrière\n        </div> -->\n      </div>\n      <div class=\"menu_album\">\n        <div class=\"text_menu\" (click)=\"initAlbum('private')\" [ngClass]=\"{'active': contextAlbum === 'private'}\">Photos privées</div>\n        <div class=\"text_menu\" (click)=\"initAlbum('vip')\" [ngClass]=\"{'active': contextAlbum === 'vip'}\">Albums VIP</div>\n        <div class=\"text_menu menu_shadow\" style=\"opacity: 0;\">album vide</div>\n        <div class=\"text_menu\" (click)=\"initAlbum('free')\" [ngClass]=\"{'active': contextAlbum === 'free'}\">Albums Free</div>\n        <div class=\"text_menu\">Vidéos</div>\n      </div>\n      <div class=\"info_model info_desktop\">\n        <div class=\"name_model\">\n          {{info.pseudo}}\n        </div>\n        <!-- <div class=\"status_model\">\n          Les albums de votre carrière\n        </div> -->\n      </div>\n    </div>\n\n    <div class=\"title_album\">\n      {{textAlbum}}\n      <span *ngIf=\"totalAlbum == 0\">( 0 )</span>\n      <span *ngIf=\"totalAlbum != 0\">(<span *ngIf=\"totalAlbum < 10\">0</span>{{totalAlbum}} ) </span>\n    </div>\n\n    <div class=\"contain_btn_add\">\n      <button class=\"btn_add_album lighter\" (click)=\"fileUpload.click()\">\n          <img [src]=\"photoAdd\" alt=\"\">\n          AJOUTER PHOTO\n      </button>\n    </div>\n\n    <div class=\"container-fluid list_album\">\n      <div class=\"row\" *ngIf=\"currentAlbum.length === 0\">\n        <div class=\"col-lg-12 no_photo\">\n          Aucune photo\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-lg-4\" *ngFor=\"let item of currentAlbum\">\n          <!-- [ngStyle]=\"{'background-image': 'url('+ item +')'}\" -->\n          <div class=\"album\">\n            <img [src]=\"item.path_album\" alt=\"\"\n            class=\"album_item img-responsive\" (click)=\"openImage(item.id, item.path_album)\">\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-lg-6\">\n          <button class=\"btn_prev btn_action lighter\" (click)=\"take('prev')\">\n            &lt;&nbsp;précédent\n          </button>\n        </div>\n        <div class=\"col-lg-6\">\n          <button class=\"btn_prev btn_action lighter\" (click)=\"take('next')\">\n            suivant&nbsp;&gt;\n          </button>\n        </div>\n      </div>\n    </div>\n\n</div>\n\n<input type=\"file\" id=\"btn_add_photo\" multiple #fileUpload\nstyle=\"visibility: hidden;\" accept=\"image/x-png,image/gif,image/jpeg\"\n(change)=\"fileChoose($event)\">\n\n\n<input type=\"file\" #fileInput style=\"visibility: hidden;\"\naccept=\"image/x-png,image/gif,image/jpeg\" (change)=\"profilChoose($event)\">\n\n","import { AuthService } from 'src/app/services/auth/auth.service';\r\nimport { HeaderService } from './../../../services/header/header.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport * as $ from 'jquery';\r\nimport { AlbumService } from '../../../services/album/album.service';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NotificationService } from '../../../services/notification/notification.service';\r\nimport { HttpEventType } from '@angular/common/http';\r\nimport { addAlbum } from '../../../interfaces/add-album.interface';\r\nimport { ProfilService } from '../../../services/profil/profil.service';\r\nimport { PopupImageComponent } from '../../../modals/popup-image/popup-image.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-albums',\r\n  templateUrl: './albums.component.html',\r\n  styleUrls: ['./albums.component.scss']\r\n})\r\nexport class AlbumsComponent implements OnInit {\r\n  bg = \"assets/images/bg.jpg\";\r\n  profil = \"assets/images/image.png\";\r\n  photoAdd = \"assets/icons/photoAdd.svg\";\r\n  bannier = \"assets/logos/dark-light.jpg\";\r\n\r\n\r\n  totalAlbum: number  = 0;\r\n  sectionAlbum: number = 9;\r\n  page: number = 0;\r\n\r\n  contextAlbum = \"private\";\r\n  currentAlbum: addAlbum[] = [];\r\n  textAlbum: any;\r\n  fileData: File = null;\r\n  previewData: any;\r\n  nameData: any;\r\n\r\n  albums: File[] = [];\r\n  file: File;\r\n  fileUploadProgress: string;\r\n\r\n  count = {\r\n    \"vip\": 0,\r\n    \"private\": 0,\r\n    \"free\": 0\r\n  }\r\n\r\n  info = {\r\n    pseudo: '',\r\n    email: '',\r\n    path_soft: null\r\n  }\r\n\r\n  formData = new FormData();\r\n\r\n  constructor(\r\n    private profileService: ProfilService,\r\n    private route: ActivatedRoute ,\r\n    private notificationService: NotificationService,\r\n    private albumService: AlbumService,\r\n    private dialog: MatDialog){\r\n    let param = this.route.snapshot.queryParamMap.get('context');\r\n    if (param != null) {this.contextAlbum = param;}\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initAlbum(this.contextAlbum);\r\n    this.countAlbum();\r\n    this.getInfo();\r\n  }\r\n\r\n  getInfo() {\r\n    this.profileService.getInfo().subscribe(\r\n      (data: any) => {\r\n        // console.log('album ', data);\r\n        this.info = data;\r\n      }\r\n    )\r\n  }\r\n\r\n  async countAlbum() {\r\n    this.albumService.getCount().subscribe(\r\n      (data) => {\r\n        this.count = data;\r\n        if (this.contextAlbum == 'private')\r\n          this.totalAlbum = this.count.private; // Default onglet\r\n        else if (this.contextAlbum == 'vip')\r\n          this.totalAlbum = this.count.vip; // Default onglet\r\n        else if (this.contextAlbum == 'free')\r\n          this.totalAlbum = this.count.free; // Default onglet\r\n      }\r\n    )\r\n  }\r\n\r\n  async fetchAlbum(debut: number) {\r\n    this.currentAlbum = [];\r\n    await (await this.albumService.getAlbums(this.contextAlbum, debut, 9)).subscribe(\r\n      (data) => {\r\n        this.currentAlbum = data;\r\n        console.log(this.currentAlbum);\r\n      }\r\n    )\r\n  }\r\n\r\n  // context : private |vip | free\r\n  initAlbum(context: string) {\r\n    this.contextAlbum = context;\r\n    var verified  = false;\r\n    switch (context) {\r\n      case 'private':\r\n        verified = true;\r\n        this.totalAlbum = this.count.private;\r\n        this.textAlbum = \"Contenu Privés\";\r\n        break;\r\n      case 'vip':\r\n        verified = true;\r\n        this.totalAlbum = this.count.vip;\r\n        this.textAlbum = \"Album VIP\";\r\n        break;\r\n      case 'free':\r\n        verified = true;\r\n        this.totalAlbum = this.count.free;\r\n        this.textAlbum = \"Album Free\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    if (verified) {\r\n      this.fetchAlbum(0);\r\n    }\r\n  }\r\n\r\n\r\n  // action: prev | next\r\n  take(action: string) {\r\n    if (action === \"next\") {\r\n      this.page =  this.page + 1;\r\n      var marge = Math.floor((this.totalAlbum/this.sectionAlbum) - 0.1); // - 0.1 avoid just division result\r\n      if (this.page <= marge) {\r\n        this.fetchAlbum(this.page * this.sectionAlbum);\r\n        this.scroll();\r\n      } else { this.page = this.page -1;}\r\n    } else if (action === \"prev\" && this.page > 0) {\r\n      this.page = this.page - 1;\r\n      this.fetchAlbum(this.page * this.sectionAlbum);\r\n      this.scroll();\r\n    }\r\n  }\r\n\r\n  verifyMimeType(mime: string) {\r\n    return (mime === \"image/png\" || mime === \"image/jpeg\" || mime === \"image/gif\");\r\n  }\r\n\r\n  scroll() {\r\n    document.querySelector('#scrolled_point').scrollIntoView();\r\n  }\r\n\r\n  async fileChoose(fileInput) {\r\n    const formData = new FormData();\r\n    let file: File;\r\n    for (let index = 0; index < fileInput.target.files.length; index++) {\r\n      file = fileInput.target.files[index];\r\n      const mimeType = file.type;\r\n      if (!this.verifyMimeType(mimeType)) {\r\n        this.notificationService.failure('Format invalide', 'Extension au format JPEG/PNG');\r\n        return false;\r\n      }\r\n      formData.append('files', file, file.name);\r\n    }\r\n\r\n    this.fileUploadProgress = '0%';\r\n    return await this.albumService.uploadAlbumModel(formData).subscribe(\r\n      (events) => {\r\n        if (events.type === HttpEventType.UploadProgress) {\r\n          this.fileUploadProgress = Math.round(events.loaded / events.total * 100) + '%';\r\n        }\r\n        else if (events.type === HttpEventType.Response) {\r\n          const paths  = events.body.paths;\r\n          const albums: addAlbum[] = [];\r\n          for (let index = 0; index < paths.length; index++) {\r\n            albums.push({\r\n                \"type_album\": this.contextAlbum,\r\n                \"path_album\": paths[index]\r\n              })\r\n          }\r\n          this.albumService.addAlbums(albums).subscribe(\r\n            (data) => {\r\n              this.notificationService.success(`Photo ${this.contextAlbum}`, \"Ajoutée\");\r\n              this.countAlbum();\r\n              this.fetchAlbum(this.page * this.sectionAlbum);\r\n            }, (error) => {\r\n              console.log(error);\r\n            }\r\n          )\r\n        }\r\n      }, (error) => {\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  async profilChoose(fileInput) {\r\n    this.file =  fileInput.target.files[0];\r\n    var mimeType: any;\r\n    var reader = new FileReader();\r\n    mimeType = this.file.type;\r\n    if (!(mimeType === \"image/png\" || mimeType === \"image/jpeg\")) return false;\r\n    reader = new FileReader();\r\n    reader.readAsDataURL(this.file);\r\n    reader.onload = (event) => {\r\n      this.info.path_soft = reader.result;\r\n      // this.nameRecto = this.fileRecto.name;\r\n    };\r\n\r\n    this.formData.delete('file');\r\n    this.formData.append('file', this.file, this.file.name);\r\n    this.profileService.updatePhoto(this.formData).subscribe(\r\n      async (events) => {\r\n        if (events.type === HttpEventType.UploadProgress) {\r\n          // this.fileUploadProgress = Math.round(events.loaded / events.total * 100) + '%';\r\n        }\r\n        else if (events.type === HttpEventType.Response) {\r\n          const path  = events.body.path;\r\n          this.info.path_soft = path;\r\n          await this.saveSetting();\r\n        }\r\n      }, (error) => {\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  async saveSetting() {\r\n        this.profileService.updateInfo(this.info).subscribe(\r\n          (data) => {\r\n              this.notificationService.success(\"Modification\", \"Terminé avec succès\")\r\n          }\r\n        )\r\n  }\r\n\r\n  openImage(id: number, url: string) {\r\n    let dialogRef = this.dialog.open(PopupImageComponent, {\r\n      width: '100vh',\r\n      data: {\r\n        id,\r\n        url,\r\n        type: this.contextAlbum\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe((data) => {\r\n      if (data === 'success') this.ngOnInit();\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"contain\">\n  <h2 mat-dialog-title>Pack de crédit</h2>\n  <mat-dialog-content>\n    <div class=\"container-fluid main_pack\">\n      <div class=\"row\">\n      </div>\n      <div class=\"row\">\n        <div class=\"col-lg-6\">\n          <div class=\"list_pack\">\n            <div class=\"pack\" *ngFor=\"let item of listPack; let i = index\"\n            (click)=\"choosePack(i)\" [ngClass]=\"{'selected': currentOnglet === i}\">\n              &nbsp;&nbsp;&nbsp; Pack {{item}}\n            </div>\n          </div>\n        </div>\n        <div class=\"col-lg-6\">\n          <div class=\"list_pack\">\n            <div class=\"pack\" *ngFor=\"let pack of currentPack; let i = index\"\n            [ngClass]=\"{'selected': currentSelected === i}\">\n              <div class=\"pack_item\">\n                <div class=\"pack_value\"\n                (click)=\"chooseMontant(i ,pack.montant, pack.credit)\">\n                  <div>{{pack.credit}} crédit</div>\n                  <div>-</div>\n                  <div>{{pack.montant}} $</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"contain_credit\">\n        Solde : {{credit}} crédit<span *ngIf=\"credit > 2\">s</span>\n      </div>\n\n    </div>\n  </mat-dialog-content>\n\n  <mat-dialog-actions>\n    <button class=\"btn_cancel\" mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Annuler</button>\n    <button class=\"btn_valid\" (click)=\"validate()\">Confirmer</button>\n  </mat-dialog-actions>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Pack } from 'src/app/interfaces/pack-credit.interface';\nimport { ClientService } from 'src/app/services/client/client.service';\nimport { CreditService } from '../../services/credit/credit.service';\nimport { LocalStorageService } from 'ngx-localstorage';\nimport { NotificationService } from '../../services/notification/notification.service';\n\n@Component({\n  selector: 'app-pack-modal',\n  templateUrl: './pack-modal.component.html',\n  styleUrls: ['./pack-modal.component.scss']\n})\nexport class PackModalComponent implements OnInit {\n  currentOnglet = null;\n  currentSelected = null;\n  montantSelected: number = null;\n  creditSelected: number = null;\n\n  currentPack: Pack[] = [];\n\n  clientId: number = null;\n  credit: number = 0;\n  creditId: number = 0;\n\n  listPack: string [] = this.creditService.listPack;\n\n  packBienvenue: Pack[] = this.creditService.packBienvenue;\n\n  packBronze: Pack[] = this.creditService.packBronze;\n\n  packArgent: Pack[] = this.creditService.packArgent;\n\n  packOr: Pack[] = this.creditService.packOr;\n\n  constructor(\n    private creditService: CreditService,\n    private clientService: ClientService,\n    private store: LocalStorageService,\n    private notificationService: NotificationService,\n    public dialogRef: MatDialogRef<PackModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.getMyCredit();\n    // this.currentPack = this.packBienvenue;\n  }\n\n  // Get client credit\n  async getMyCredit() {\n      const id = parseInt(this.store.get('identification//'));\n      await this.clientService.getMyInfos().subscribe(\n        (data) => {\n          // console.log('Mon credit ', data);\n          this.credit = data.credit ? data.credit.credit : 0;\n          this.creditId = data.credit ? data.credit.id : 0;\n          this.clientId = data.id;\n        }\n      )\n  }\n\n  choosePack(id: number) {\n    this.currentOnglet = id;\n    this.currentSelected = null;\n    this.montantSelected = null;\n    this.creditSelected = null;\n\n    switch (id) {\n      case 0:\n        this.currentPack = this.packBienvenue;\n        break;\n\n      case 1:\n        this.currentPack = this.packBronze;\n        break;\n\n      case 2:\n        this.currentPack = this.packArgent;\n        break;\n\n      case 3:\n        this.currentPack = this.packOr;\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  chooseMontant(index: number, montant: number, credit: number) {\n    this.currentSelected = index;\n    this.montantSelected = montant;\n    this.creditSelected = credit;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  async validate(): Promise<void> {\n    if ((this.currentSelected == null) || (this.montantSelected == null) || (this.creditSelected == null)) return null;\n    await this.buyPack(this.montantSelected, this.creditSelected);\n  }\n\n  async buyPack(montant: number, credit: number) {\n    if (this.creditId === 0) return false;\n    this.creditService.buyCreditClient(montant, credit, this.creditId, this.clientId).subscribe(\n      async (data) => {\n        await this.getMyCredit().then(\n          (data) => {\n            this.notificationService.success(`Pack ${this.listPack[this.currentOnglet]}`,\n            `Vous avez obtenu ${credit} crédits de plus.`);\n            this.dialogRef.close();\n          }\n        );\n      }\n    )\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Socket } from 'ngx-socket-io';\nimport { RoomPrivateService } from '../roomPrivate/room-private.service';\n\nexport interface ChatSocket {\n  room: string;\n  role: string;\n  id: number;\n  message: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n\n  messages: Observable<any>;\n  constructor(\n    private socket: Socket,\n    private roomPrivateService: RoomPrivateService) {}\n\n  listen(eventName: string) {\n    return new Observable((subscriber: any) => {\n      this.socket.on(eventName, (data) => {\n        subscriber.next(data);\n      })\n    })\n  }\n\n  async emit(eventName, data) {\n    return await this.socket.emit(eventName, data);\n  }\n\n  sendMessage(data: ChatSocket) {\n    this.socket.emit('message', data);\n  }\n\n\n  join(idRoom: number, modelId: number) {\n    const data = {\n      room: idRoom + '',\n      modelId: modelId,\n      show: 'free'\n    }\n    this.socket.emit('join', data)\n  }\n\n  leave(idRoom: number, role: string) {\n    const data = {\n      room: idRoom + '',\n      role: role,\n      show: 'free'\n    }\n    this.socket.emit('leave', data)\n  }\n\n  async joinPrivate(idRoom: number, modelId: number, clientId?: number, clientPseudo?: string) {\n    const data = {\n      room: idRoom + 'P',\n      modelId: modelId,\n      show: 'private',\n      clientId,\n      clientPseudo\n    }\n    this.socket.emit('join', data)\n  }\n\n  async leavePrivate(idRoom: number, role: string) {\n    const data = {\n      room: idRoom + 'P',\n      role: role,\n      show: 'private'\n    }\n    this.socket.emit('leave', data)\n    return await this.roomPrivateService.updateActif(idRoom, false, 'private');\n  }\n\n  joinVip(idRoom: number, modelId: number) {\n    const data = {\n      room: idRoom + 'V',\n      modelId: modelId,\n      show: 'vip'\n    }\n    this.socket.emit('join', data)\n  }\n\n  async leaveVip(idRoom: number, role: string) {\n    const data = {\n      room: idRoom + 'V',\n      role: role,\n      show: 'vip'\n    }\n    return await this.socket.emit('leave', data)\n  }\n\n  async sendClientPeerId(data: {peerId: any, room: string}) {\n    return await this.socket.emit('peerId', data)\n  }\n\n  async askModelPeerId(data: {peerId: any, room: string, clientId: number}) {\n    return await this.socket.emit('ask peerId', data)\n  }\n\n  async ansModelPeerId(data: {peerId: any, room: string, clientId: number}) {\n    console.log(\"Answer \", data);\n    return await this.socket.emit('ans peerId', data)\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { cloneDeep } from 'lodash';\nimport { ModelService } from '../../../../services/model/model.service';\nimport { RoomVipService } from '../../../../services/roomVip/room-vip.service';\nimport { RoomPrivateService } from '../../../../services/roomPrivate/room-private.service';\n\ninterface Gain {\n  date: string,\n  gainVIP: number,\n  gainPrivate: number\n}\n\n@Component({\n  selector: 'app-gain',\n  templateUrl: './gain.component.html',\n  styleUrls: ['./gain.component.scss']\n})\nexport class GainComponent implements OnInit {\n  options: any;\n  updating: boolean = false;\n  gain: Gain[] = [\n    {date:  \"01/01/2020\", gainVIP: 50, gainPrivate: 50},\n    {date:  \"02/01/2020\", gainVIP: 70, gainPrivate: 10},\n    {date:  \"03/01/2020\", gainVIP: 30, gainPrivate: 120},\n    {date:  \"04/01/2020\", gainVIP: 100, gainPrivate: 100},\n    {date:  \"05/01/2020\", gainVIP: 120, gainPrivate: 50},\n    {date:  \"06/01/2020\", gainVIP: 50, gainPrivate: 90},\n    {date:  \"07/01/2020\", gainVIP: 80, gainPrivate: 150},\n  ];\n\n  info = {\n    modelId: 0,\n    modelPseudo: null\n  }\n\n  constructor(\n    private modelService: ModelService,\n    private roomVIPService: RoomVipService,\n    private roomPrivateService: RoomPrivateService\n  ) {\n    this.options = {\n      autoSize: true,\n      data: this.getData(),\n      series: [\n        {\n          xKey: 'date',\n          yKey: 'gainVIP',\n          yName: 'Gain VIP',\n          stroke: '#FB77FC',\n          marker: {\n            size: 2,\n            fill: '#FB77FC',\n            stroke: '#FB77FC',\n          },\n        },\n        {\n          xKey: 'date',\n          yKey: 'gainPrivate',\n          yName: 'Gain Privée',\n          stroke: '#4E009F',\n          marker: {\n            size: 2,\n            fill: '#4E009F',\n            stroke: '#4E009F',\n            color: '#fff'\n          },\n        }\n      ],\n      axes: [\n        {\n          type: 'category',\n          position: 'bottom',\n          nice: false,\n          // tick: { count: agCharts.time.second.every(3), color:  \"rgb(255, 255, 255)\"},\n          tick: { count: 0,color:  \"rgb(255, 255, 255)\"},\n          label: { format: '%m/%d/%Y', color:  \"rgb(255, 255, 255)\" },\n        },\n        {\n          type: 'number',\n          position: 'left',\n          label: { format: '#{.0f}', color:  \"#fff\"}\n        }\n      ],\n      background: {\n        fill: \"#FFF\",\n        visible: false\n      },\n      tooltip: {\n        enabled: true\n      },\n      navigator: {\n        enabled: true\n      },\n      title: { text: '' },\n      legend: {\n        position: 'bottom',\n        enabled: true,\n        item: {\n          label: {\n            color: 'white'\n          }\n        }\n      }\n    };\n  }\n\n  ngOnInit(): void {\n    this.getInfoModel();\n    this.startUpdates();\n    this.useDefaultGridStyle();\n  }\n\n  useDefaultGridStyle = () => {\n    const options = cloneDeep(this.options);\n\n    var gridStyle = [\n      {\n        stroke: 'white',\n        lineDash: [2, 1],\n      },\n    ];\n    options.axes[0].gridStyle = gridStyle;\n    options.axes[1].gridStyle = gridStyle;\n\n    this.options = options;\n  };\n\n  update = () => {\n    const options = cloneDeep(this.options);\n\n    options.data = this.getData();\n\n    this.options = options;\n  };\n\n  startUpdates = () => {\n    if (this.updating) {\n      return;\n    }\n    this.updating = true;\n    this.update();\n    setInterval(this.update, 2000);\n  };\n\n  getData() {\n    this.updating = false;\n    return this.gain;\n  }\n\n  getInfoModel() {\n    this.modelService.getInfo().subscribe(\n      (data) => {\n        // console.log(data);\n        this.info.modelId = data.id;\n        this.info.modelPseudo = data.pseudo;\n        this.gain = [];\n        this.getGainVip(data.id);\n        this.getGainPrivate(data.id);\n      }\n    )\n  }\n\n  getGainVip(id: number) {\n    this.roomVIPService.getGain(id).subscribe(\n      (data: [{createdAt: any, gain: number}]) => {\n        // console.log(\"Gain VIP \", data);\n        const result = data;\n        result.forEach(\n          (gain) => {\n            const gainTmp: Gain = {\n              date: this.getDate(gain.createdAt),\n              gainVIP: gain.gain,\n              gainPrivate: 0\n            }\n            this.gain.push(gainTmp);\n          }\n        )\n        console.log(this.gain);\n      }\n    )\n  }\n\n  getGainPrivate(id: number) {\n    this.roomPrivateService.getGain(id).subscribe(\n      (data: [{createdAt: any, gain: number}]) => {\n        // console.log(\"Gain Private \", data);\n        const result = data;\n        result.forEach(\n          (gain) => {\n            const gainTmp: Gain = {\n              date: this.getDate(gain.createdAt),\n              gainVIP: 0,\n              gainPrivate: gain.gain\n            }\n            this.gain.push(gainTmp);\n          }\n        )\n        console.log(this.gain);\n      }\n    )\n  }\n\n  getDate(date: string) {\n    let year = date.substring(0, 4);\n    let month = date.substring(5, 7);\n    let day = date.substring(8, 10);\n    const result = day+'/'+month+'/'+year;\n    return result;\n  }\n}\n\n","<div class=\"main_content\">\n  <div class=\"title_gain\">\n    HISTORIQUE DES GAINS\n  </div>\n\n  <div class=\"contain_line\">\n    <div class=\"wrapper\">\n      <ag-charts-angular\n        style=\"height: 70vh; width: 100%; overflow: hidden\"\n        [options]=\"options\"\n      ></ag-charts-angular>\n    </div>\n  </div>\n</div>\n","<app-header></app-header>\n\n<div class=\"contain_signup_one\">\n  <div class=\"inside_sign part_one\">\n    <h2>RECUPERATION <br> DU MOT DE PASSE</h2>\n    <div class=\"blank\"></div>\n  </div>\n</div>\n\n<div class=\"contain_signup_two inside_sign\">\n  <h3 class=\"title\">\n    Récupération  <br>\n    du mot de passe oublié\n  </h3>\n\n  <div class=\"descr\">\n      BETWEEN<span class=\"under_bold\">US</span>.LIVE <br>\n      Vous avez oublié le mot de passe ? <br>\n      Veuillez soumettre votre email. <br>\n      Un email de reinitialisation sera envoyé pour confirmation.\n  </div>\n\n  <form autocomplete=\"off\" (ngSubmit)=\"send()\">\n    <div class=\"form-group\">\n      <label for=\"pseudo\">Email *</label>\n      <input type=\"email\" name=\"email\" class=\"form-control input lighter\" [(ngModel)]=\"email\" required>\n      <div *ngIf=\"error\">\n        <small class=\"form-text error-text\">Veuillez compléter</small>\n      </div>\n    </div>\n\n    <div class=\"notif\">\n      * Champ obligatoire\n    </div>\n\n    <div class=\"action\">\n      <button class=\"btn btn_signup lighter\" type=\"submit\">\n        <div class=\"loader\" *ngIf=\"loading\"></div>\n        <span *ngIf=\"!loading\">ENVOYER</span>\n      </button>\n    </div>\n  </form>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ClientService } from '../../../services/client/client.service';\nimport { NotificationService } from '../../../services/notification/notification.service';\n\n@Component({\n  selector: 'app-send-forgot',\n  templateUrl: './send-forgot.component.html',\n  styleUrls: ['./send-forgot.component.scss']\n})\nexport class SendForgotComponent implements OnInit {\n  loading: boolean = false;\n  email: string = null;\n  error: boolean = false;\n  constructor(\n    private clientService: ClientService,\n    private notificationService: NotificationService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  send() {\n    if (!this.email) {\n      this.error = true;\n      return null;\n    }\n    this.error = false;\n    this.loading = true;\n    this.clientService.forgot(this.email).subscribe(\n      (data: {success: boolean, message: string}) => {\n        this.loading = false;\n        // console.log(data);\n        if (data.success) {\n          this.notificationService.infoMsg(data.message);\n          this.email = null;\n        } else {\n          this.notificationService.errorMsg(data.message);\n        }\n      }, (error) => {\n        console.log(error);\n        this.loading = false;\n      }\n    )\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { LocalStorageService } from 'ngx-localstorage';\nimport { nextTick } from 'process';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeaderService {\n  hidded = new Subject<boolean>();\n  unselected = new Subject<boolean>();\n  active = new Subject<number>();\n  connect  = new Subject<boolean>();\n\n  constructor() { }\n\n  hideHeader(data: boolean) {\n    this.hidded.next(data);\n  }\n\n  unselect(data: boolean) {\n    this.unselected.next(data);\n  }\n\n  activate(data: number) {\n    this.active.next(data);\n  }\n\n  connexion(data: boolean) {\n    this.connect.next(data);\n  }\n}\n","import { HeaderService } from './../../../services/header/header.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport * as $ from 'jquery';\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  pageId: number = 1;\r\n  menu = \"assets/icons/menu-dot.svg\";\r\n  close = \"assets/icons/close.svg\";\r\n  slided = false;\r\n  loaded: number = 1;\r\n  constructor(\r\n    private headerSrv: HeaderService\r\n  ) {\r\n    this.headerSrv.activate(3);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  load(position: number) {\r\n    this.loaded = position;\r\n  }\r\n\r\n  link(id: number) {\r\n    this.pageId = id;\r\n    if (this.slided) {\r\n      $(\"#left_side\").addClass(\"slideHide\");\r\n      this.slided = false;\r\n    }\r\n\r\n  }\r\n\r\n  slideMenu() {\r\n    $(\"#left_side\").removeClass(\"slideShow\");\r\n    $(\"#left_side\").removeClass(\"slideHide\");\r\n    this.slided = !this.slided;\r\n    if (this.slided) {\r\n      $(\"#left_side\").addClass(\"slideShow\");\r\n    } else {\r\n      $(\"#left_side\").addClass(\"slideHide\");\r\n    }\r\n  }\r\n\r\n}\r\n","<app-header actif=\"3\" connected=\"true\" model=\"true\"></app-header>\n\n\n<div class=\"main_dashboard\">\n  <div class=\"dashboard_header_1\">\n    <div class=\"text_param\" (click)=\"load(1)\" [ngClass]=\"{'active': loaded == 1}\">\n      Paramètres de mon compte\n    </div>\n    <!-- <div class=\"text_credit\" (click)=\"load(2)\" [ngClass]=\"{'active': loaded == 2}\">\n      Mes crédits\n    </div> -->\n  </div>\n\n  <div class=\"account_parameter\" *ngIf=\"loaded == 1\">\n\n    <div class=\"dashboard_header_2\">\n      Your Account Dashboard\n    </div>\n\n    <div class=\"mobile_menu\" (click)=\"slideMenu()\"  [ngClass]=\"{'open': slided}\">\n      <img [src]=\"menu\" alt=\"\">\n      <span>Menu</span>\n    </div>\n    <div class=\"content_dashboard\">\n      <div class=\"left_side\" id=\"left_side\">\n        <div class=\"block_left_1\">\n          <div class=\"menu\">MON PROFIL</div>\n          <div class=\"line\"></div>\n          <div class=\"menu\">PARAMETRE DU PROFIL</div>\n          <div class=\"line\"></div>\n          <div class=\"menu link\" [ngClass]=\"{'activated': pageId == 1}\" (click)=\"link(1)\">Information personnelle</div>\n          <div class=\"menu link\" [ngClass]=\"{'activated': pageId == 2}\" (click)=\"link(2)\">Paramètre du compte</div>\n          <div class=\"menu link\" [ngClass]=\"{'activated': pageId == 3}\" (click)=\"link(3)\">Changer mot de passe</div>\n        </div>\n        <div class=\"block_left_2\">\n          <div class=\"line\"></div>\n          <div class=\"menu link\" [ngClass]=\"{'activated': pageId == 4}\" (click)=\"link(4)\">SOLDE DE MON COMPTE</div>\n          <div class=\"line\"></div>\n          <div class=\"menu link\" [ngClass]=\"{'activated': pageId == 5}\" (click)=\"link(5)\">HISTORIQUES DES GAINS</div>\n          <div class=\"line\"></div>\n          <div class=\"menu link\" [ngClass]=\"{'activated': pageId == 6}\" (click)=\"link(6)\">STATISTIQUES DE CONNEXION</div>\n        </div>\n      </div>\n\n      <div class=\"right_side\">\n        <app-information *ngIf=\"pageId === 1\"></app-information>\n        <app-setting  *ngIf=\"pageId === 2\"></app-setting>\n        <app-password-modele  *ngIf=\"pageId === 3\"></app-password-modele>\n        <app-solde  *ngIf=\"pageId === 4\"></app-solde>\n        <app-gain *ngIf=\"pageId === 5\"></app-gain>\n        <app-connexion *ngIf=\"pageId === 6\"></app-connexion>\n      </div>\n\n    </div>\n  </div>\n\n  <div class=\"account_credit\" *ngIf=\"loaded == 2\">\n    <app-solde></app-solde>\n  </div>\n</div>\n<br><br>\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LocalStorageService } from 'ngx-localstorage';\nimport { Observable, Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { loginUser } from 'src/app/interfaces/login.interface';\nimport { registerClient, registerModel } from '../../interfaces/register.interface';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  endpoint = environment.endpoint\n\n  authentified  = new Subject<boolean>();\n\n  constructor(\n    private store: LocalStorageService,\n    private http : HttpClient,\n    public router : Router\n  ) { }\n\n  login(who: string) {\n    if (who == 'model') {\n      console.log(\"connexion model\");\n      this.store.set(\"model\", true);\n    }\n    this.authentication(true);\n  }\n\n  logout(who: string) {\n    if (who == 'model') {\n      console.log(\"deconnexion model\");\n      this.store.set(\"model\", false);\n    }\n    this.authentication(false);\n  }\n\n  authentication(data: boolean) {\n    this.authentified.next(data);\n    this.store.set(\"auth\", data);\n  }\n\n  loginClient(user : loginUser) : Observable<any>{\n    return this.http.post(`${this.endpoint}/client/login`,user, httpOptions)\n  }\n\n  loginModel(user : loginUser) : Observable<any>{\n    return this.http.post(`${this.endpoint}/model/login`,user, httpOptions)\n  }\n\n  registerClient(user : registerClient) : Observable<any>{\n    return this.http.post(`${this.endpoint}/client/register`,user,httpOptions)\n  }\n\n  registerModel(user : registerModel) : Observable<any>{\n    return this.http.post(`${this.endpoint}/model/register`,user,httpOptions)\n  }\n\n  uploadImagesModel(formData: FormData): Observable<any> {\n    return this.http.post(`${this.endpoint}`,formData,{\n        reportProgress: true,\n        observe: 'events'\n    });\n  }\n\n  // Not\n  // confirm(email : string , password : string, codeConfirmUser : string) : Observable<any>{\n  //   return this.http.put(`${this.endpoint}/confirmation`,{email,password, codeConfirmUser}, httpOptions)\n  // }\n\n  // Not\n  // resendConfirm(email : string) : Observable<any>{\n  //   return this.http.post(`${this.endpoint}/resend`,{email}, httpOptions)\n  // }\n\n  // Not\n  forgot(email : string) : Observable<any>{\n    const options = {\n      email : email\n    }\n    return this.http.post(`${this.endpoint}/forgot`, options, httpOptions)\n  }\n\n  checkTokenValidation(token : string) : Observable<any>{\n    return this.http.get(`${this.endpoint}/forgot?token=${token}`)\n  }\n\n  changePassowrd(password : string,newPassword : string) : Observable<any>{\n    return this.http.put(`${this.endpoint}/password`,{password : password, newPassword : newPassword},httpOptions)\n  }\n\n  updatePassword(token : string,password : string) : Observable<any>{\n    return this.http.put(`${this.endpoint}/forgot`,{token,password},httpOptions)\n  }\n\n  getToken(){\n    let token = this.store.get(\"token\");\n    if (token === null) {\n      return false;\n    }\n    return token;\n  }\n\n  get isConnected() : boolean{\n    let authToken = this.store.get(\"token\");\n    return authToken != null\n  }\n\n  logoutUser(who: string, route: string){\n    let removeToken =  this.store.set(\"token\", null);\n        if (removeToken == null) {\n            // this.router.navigate(['connexion']);\n            this.router.navigate([route]);\n        }\n  }\n\n  async saveToken(token, id?: number) {\n    if (id) await this.store.set(\"identification//\", id);\n    await this.store.set(\"token\", token);\n  }\n\n}\n","export enum TypeTimer {\r\n  PRIVATE = 'private',\r\n  FREE = 'free',\r\n  VIP = 'vip'\r\n}\r\n\r\nexport interface CreditTimer {\r\n  clientId: number;\r\n  modelId: number;\r\n  timerId: number;\r\n  showCredit: number;\r\n  showSecond: number;\r\n  showType: TypeTimer;\r\n  roomId: number;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { cloneDeep } from 'lodash';\nimport * as agCharts from 'ag-charts-community';\nimport { log } from './connexion';\n@Component({\n  selector: 'app-connexion',\n  templateUrl: './connexion.component.html',\n  styleUrls: ['./connexion.component.scss']\n})\nexport class ConnexionComponent implements OnInit {\n  options: any;\n  updating: boolean = false;\n  history = [\n    // { year: '', lundi: 0, mardi: 0, mercredi: 0, jeudi: 0, vendredi: 0, samedi: 0, dimanche: 0},\n    { year: '2014', lundi: 18, mardi: 20, mercredi: 10, jeudi: 10, vendredi: 8, samedi: 10, dimanche: 6}\n  ];\n\n  constructor() {\n    this.options = {\n      autoSize: true,\n      data: this.getData(),\n      series: [\n        {\n          type: 'column',\n          xKey: 'year',\n          yKeys: ['lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi', 'dimanche'],\n          yNames: ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche'],\n          grouped: true,\n          fills: ['#117abe', 'rgb(247, 113, 4)', 'rgb(117, 117, 116)', 'rgb(255, 166, 0)',\n          'rgb(0, 0, 255)', 'rgb(0, 128, 0)', 'rgb(0, 0, 85)'\n          ],\n          strokeWidth: 0,\n          marker: {\n            enabled: false,\n            fill: '#80a0c3',\n          },\n        },\n      ],\n      axes: [\n        {\n          type: 'category',\n          position: 'bottom',\n          title: {\n            enabled: true,\n            text: 'Nombre d\\'heure de connexion',\n            color: 'white'\n          },\n          tick: { color:  \"rgb(255, 255, 255)\"},\n          label: {\n            color:  \"rgb(255, 255, 255)\",\n            formatter: function (params) {\n              return '';\n            },\n          },\n        },\n        {\n          type: 'number',\n          position: 'left',\n          keys: ['lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi', 'dimanche'],\n          title: {\n            enabled: false\n          },\n          label: {\n            color:  \"rgb(255, 255, 255)\",\n            formatter: function (params) {\n              return params.value;\n            },\n          },\n        }\n      ],\n      background: {\n        fill: \"#FFF\",\n        visible: false\n      },\n      tooltip: {\n        enabled: true\n      },\n      navigator: {\n        enabled: true\n      },\n      title: { text: '' },\n      legend: {\n        position: 'bottom',\n        enabled: true,\n        item: {\n          label: {\n            color: 'white'\n          }\n        }\n      }\n    };\n  }\n\n  ngOnInit(): void {\n    this.startUpdates();\n    this.useDefaultGridStyle();\n  }\n\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    console.log(\"destroyed\");\n  }\n\n  useDefaultGridStyle = () => {\n    const options = cloneDeep(this.options);\n\n    var gridStyle = [\n      {\n        stroke: 'white',\n        lineDash: [2, 1],\n      },\n    ];\n    options.axes[0].gridStyle = gridStyle;\n    options.axes[1].gridStyle = gridStyle;\n    this.options = options;\n  };\n\n  update = () => {\n    const options = cloneDeep(this.options);\n    options.data = this.getData();\n    this.options = options;\n  };\n\n  startUpdates = () => {\n    if (this.updating) {\n      return;\n    }\n    this.updating = true;\n    this.update();\n    // setInterval(this.update, 500);\n  };\n\n  getData() {\n    this.updating = false;\n    return this.history;\n  }\n}\n\n","<div class=\"main_content\">\n  <div class=\"title_cnx\">\n    STATISTIQUE DE CONNEXION\n  </div>\n\n  <div class=\"contain_histogramme\">\n    <div class=\"wrapper\">\n      <ag-charts-angular\n        style=\"height: 100%; width: 100%; overflow: hidden\"\n        [options]=\"options\"\n      ></ag-charts-angular>\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit,\r\n  OnDestroy, PLATFORM_ID,\r\n  Inject, ViewChild,\r\n  ElementRef } from '@angular/core';\r\nimport {isPlatformBrowser} from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LocalStorageService } from 'ngx-localstorage';\r\nimport { Chat, ChatSocket } from 'src/app/interfaces/chat.interface';\r\nimport { ChatService } from 'src/app/services/chat/chat.service';\r\nimport { ModelService } from 'src/app/services/model/model.service';\r\nimport { SocketService } from 'src/app/services/socket/socket.service';\r\nimport { RoomPrivateService } from '../../../services/roomPrivate/room-private.service';\r\nimport { PopupService } from '../../../services/popup/popup.service';\r\nimport { ProfilService } from '../../../services/profil/profil.service';\r\nimport { RoomVipService } from '../../../services/roomVip/room-vip.service';\r\nimport { TimerService } from '../../../services/timer/timer.service';\r\nimport { TypeTimer } from 'src/app/interfaces/timer.interface';\r\nimport { CreditService } from '../../../services/credit/credit.service';\r\n\r\n// Peer\r\nimport './../shim';\r\nimport Peer from \"peerjs\"\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-live-vip-model',\r\n  templateUrl: './live-vip-model.component.html',\r\n  styleUrls: ['./live-vip-model.component.scss', './../../live/live.scss']\r\n})\r\nexport class LiveVipModelComponent implements OnInit, OnDestroy {\r\n  context: string = \"LIVE VIP\";\r\n  imgPoster = \"assets/images/image.png\";\r\n  thrombone = \"assets/icons/paper-clip.svg\";\r\n  send = \"assets/icons/send-button.svg\";\r\n  dot = \"assets/icons/more_purple.svg\";\r\n  close = \"assets/icons/close.svg\";\r\n\r\n  toggleDot: boolean = false;\r\n\r\n  client = {\r\n    img: \"assets/images/user_chat.png\",\r\n    pseudo: '',\r\n    id: 0\r\n  }\r\n\r\n  info = {\r\n    bg : \"assets/logos/dark-light.jpg\",\r\n    message : '',\r\n    idRoom: 0,\r\n    pseudo: '',\r\n    chatColor:'#FB77FC',\r\n    modelId: 0,\r\n    actif: 0,\r\n    creditModel: 0,\r\n    idCreditModel: 0,\r\n    winCredit: 0\r\n  }\r\n\r\n  timer = {\r\n    id: 0,\r\n    hour: 0,\r\n    minute: 0,\r\n    second: 0,\r\n    fail: false,\r\n    reinit: false\r\n  };\r\n\r\n  stat = {\r\n    id_show: 0,\r\n    type_show : null,\r\n    tarif_show: 0,\r\n    time_show: 0,\r\n    client: this.client.pseudo,\r\n    time_passed : this.timer.hour + ':' + this.timer.minute + ':' + this.timer.second,\r\n    hour_passed : null,\r\n    minute_passed : null,\r\n    second_passed : null,\r\n    actualCredit: this.info.creditModel,\r\n    winCredit: this.info.winCredit,\r\n    totalCredit: this.info.creditModel +  this.info.winCredit\r\n  }\r\n\r\n  messages: Chat[] = [];\r\n  leaved: boolean = false;\r\n\r\n  joinSub = new Subscription();\r\n  leaveSub = new Subscription();\r\n  messageSub = new Subscription();\r\n  peerSub = new Subscription();\r\n\r\n  // WEB RTC VIDEO\r\n  @ViewChild('video_live_model', {static: true}) video: ElementRef<HTMLVideoElement>;\r\n  @ViewChild('video_live_client', {static: true}) remote_video: ElementRef<HTMLVideoElement>;\r\n\r\n  private peer: Peer;\r\n  peerIdShare: string;\r\n  peerId: string;\r\n  private lazyStream: any;\r\n  currentPeer: any;\r\n  private peerList: Array<any> = [];\r\n\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private _platform: Object,\r\n    private router: Router,\r\n    private store: LocalStorageService,\r\n    private modelService: ModelService,\r\n    private route: ActivatedRoute,\r\n    private chatService: ChatService,\r\n    private roomVipService: RoomVipService,\r\n    private socketService: SocketService,\r\n    private profilService: ProfilService,\r\n    private timerService: TimerService,\r\n    private creditService: CreditService) {\r\n      this.peer = new Peer();\r\n      // const id = this.route.snapshot.paramMap.get('clientId');\r\n      // this.client.id = parseInt(id);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getInfo();\r\n    this.initLiveVideo();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.joinSub.unsubscribe();\r\n    this.leaveSub.unsubscribe();\r\n    this.messageSub.unsubscribe();\r\n    this.peerSub.unsubscribe();\r\n  }\r\n\r\n  // Get info Model\r\n  getInfo() {\r\n    this.modelService.getInfo().subscribe(\r\n      (data) => {\r\n        // console.log('Get info ', data);\r\n        this.info.bg = data.path_soft;\r\n        this.info.modelId = data.id;\r\n        this.info.pseudo = data.pseudo;\r\n        this.getInfoRoom();\r\n        this.getCredit();\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  getInfoRoom() {\r\n    this.roomVipService.getRoomModel(this.info.modelId).subscribe(\r\n      (data) => {\r\n        // console.log('Model room ', data);\r\n        this.info.idRoom = data.idRoom;\r\n        this.info.actif = data.actif;\r\n        this.client.id = data.clientId;\r\n        this.getMessages();\r\n        this.initSocket();\r\n        this.getInfoClient();\r\n      }\r\n    )\r\n  }\r\n\r\n  getCredit() {\r\n    this.creditService.getCredit().subscribe(\r\n      (data) => {\r\n        // console.log(\"Credit \", data);\r\n        this.info.creditModel = data ? data.credit : 0;\r\n        this.info.idCreditModel = data ? data.id : 0;\r\n        this.stat.totalCredit = this.info.creditModel;\r\n        this.getGain();\r\n      }\r\n    );\r\n\r\n    // Launch the timer\r\n    this.initTimer();\r\n    this.getCostShow();\r\n  }\r\n\r\n  initSocket() {\r\n    if (!this.roomVipService.joinedRoom(this.info.idRoom)) {\r\n      this.roomVipService.joinRoom(this.info.idRoom);\r\n      this.socketService.joinVip(this.info.idRoom, this.info.modelId);\r\n    }\r\n\r\n    this.joinSub = this.socketService.listen(`joined ${this.info.idRoom}V`).subscribe(\r\n      (data: any) => {\r\n        console.log('joined ', data);\r\n        // this.info.actif = data < 1 ? 0 : data;\r\n        // this.info.actif = data > 2 ? 2 : data;\r\n        this.info.actif = 2;\r\n        this.leaved = false;\r\n      }\r\n    );\r\n\r\n    this.leaveSub = this.socketService.listen(`leaved ${this.info.idRoom}V`).subscribe(\r\n      (data: any) => {\r\n        console.log('leaved ', data);\r\n        // this.info.actif = data < 1 ? 0 : data;\r\n        // this.info.actif = data > 2 ? 2 : data;\r\n        this.info.actif = 1;\r\n        this.leaved = true;\r\n      }\r\n    );\r\n\r\n    this.messageSub = this.socketService.listen(`message ${this.info.idRoom}V`).subscribe(\r\n      (data) => {\r\n        // console.log('Message from client ', data);\r\n        this.getMessages();\r\n      }\r\n    );\r\n\r\n    this.peerSub = this.socketService.listen(`peerId ${this.info.idRoom}V`).subscribe(\r\n      (data: {peerId: any, idRoom: string}) => {\r\n        console.log('Peer Id received ', data);\r\n        this.peerIdShare = data.peerId;\r\n        this.connectWithPeer();\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  toggleDots() {\r\n    this.toggleDot = !this.toggleDot;\r\n    // console.log(this.toggleDot);\r\n  }\r\n\r\n  sendMessage() {\r\n    if (!this.info.message) return;\r\n\r\n    const data: Chat = {\r\n      idRoom: this.info.idRoom,\r\n      message: this.info.message,\r\n      type_source: 'model',\r\n      id_source: this.info.modelId,\r\n      type_chat: 'vip',\r\n      code_couleur: this.info.chatColor\r\n    }\r\n\r\n    this.chatService.postMessage(data).subscribe(\r\n      (data) => {\r\n        this.getMessages();\r\n        const msg: ChatSocket = {\r\n          room: this.info.idRoom + 'V',\r\n          role: 'model',\r\n          id: this.info.modelId,\r\n          message: this.info.message\r\n        }\r\n        this.socketService.sendMessage(msg);\r\n        this.info.message = null;\r\n      }\r\n    )\r\n  }\r\n\r\n  getMessages() {\r\n    this.chatService.getMessage(this.info.idRoom, 'vip').subscribe(\r\n      (data) => {\r\n        // console.log('Messages ', data);\r\n        this.messages = data;\r\n      }\r\n    )\r\n  }\r\n\r\n  getInfoClient() {\r\n    this.roomVipService.getInfo(this.client.id).subscribe( // info client\r\n      (data) => {\r\n        // console.log(\"Info client \", data);\r\n        this.client.pseudo = data.pseudo;\r\n        this.stat.client = data.pseudo;\r\n      }\r\n    )\r\n  }\r\n\r\n  async liveOut() {\r\n    this.onStop();\r\n    this.leaved = true;\r\n    await (await this.leaveTimer()).subscribe(\r\n      async (data) => {\r\n        this.timer.reinit = true;\r\n        this.clearTimer(); // set to zero\r\n        return await this.socketService.leaveVip(this.info.idRoom, 'model').then(\r\n          async (data) => {\r\n          this.roomVipService.leaveRoom();\r\n          await this.profilService.updateStatus(this.info.modelId, 'En ligne').subscribe(\r\n          (data) => {\r\n            this.router.navigate(['/modele/chat']);\r\n            }\r\n          )}\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n      // Timer\r\n  async initTimer() {\r\n        this.timerService.beginTimerModel(this.info.modelId, TypeTimer.VIP).subscribe(\r\n          async (data) => {\r\n            // console.log('Timer ', data);\r\n            const created: Date = data.createdAt;\r\n            const updated: Date = data.updatedAt;\r\n            this.timer.id = data.id;\r\n            // console.log(created.toString(), \" to \", updated.toString());\r\n            const {hour, minute, second} = this.timerService.convertTime(created.toString(), updated.toString());\r\n            this.timer.hour = hour;\r\n            this.timer.minute = minute;\r\n            this.timer.second = second;\r\n            this.stat.time_passed = this.timer.hour + ' : ' + this.timer.minute + ' : ' +this.timer.second;\r\n            this.stat.hour_passed = this.timer.hour;\r\n            this.stat.minute_passed = this.timer.minute;\r\n            this.stat.second_passed = this.timer.second;\r\n            // console.log(this.timer.hour, ':', this.timer.minute, ':', this.timer.second);\r\n          }\r\n    )\r\n  }\r\n\r\n  async getCostShow() {\r\n    return await this.timerService.getCostShow(TypeTimer.VIP).subscribe(\r\n      (data: any) => {\r\n        // console.log(\"Show Cost \", data);\r\n        this.stat.tarif_show = data.credit;\r\n        this.stat.time_show = data.second;\r\n        this.stat.type_show = (data.type + '').toString().toUpperCase();\r\n        this.stat.id_show = data.id;\r\n        this.beginTimer();\r\n      }\r\n    )\r\n  }\r\n\r\n  beginTimer() {\r\n    // console.log(\"timer second \", this.show.second);\r\n    const delay = this.stat.time_show * 1000;\r\n    // console.log(delay, \" ms \");\r\n    setInterval(\r\n      () => {\r\n        if (this.info.actif > 1) this.getGain();\r\n      }, delay\r\n    )\r\n  }\r\n\r\n  getGain() {\r\n    this.roomVipService.getRoomModel(this.info.modelId).subscribe(\r\n      (data) => {\r\n        // console.log(\"Gain \", data);\r\n        this.stat.winCredit = data.gain;\r\n        this.stat.actualCredit = this.stat.totalCredit - this.stat.winCredit;\r\n        this.info.winCredit = data.gain;\r\n    })\r\n  }\r\n\r\n  // Timer set to 0\r\n  clearTimer() {\r\n    this.timer.reinit = true;\r\n  }\r\n\r\n  async leaveTimer(): Promise<Observable<any>> {\r\n    const data = {\r\n      id: this.timer.id,\r\n      type: TypeTimer.VIP,\r\n      leaved: true,\r\n      push: new Date().toString()\r\n    }\r\n\r\n    return await this.timerService.updateTimer(data);\r\n  }\r\n\r\n\r\n  // WEB RTC - LIVE VIDEO\r\n  initLiveVideo() {\r\n    // console.log(\"Start\");\r\n    this.onStart();\r\n    this.getPeerId();\r\n  }\r\n\r\n  onStart(){\r\n    if(isPlatformBrowser(this._platform) && 'mediaDevices' in navigator) {\r\n      navigator.mediaDevices.getUserMedia({video: true}).then((ms: MediaStream) => {\r\n        const _video = this.video.nativeElement;\r\n        _video.srcObject = ms;\r\n        _video.play();\r\n      });\r\n    }\r\n  }\r\n\r\n  onStop() {\r\n    if (this.video && this.video.nativeElement.srcObject) {\r\n      this.video.nativeElement.pause();\r\n      if ((this.video.nativeElement.srcObject as MediaStream).getVideoTracks()[0]) {\r\n        (this.video.nativeElement.srcObject as MediaStream).getVideoTracks()[0].stop();\r\n      }\r\n      this.video.nativeElement.srcObject = null;\r\n    }\r\n  }\r\n\r\n  private getPeerId = () => {\r\n    // console.log(\"Get Peer\");\r\n    this.peer.on('open', (id) => {\r\n      console.log(\"Peer Id \", id);\r\n      this.peerId = id;\r\n    });\r\n\r\n    this.peer.on('call', (call) => {\r\n      this.onStop();\r\n      navigator.mediaDevices.getUserMedia({\r\n        video: true,\r\n        audio: true\r\n      }).then((stream) => {\r\n        this.lazyStream = stream;\r\n        const _video = this.video.nativeElement;\r\n        _video.srcObject = stream;\r\n        _video.play();\r\n        call.answer(stream);\r\n        call.on('stream', (remoteStream) => {\r\n          if (!this.peerList.includes(call.peer)) {\r\n            this.streamRemoteVideo(remoteStream);\r\n            this.currentPeer = call.peerConnection;\r\n            this.peerList.push(call.peer);\r\n          }\r\n        });\r\n      }).catch(err => {\r\n        console.log(err + 'Unable to get media');\r\n      });\r\n    });\r\n  }\r\n\r\n  connectWithPeer(): void {\r\n    this.callPeer(this.peerIdShare);\r\n  }\r\n\r\n  private callPeer(id: string): void {\r\n    navigator.mediaDevices.getUserMedia({\r\n      video: true,\r\n      audio: true\r\n    }).then((stream) => {\r\n      this.lazyStream = stream;\r\n      const call = this.peer.call(id, stream);\r\n      call.on('stream', (remoteStream) => {\r\n        if (!this.peerList.includes(call.peer)) {\r\n          this.streamRemoteVideo(remoteStream);\r\n          this.currentPeer = call.peerConnection;\r\n          this.peerList.push(call.peer);\r\n        }\r\n      });\r\n    }).catch(err => {\r\n      console.log(err + 'Unable to connect');\r\n    });\r\n  }\r\n\r\n  private streamRemoteVideo(stream: any): void {\r\n    const _video = this.remote_video.nativeElement;\r\n    _video.srcObject = stream;\r\n    _video.play();\r\n    // const video = document.createElement('video');\r\n    // video.classList.add('video');\r\n    // video.srcObject = stream;\r\n    // video.play();\r\n    // document.getElementById('remote-video').append(video);\r\n  }\r\n\r\n}\r\n","<app-header connected=\"true\" model=\"true\"></app-header>\n\n\n<div class=\"main_live\">\n  <img [src]=\"dot\" alt=\"\" id=\"dots\" (click)=\"toggleDots()\">\n  <div class=\"contain_top\">\n    <app-topbar [context]=\"context\" [actif]=\"info.actif\"\n    [hour]=\"this.timer.hour\"\n    [minute]=\"this.timer.minute\"\n    [second]=\"this.timer.second\"\n    [reinit]=\"this.timer.reinit\"\n    ></app-topbar>\n    <div class=\"contain_left\">\n      <div class=\"show_live_left\">\n\n        <video autoplay [poster]=\"info.bg\" id=\"video_live_model\" #video_live_model>\n        </video>\n\n      </div>\n      <div class=\"client_live\" [ngClass]=\"{'dry_up': leaved}\">\n        <video [poster]=\"client.img\" class=\"client_flow\" id=\"video_live_client\" #video_live_client></video>\n      </div>\n    </div>\n    <div class=\"contain_right\">\n      <div class=\"show_live_right\">\n        <mat-tab-group mat-align-tabs=\"center\">\n          <mat-tab label=\"Live Chat\">\n\n            <app-live-free-chat [modelId]=\"info.modelId\" [messages]=\"messages\"\n            [profil]=\"info.bg\"></app-live-free-chat>\n\n          </mat-tab>\n          <mat-tab label=\"Statistiques\">\n\n            <app-live-vip-stat [type_show]=\"stat.type_show\" [tarif_show]=\"stat.tarif_show\"\n            [time_show]=\"stat.time_show\" [client]=\"stat.client\"\n            [time_passed]=\"stat.time_passed\" [hour_passed]=\"stat.hour_passed\"\n            [minute_passed]=\"stat.minute_passed\" [second_passed]=\"stat.second_passed\"\n            [actualCredit]=\"stat.actualCredit\"\n            [winCredit]=\"stat.winCredit\" [totalCredit]=\"stat.totalCredit\"\n            ></app-live-vip-stat>\n\n          </mat-tab>\n        </mat-tab-group>\n      </div>\n\n      <div class=\"leave\" *ngIf=\"leaved\">\n        Votre client {{this.client.pseudo}} a quitté le room VIP.\n      </div>\n\n    </div>\n  </div>\n\n  <div class=\"contain_bottom\">\n    <div class=\"contain_left\">\n      <div class=\"contain_action contain_action_desktop\">\n        <div class=\"out_show btn_show\">\n          <button class=\"btn btn_out_show lighter\" (click)=\"liveOut()\">Sortir du Show</button>\n          <p></p>\n        </div>\n      </div>\n\n      <!-- // mobile -->\n      <div class=\"contain_action contain_action_mobile\" *ngIf=\"toggleDot\">\n        <div class=\"out_show btn_show\">\n          <button class=\"btn btn_out_show lighter\" (click)=\"liveOut()\">Sortir du Show</button>\n          <p></p>\n        </div>\n      </div>\n\n    </div>\n    <div class=\"contain_right\">\n      <div class=\"contain_message\">\n        <div class=\"contain_thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n        </div>\n        <form (ngSubmit)=\"sendMessage()\">\n        <div class=\"input_text\">\n            <input type=\"text\" name=\"message\" autocomplete=\"off\"\n            placeholder=\"Entrer votre message ici ...\" [(ngModel)]=\"info.message\">\n            <button type=\"submit\">\n              <div class=\"p\">\n                <img [src]=\"send\" alt=\"\">\n              </div>\n            </button>\n        </div>\n      </form>\n      </div>\n    </div>\n  </div>\n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  // endpoint: \"http://localhost:3000\",\n  endpoint: \"https://143.198.109.141/api\",\n  CRYPT_PSEUDO: \"storm/betweenus?...\",\n  CRYPT_PASS: \"0@8between.us\",\n  CRYPT_PSEUDO_MODEL: \"storm://betweenus?...\",\n  CRYPT_PASS_MODEL: \"@0@8çççbetween.us\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { ClientCam } from '../../../../interfaces/chat.interface';\r\n\r\n@Component({\r\n  selector: 'app-live-private-cam',\r\n  templateUrl: './live-private-cam.component.html',\r\n  styleUrls: ['./live-private-cam.component.scss']\r\n})\r\nexport class LivePrivateCamComponent implements OnInit {\r\n  @Input()\r\n  clients: ClientCam[];\r\n\r\n  @Input()\r\n  canSelect: boolean;\r\n\r\n  @Output()\r\n  clientSelected = new EventEmitter<number>();\r\n\r\n  idSelected: number = null;\r\n\r\n  img = \"assets/logos/dark-light.jpg\";\r\n  // img = \"assets/images/user_chat.png\";\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  selectClient(id: number) {\r\n    if (this.canSelect) {\r\n      this.idSelected = this.idSelected == id ? null : id;\r\n      this.clientSelected.emit(this.idSelected);\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"main_live_cam\">\n  <div class=\"camera_item\" *ngFor=\"let item of clients\">\n    <video autoplay class=\"live_cam\"\n    [poster]=\"img\" id=\"video_live_client\">\n    </video>\n    <div class=\"Pseudo\" (click)=\"selectClient(item.client.id)\"\n    [ngClass]=\"{'selected': idSelected === item.client.id}\">\n      {{item.client.pseudo}}\n    </div>\n  </div>\n</div>\n","<div class=\"main_solde\">\n  <img [src]=\"coinImg\" alt=\"\">\n  <div class=\"contain_solde\">\n    {{solde}} crédit<span *ngIf=\"solde > 1\">s</span>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { CreditService } from '../../../../services/credit/credit.service';\r\n\r\n@Component({\r\n  selector: 'app-solde',\r\n  templateUrl: './solde.component.html',\r\n  styleUrls: ['./solde.component.scss']\r\n})\r\nexport class SoldeComponent implements OnInit {\r\n  coinImg = \"assets/icons/coin-stack.svg\";\r\n  solde = 500;\r\n\r\n  constructor(\r\n    private creditService: CreditService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCredit();\r\n  }\r\n\r\n  getCredit() {\r\n    this.creditService.getCredit().subscribe(\r\n      (data) => {\r\n        console.log(data);\r\n        this.solde = data.credit;\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<app-header></app-header>\n\n<div class=\"contain_signup_one\">\n  <div class=\"inside_sign part_one\">\n    <h2>NOUVEAU <br> MOT DE PASSE</h2>\n    <div class=\"blank\"></div>\n  </div>\n</div>\n\n<div class=\"contain_signup_two inside_sign\">\n  <h3 class=\"title\">\n    Réinitialisation  <br>\n    du mot de passe oublié\n  </h3>\n\n  <!-- <div class=\"descr\">\n      BETWEEN<span class=\"under_bold\">US</span>.LIVE <br>\n      Entrer le nouveau mot de passe <br>\n      Et confirmer le mot de passe. <br>\n  </div> -->\n\n  <form autocomplete=\"off\" (ngSubmit)=\"send()\">\n    <div class=\"form-group\">\n      <label for=\"pseudo\">Nouveau mot de passe *</label>\n      <input type=\"password\" name=\"newPassword\" class=\"form-control input lighter\"\n      [(ngModel)]=\"newPassword\" required>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"pseudo\">Confirmer le mot de passe *</label>\n      <input type=\"password\" name=\"confirmPassword\" class=\"form-control input lighter\"\n      [(ngModel)]=\"confirmPassword\" required>\n    </div>\n\n    <div *ngIf=\"errorToken\">\n      <small class=\"form-text error-text\" style=\"font-size: 15px;\">\n        {{errorToken}}\n      </small>\n    </div>\n\n    <div class=\"notif\">\n      * Champ obligatoire\n    </div>\n\n    <div class=\"action\">\n      <button class=\"btn btn_signup lighter\" type=\"submit\">\n        <div class=\"loader\" *ngIf=\"loading\"></div>\n        <span *ngIf=\"!loading\">CONFIRMER</span>\n      </button>\n    </div>\n  </form>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProfilService } from '../../../services/profil/profil.service';\nimport { LocalStorageService } from 'ngx-localstorage';\nimport { ClientService } from '../../../services/client/client.service';\nimport { ModelService } from '../../../services/model/model.service';\nimport { AuthService } from '../../../services/auth/auth.service';\nimport { LogService } from '../../../services/log/log.service';\nimport { RoomService } from '../../../services/room/room.service';\n\n@Component({\n  selector: 'app-new-password',\n  templateUrl: './new-password.component.html',\n  styleUrls: ['./new-password.component.scss']\n})\nexport class NewPasswordComponent implements OnInit {\n  token  = null;\n  newPassword: string = null;\n  confirmPassword: string = null;\n  errorToken: string = null;\n  loading: boolean = false;\n\n  info = {\n    id: 0,\n    role: null\n  }\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private profilService: ProfilService,\n    private store: LocalStorageService,\n    private clientService: ClientService,\n    private modelService: ModelService,\n    private router: Router,\n    private authService: AuthService,\n    private logService: LogService,\n    private roomService: RoomService\n  )\n  {\n    this.activatedRoute.queryParams.subscribe(params => {\n      this.token = params['token'];\n    });\n  }\n\n  ngOnInit(): void {\n    this.verifyToken();\n  }\n\n  verifyToken() {\n    if (!this.token) {\n      this.errorToken = \"Token invalid\";\n      return null;\n    }\n    this.store.set(\"token\", this.token);\n    this.profilService.getCredential().subscribe(\n      (data: {id: number, role: string}) => {\n        if (data.id && data.role) {\n          this.info.id = data.id;\n          this.info.role = data.role;\n        } else {\n          this.errorToken = \"Token invalid\";\n        }\n        console.log(\"Credential \", data);\n      }, (error) => {\n        this.errorToken = \"Token invalid\";\n      }\n    )\n  }\n\n  send() {\n    this.errorToken = null;\n\n    if (this.newPassword !== this.confirmPassword) {\n      this.errorToken = \"Mot de passe ne correspond pas\";\n      return null;\n    }\n\n    if (!this.newPassword || !this.confirmPassword) {\n      this.errorToken = \"Veuillez completer les champs\";\n      return null;\n    }\n\n    this.loading = true;\n\n    if (this.info.role === 'model') {\n      this.modelService.reinitPassword(this.info.id, this.newPassword).subscribe(\n        (data) => {\n          // console.log(\" reinit model \",data);\n          if (data.access_token) {\n            this.authService.saveToken(data.access_token).then(\n              () => {\n                this.saveLog();\n                this.roomService.createRoom().subscribe(\n                    (data) => {\n                      this.loading = false;\n                      this.store.set(\"room\", data.room);\n                      this.router.navigate(['/modele/profile']);\n                    }\n                )\n              }, (error) => {\n                console.log(error);\n                this.loading = false;\n              }\n            );\n          }\n        }\n      )\n    } else if (this.info.role === 'client') {\n      this.clientService.reinitPassword(this.info.id, this.newPassword).subscribe(\n        (data) => {\n          // console.log(\" reinit client \",data);\n          if (data.access_token) {\n            this.authService.saveToken(data.access_token, data.id).then(\n              () => {\n                    this.loading = false;\n                    this.router.navigate(['/accueil/registered']);\n              }\n            );\n          }\n        }, (error) => {\n          console.log(error);\n          this.loading = false;\n        }\n      )\n    }\n  }\n\n  saveLog() {\n    this.logService.createLog(\"reinitialisation mot de passe\").subscribe(\n      (data) => {\n        // console.log('Log ', data)\n      }, (error) => {\n        console.log(error);\n      }\n    );\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-out',\n  templateUrl: './out.component.html',\n  styleUrls: ['./out.component.scss']\n})\nexport class OutComponent implements OnInit, OnDestroy {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy() {\n  }\n\n}\n","<div class=\"main_out\">\n</div>\n\n<div class=\"contain_msg\">\n  <span routerLink=\"/\">\n    Revenir à l'accueil\n  </span>\n</div>\n","<app-header actif=\"1\" connected=\"true\" model=\"true\"></app-header>\n\n<div class=\"main_album\">\n  <div class=\"head_album\"\n  [ngStyle]=\"{'background-image': 'linear-gradient(90deg, rgba(255, 255, 255, 0.062), rgba(255, 255, 255, 0.062)),url(' + bannier + ')'}\">\n    <div class=\"profil\">\n      <img [src]=\"model.path_soft\" alt=\"\" id=\"profil\" *ngIf=\"model.path_soft != null\">\n    </div>\n  </div>\n\n  <div class=\"under_head_album\" id=\"scrolled_point\">\n    <div class=\"info_model info_mobile\">\n      <div class=\"name_model\">\n        {{model.pseudo}}\n      </div>\n      <div class=\"status_model\">\n        <span *ngIf=\"model.status === 'Hors ligne'\">\n          {{model.pseudo}} n'est pas en ligne pour le moment <br>\n          Merci de consulter ses horaires de connexion\n        </span>\n        <span *ngIf=\"model.status === 'En ligne' || model.status === 'En live'\">\n          {{model.pseudo}} est actuellement en ligne\n        </span>\n      </div>\n    </div>\n    <div class=\"menu_album\">\n      <div class=\"text_menu\" [routerLink]=\"['/modele/albums']\" [queryParams]=\"{context: 'private'}\">\n        Photos privées</div>\n      <div class=\"text_menu\" [routerLink]=\"['/modele/albums']\" [queryParams]=\"{context: 'vip'}\">\n        Albums VIP</div>\n      <div class=\"text_menu menu_shadow\" style=\"opacity: 0;\">album vide</div>\n      <div class=\"text_menu\" [routerLink]=\"['/modele/albums']\" [queryParams]=\"{context: 'free'}\">\n        Albums Free</div>\n      <div class=\"text_menu\">\n        Vidéos</div>\n    </div>\n    <div class=\"info_model info_desktop\">\n      <div class=\"name_model\">\n        {{model.pseudo}}\n      </div>\n      <div class=\"status_model\">\n        <span *ngIf=\"model.status === 'Hors ligne'\">\n          {{model.pseudo}} n'est pas en ligne pour le moment <br>\n          Merci de consulter ses horaires de connexion\n        </span>\n        <span *ngIf=\"model.status === 'En ligne' || model.status === 'En live'\">\n          {{model.pseudo}} est actuellement en ligne\n        </span>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"description_model\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-lg-4\">\n          <div class=\"description description_1\">\n            <div class=\"title_description\">\n              A PROPOS\n            </div>\n            <div class=\"line\"></div>\n            <div class=\"contain_description\">\n              <div class=\"text_description\">\n                <span *ngIf=\"!model.description\">...</span>\n                {{model.description}}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-lg-4\">\n          <div class=\"description description_1\">\n            <div class=\"title_description\">\n              Profil Intro\n            </div>\n            <div class=\"line\"></div>\n            <div class=\"contain_description\">\n              <div class=\"label_description\">\n                Dernière connexion :\n                <span class=\"value_description\" *ngIf=\"model.date_last_connection\">Le {{model.date_last_connection}}</span>\n              </div>\n\n              <div class=\"label_description\">\n                Age :\n                <span class=\"value_description\">{{model.age}} ans</span>\n              </div>\n\n              <div class=\"label_description\">\n                Orientation sexuelle :\n                <span class=\"value_description\">{{model.sex_orientation}}</span>\n              </div>\n\n              <div class=\"label_description\">\n                J'aime :\n                <span class=\"value_description\">{{model.like}}</span>\n              </div>\n\n              <div class=\"label_description\">\n                Je n'aime pas :\n                <span class=\"value_description\">{{model.dislike}}</span>\n              </div>\n\n              <div class=\"label_description\">\n                Status :\n                <span class=\"value_description\">{{model.status}}</span>\n              </div>\n\n              <div class=\"label_description\">\n                Réseaux sociaux :\n                <span class=\"value_description\">{{model.social_network}}</span>\n              </div>\n\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-lg-4\">\n          <div class=\"description description_1\">\n            <div class=\"title_description\">\n              Horaire de connexion\n            </div>\n            <div class=\"line\"></div>\n            <div class=\"contain_description\">\n              <div class=\"label_description\" *ngFor=\"let item of horaire\">\n                {{item.day}} :\n                <span class=\"value_description\">{{item.value}}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"private\">\n    <div class=\"title_album\">\n      Contenus Privés\n      <span>( {{totalAlbumPrivate}} ) </span>\n      <!-- <img [src]=\"camera\" alt=\"\" class=\"photoDetail\" routerLink=\"/modele/albums\"> -->\n    </div>\n\n    <div class=\"none\" *ngIf=\"currentAlbumPrivate.length === 0\">\n      Aucun album\n    </div>\n\n    <div class=\"contain_album\">\n      <div class=\"to_left direction\" (click)=\"toLeft('private')\">\n        <i class=\"fa fa-chevron-left\"></i>\n      </div>\n      <div class=\"image\">\n        <div class=\"container-fluid list_album\">\n          <div class=\"row\">\n            <div class=\"col-4\" *ngFor=\"let item of currentAlbumPrivate\">\n              <div class=\"album\">\n                <img [src]=\"item.path_album\" alt=\"\" class=\"album_item img-responsive\">\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"to_right direction\" (click)=\"toRight('private')\">\n        <i class=\"fa fa-chevron-right\"></i>\n      </div>\n    </div>\n  </div>\n\n\n  <div class=\"vip\">\n    <div class=\"title_album\">\n      Album VIP\n      <span>( {{totalAlbumVIP}} ) </span>\n      <!-- <img [src]=\"camera\" alt=\"\" class=\"photoDetail\" routerLink=\"/modele/albums\"> -->\n    </div>\n\n    <div class=\"none\" *ngIf=\"currentAlbumVIP.length === 0\">\n      Aucun album\n    </div>\n\n    <div class=\"contain_album\">\n      <div class=\"to_left direction\" (click)=\"toLeft('vip')\">\n        <i class=\"fa fa-chevron-left\"></i>\n      </div>\n      <div>\n        <div class=\"container-fluid list_album\">\n          <div class=\"row\">\n            <div class=\"col-4\" *ngFor=\"let item of currentAlbumVIP\">\n              <div class=\"album\">\n                <img [src]=\"item.path_album\" alt=\"\" class=\"album_item img-responsive\">\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"to_right direction\" (click)=\"toRight('vip')\">\n        <i class=\"fa fa-chevron-right\"></i>\n      </div>\n    </div>\n\n  </div>\n\n\n  <div class=\"free\">\n    <div class=\"title_album\">\n      Album Free\n      <span>( {{totalAlbumFree}} ) </span>\n      <!-- <img [src]=\"camera\" alt=\"\" class=\"photoDetail\" routerLink=\"/modele/albums\"> -->\n    </div>\n\n    <div class=\"none\" *ngIf=\"currentAlbumFree.length === 0\">\n      Aucun album\n    </div>\n\n    <div class=\"contain_album\">\n      <div class=\"to_left direction\" (click)=\"toLeft('free')\">\n        <i class=\"fa fa-chevron-left\"></i>\n      </div>\n      <div>\n        <div class=\"container-fluid list_album\">\n          <div class=\"row\">\n            <div class=\"col-4\" *ngFor=\"let item of currentAlbumFree\">\n              <div class=\"album\">\n                <img [src]=\"item.path_album\" alt=\"\" class=\"album_item img-responsive\">\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"to_right direction\" (click)=\"toRight('free')\">\n        <i class=\"fa fa-chevron-right\"></i>\n      </div>\n    </div>\n\n  </div>\n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { albumFree, albumPrivate, albumVIP } from '../albums/list-album';\r\nimport { AlbumService } from '../../../services/album/album.service';\r\nimport { Router } from '@angular/router';\r\nimport { addAlbum } from 'src/app/interfaces/add-album.interface';\r\nimport { ProfilService } from '../../../services/profil/profil.service';\r\n\r\ninterface Profil {\r\n  pseudo: string,\r\n  path_soft: string | null,\r\n  age: number,\r\n  sex_orientation: string,\r\n  like: string,\r\n  dislike: string,\r\n  status: string,\r\n  social_network: string,\r\n  description: string,\r\n  date_last_connection: string\r\n}\r\n\r\n@Component({\r\n  selector: 'app-profil-model',\r\n  templateUrl: './profil-model.component.html',\r\n  styleUrls: ['./profil-model.component.scss']\r\n})\r\nexport class ProfilModelComponent implements OnInit {\r\n  bg = \"assets/images/bg.jpg\";\r\n  camera = \"assets/icons/photoAdd.svg\";\r\n  profil = \"assets/images/image.png\";\r\n  sectionAlbum: number = 3;\r\n  bannier = \"assets/logos/dark-light.jpg\";\r\n\r\n  totalAlbumPrivate: number  = 0;\r\n  pagePrivate: number = 0;\r\n  currentAlbumPrivate: addAlbum[] = [];\r\n\r\n  totalAlbumVIP: number  = 0;\r\n  pageVIP: number = 0;\r\n  currentAlbumVIP: addAlbum[] = [];\r\n\r\n\r\n  totalAlbumFree: number  = 0;\r\n  pageFree: number = 0;\r\n  currentAlbumFree: addAlbum[] = [];\r\n\r\n  model: Profil =  {\r\n    pseudo: '',\r\n    path_soft: null,\r\n    age: 0,\r\n    sex_orientation: '',\r\n    like: '',\r\n    dislike: '',\r\n    status: '',\r\n    social_network: '',\r\n    description: '',\r\n    date_last_connection: ''\r\n  }\r\n\r\n  horaire = [\r\n    {day: 'LUNDI', value: '08h à 10h / 18h à 21h'},\r\n    {day: 'MARDI', value: '08h à 10h / 18h à 21h'},\r\n    {day: 'MERCREDI', value: '08h à 10h / 18h à 21h'},\r\n    {day: 'JEUDI', value: '08h à 10h / 18h à 21h'},\r\n    {day: 'VENDREDI', value: '08h à 10h / 18h à 21h'},\r\n    {day: 'SAMEDI', value: '08h à 10h / 18h à 21h'},\r\n    {day: 'DIMANCHE', value: '08h à 10h / 18h à 21h'}\r\n  ];\r\n\r\n  arrowLeft = \"assets/icons/exclamation-mark.svg\";\r\n  arrowRight = \"assets/icons/exclamation-mark.svg\";\r\n\r\n  count = {\r\n    \"vip\": 0,\r\n    \"private\": 0,\r\n    \"free\": 0\r\n  }\r\n\r\n  constructor(\r\n    private albumService: AlbumService,\r\n    private router: Router,\r\n    private profileService: ProfilService\r\n  ) {\r\n   }\r\n\r\n  async ngOnInit() {\r\n    this.init();\r\n    this.getStatus()\r\n    await this.getInfo();\r\n  }\r\n\r\n  async getInfo() {\r\n    return await this.profileService.getProfil().subscribe(\r\n      async (data) => {\r\n        this.model = data;\r\n        return await this.profileService.getInfo().subscribe(\r\n          (data) => {\r\n            // console.log(data);\r\n            const date = new Date().getFullYear();\r\n            this.model.age = date - data.year_birth;\r\n            this.model.pseudo = data.pseudo;\r\n            this.model.path_soft = data.path_soft;\r\n            this.model.date_last_connection = this.getDate(this.model.date_last_connection);\r\n          }\r\n        )\r\n      }\r\n    );\r\n  }\r\n\r\n  getStatus() {\r\n    this.profileService.getProfil().subscribe(\r\n      (data) => {\r\n        this.model.status = data.status;\r\n      }\r\n    )\r\n  }\r\n\r\n  getDate(date: string) {\r\n    if (!date) return null;\r\n    const year = date.substring(0, 4);\r\n    const month = date.substring(5, 7);\r\n    const day = date.substring(8, 10);\r\n    const hour = date.substring(11, 16);\r\n    const full = day + '/' + month + '/' + year + ' à ' + hour;\r\n    return full;\r\n  }\r\n\r\n  async countAlbum() {\r\n    this.albumService.getCount().subscribe(\r\n      (data) => {\r\n        this.count = data;\r\n          this.totalAlbumPrivate = this.count.private;\r\n          this.totalAlbumVIP = this.count.vip;\r\n          this.totalAlbumFree = this.count.free;\r\n      }\r\n    )\r\n  }\r\n\r\n  async init() {\r\n    await this.countAlbum();\r\n    await (await this.albumService.getAlbums('private', 0, 3)).subscribe(\r\n      (data) => {\r\n        this.currentAlbumPrivate = data;\r\n      }\r\n    );\r\n\r\n    await (await this.albumService.getAlbums('free', 0, 3)).subscribe(\r\n      (data) => {\r\n        this.currentAlbumFree = data;\r\n      }\r\n    );\r\n\r\n    await (await this.albumService.getAlbums('vip', 0, 3)).subscribe(\r\n      (data) => {\r\n        this.currentAlbumVIP = data;\r\n      }\r\n    );\r\n  }\r\n\r\n  scrollTo(section: string) {\r\n    document.querySelector(`#${section}`).scrollIntoView();\r\n  }\r\n\r\n  toLeft(context: string) {\r\n    switch (context) {\r\n      case 'private':\r\n        if (this.pagePrivate > 0) {\r\n          this.pagePrivate = this.pagePrivate - 1;\r\n          this.fetchAlbum(context, this.pagePrivate * this.sectionAlbum)\r\n        }\r\n        break;\r\n\r\n      case 'vip':\r\n        if (this.pageVIP > 0) {\r\n          this.pageVIP = this.pageVIP - 1;\r\n          this.fetchAlbum(context, this.pageVIP * this.sectionAlbum)\r\n        }\r\n        break;\r\n\r\n      case 'free':\r\n        if (this.pageFree > 0) {\r\n          this.pageFree = this.pageFree - 1;\r\n          this.fetchAlbum(context, this.pageFree * this.sectionAlbum)\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  toRight(context: string) {\r\n    switch (context) {\r\n      case 'private':\r\n        this.pagePrivate =  this.pagePrivate + 1;\r\n        var marge = Math.floor((this.totalAlbumPrivate/this.sectionAlbum) - 0.1); // - 0.1 avoid just division result\r\n        if (this.pagePrivate <= marge) {\r\n          this.fetchAlbum(context, this.pagePrivate * this.sectionAlbum);\r\n        } else { this.pagePrivate = this.pagePrivate -1;}\r\n        break;\r\n\r\n      case 'vip':\r\n        this.pageVIP =  this.pageVIP + 1;\r\n        var marge = Math.floor((this.totalAlbumVIP/this.sectionAlbum) - 0.1); // - 0.1 avoid just division result\r\n        if (this.pageVIP <= marge) {\r\n          this.fetchAlbum(context, this.pageVIP * this.sectionAlbum);\r\n        } else { this.pageVIP = this.pageVIP -1;}\r\n        break;\r\n\r\n      case 'free':\r\n        this.pageFree =  this.pageFree + 1;\r\n        var marge = Math.floor((this.totalAlbumFree/this.sectionAlbum) - 0.1); // - 0.1 avoid just division result\r\n        if (this.pageFree <= marge) {\r\n          this.fetchAlbum(context, this.pageFree * this.sectionAlbum);\r\n        } else { this.pageFree = this.pageFree -1;}\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  async fetchAlbum(context: string, debut: number) {\r\n    switch (context) {\r\n      case 'private':\r\n        await (await this.albumService.getAlbums(context, debut, this.sectionAlbum)).subscribe(\r\n          (data) => {\r\n            this.currentAlbumPrivate = data;\r\n          }\r\n        );\r\n        break;\r\n      case 'vip':\r\n        await (await this.albumService.getAlbums(context, debut, this.sectionAlbum)).subscribe(\r\n          (data) => {\r\n            this.currentAlbumVIP = data;\r\n          }\r\n        );\r\n        break;\r\n      case 'free':\r\n        await (await this.albumService.getAlbums(context, debut, this.sectionAlbum)).subscribe(\r\n          (data) => {\r\n            this.currentAlbumFree = data;\r\n          }\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  goToDashboard() {\r\n    this.router.navigate(['/modele/dashboard']);\r\n  }\r\n\r\n}\r\n","<div class=\"main_stats\">\r\n  <br><br>\r\n  <div class=\"contain_info_show\">\r\n    <div class=\"info_show\">\r\n      INFO SHOW\r\n    </div>\r\n    <div class=\"container-fluid contain_\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"label_left\">\r\n            Type du show\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-1\">\r\n          <div class=\"label_dot\">\r\n            :\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"label_right\">\r\n            {{type_show}}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"label_left\">\r\n            Tarif du show\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-1\">\r\n          <div class=\"label_dot\">\r\n            :\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"label_right\">\r\n            {{tarif_show}} Crédits / mn\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"label_left\">\r\n            Client\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-1\">\r\n          <div class=\"label_dot\">\r\n            :\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"label_right\">\r\n            {{client}}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  <br>\r\n  <div class=\"contain_info_show\">\r\n    <div class=\"info_show\">\r\n      INFO SOLDE\r\n    </div>\r\n    <div class=\"container-fluid contain_\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"label_left\">\r\n            Solde de crédits\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-1\">\r\n          <div class=\"label_dot\">\r\n            :\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"label_right\">\r\n            {{actualCredit}} Crédits\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"label_left\">\r\n            Durée passée\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-1\">\r\n          <div class=\"label_dot\">\r\n            :\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"label_right\">\r\n            <span *ngIf=\"hour_passed > 0\"> <span *ngIf=\"hour_passed < 10\">0</span>{{hour_passed}} : </span>\r\n            <span *ngIf=\"minute_passed < 10\">0</span>{{minute_passed}} :\r\n            <span *ngIf=\"second_passed < 10\">0</span>{{second_passed}}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"label_left\">\r\n            Crédits encaissés\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-1\">\r\n          <div class=\"label_dot\">\r\n            :\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"label_right\">\r\n            {{winCredit}} Crédits\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"label_left\">\r\n            Solde total\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-1\">\r\n          <div class=\"label_dot\">\r\n            :\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"label_right\">\r\n            {{totalCredit}} Crédits\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- <div class=\"contain_btn\">\r\n    <button class=\"btn btn_out\">\r\n      Sortir du Show\r\n    </button>\r\n  </div> -->\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-live-vip-stat',\n  templateUrl: './live-vip-stat.component.html',\n  styleUrls: ['./live-vip-stat.component.scss']\n})\nexport class LiveVipStatComponent implements OnInit {\n  @Input()\n  type_show: any;\n\n  @Input()\n  tarif_show: any;\n\n  @Input()\n  time_show: any;\n\n  @Input()\n  client: any;\n\n  @Input()\n  time_passed: any;\n\n  @Input()\n  hour_passed: any;\n\n  @Input()\n  minute_passed: any;\n\n  @Input()\n  second_passed: any;\n\n  @Input()\n  actualCredit: any;\n\n  @Input()\n  winCredit: any;\n\n  @Input()\n  totalCredit: any;\n\n\n  stats1 = [\n    {label: \"Type du show\", value: \"VIP\"},\n    {label: \"Tarif du show\", value: \"15 Crédits / mn\"},\n    {label: \"Client\", value: \"Motome\"}\n  ];\n\n  stats2 = [\n    {label: \"Solde de crédits\", value: \"225 Crédits\"},\n    {label: \"Durée passée\", value: \"00:00\"},\n    {label: \"Crédits encaissés\", value: \"150 Credits\"},\n    {label: \"Solde total\", value: \"375 Credits\"},\n  ];\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.startMinuteur();\n  }\n\n  startMinuteur() {\n    setInterval(() => {\n          this.second_passed++;\n          if (this.second_passed > 59) {\n            this.second_passed = 0;\n            this.minute_passed++;\n            if (this.minute_passed > 59) {\n              this.minute_passed = 0;\n              this.hour_passed++;\n            }\n          }\n    }, 1000);\n  }\n\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { GalleryItem, Gallery, ImageItem, ImageSize, ThumbnailsPosition } from 'ng-gallery';\nimport { Lightbox } from 'ng-gallery/lightbox';\nimport { ModelService } from 'src/app/services/model/model.service';\nimport { addAlbum } from '../../../interfaces/add-album.interface';\nimport { AlbumService } from '../../../services/album/album.service';\n\nconst data = [\n  {\n    path_album: 'https://res.cloudinary.com/team-stenny/image/upload/v1627759167/light_fumemz.jpg',\n  }\n];\n\n@Component({\n  selector: 'app-home-live',\n  templateUrl: './home-live.component.html',\n  styleUrls: ['./home-live.component.scss'],\n})\nexport class HomeLiveComponent implements OnInit {\n  mainModel = {\n    path_soft: null,\n    pseudo: '',\n    id: 0\n  };\n\n  allLive = [];\n  other = [];\n\n  currentAlbum : addAlbum[] = [];\n\n  items: GalleryItem[];\n\n  imageData = data;\n\n  constructor(\n    private modelSrv: ModelService,\n    private albumService: AlbumService,\n    public gallery: Gallery,\n    public lightbox: Lightbox\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.init();\n    this.getLive();\n    this.getNoLive();\n  }\n\n\n  init() {\n    // Creat gallery items\n    this.items = this.imageData.map(item => new ImageItem({ src: item.path_album, thumb: item.path_album }));\n    /** Lightbox Example */\n    // Get a lightbox gallery ref\n    const lightboxRef = this.gallery.ref('lightbox');\n\n    // Add custom gallery config to the lightbox (optional)\n    lightboxRef.setConfig({\n      imageSize: ImageSize.Cover,\n      thumbPosition: ThumbnailsPosition.Top\n    });\n    // Load items into the lightbox gallery ref\n    lightboxRef.load(this.items);\n  }\n\n  getLive() {\n    this.modelSrv.getLive().subscribe(\n      (data) => {\n        this.allLive = data;\n        this.mainModel = this.allLive[0];\n        // console.log(\"Live \", this.allLive);\n      }\n    )\n  }\n\n  getNoLive() {\n    this.modelSrv.getNoLive().subscribe(\n      (data) => {\n        this.other = data;\n        // console.log(\"NoLive \", this.other);\n      }\n    )\n  }\n\n  seeModel(modelId: number, path_soft: string) {\n    const data = {\n      modelId,\n      type_album: 'free'\n    }\n    this.albumService.getModelAlbums(data).subscribe(\n      (data: any) => {\n        this.imageData = [];\n        const path_album = {\n          path_album : path_soft\n        }\n\n        this.imageData = data;\n        this.imageData.push(path_album);\n        // console.log(\"Image dada \", this.imageData);\n        this.init();\n      }\n    )\n  }\n}\n","<app-header clickable=\"true\" actif=\"1\"></app-header>\n\n<div class=\"main_live\">\n  <div class=\"contain_main_model\">\n    <div class=\"inside\" *ngIf=\"mainModel && mainModel.path_soft && mainModel.path_soft !== ''\">\n      <!-- [ngStyle]=\"{'background-image': 'url('+ mainModel.url +')'}\" -->\n      <div class=\"main_model\">\n        <img [src]=\"mainModel.path_soft\" alt=\"\" class=\"img_bg\"\n        (mouseover)=\"seeModel(mainModel.id, mainModel.path_soft)\"\n        (click)=\"lightbox.open(0)\">\n        <div class=\"live_profil main\">\n          LIVE\n        </div>\n      </div>\n        <div class=\"pseudo_profil_main\">\n          <p class=\"btn_red\"></p>\n          <p class=\"pseudo\">{{mainModel.pseudo}}</p>\n        </div>\n    </div>\n  </div>\n\n  <div class=\"section section_list_live\">\n    <div class=\"profil_model\">\n        <div class=\"row_model\">\n          <div class=\"col_model\" *ngFor=\"let model of allLive; let i = index\">\n            <!-- [ngStyle]=\"{'background-image': 'url('+ item.url +')'}\" -->\n            <div class=\"profil\">\n              <img [src]=\"model.path_soft\" alt=\"\" class=\"img_section\"\n              (mouseover)=\"seeModel(model.id, model.path_soft)\"\n              (click)=\"lightbox.open(0)\">\n              <div class=\"live_profil\">\n                LIVE\n              </div>\n              <div class=\"pseudo_profil\">\n                <p class=\"btn_red\"></p>\n                <p class=\"pseudo\">{{model.pseudo}}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"no_list\" *ngIf=\"allLive.length === 0\">\n          Aucun modèle n'est disponible pour le moment\n        </div>\n\n    </div>\n  </div>\n\n  <!-- <div class=\"section\">\n    <div class=\"profil_model\">\n      <div class=\"container-fluid\">\n        <div class=\"row\">\n          <div class=\"col-lg-3 col-sm-6\" *ngFor=\"let item of allLive; let i = index\">\n            <div class=\"profil\" [ngStyle]=\"{'background-image': 'url('+ item.url +')'}\">\n\n              <div class=\"live_profil\">\n                LIVE\n              </div>\n              <div class=\"pseudo_profil\">\n                <p class=\"btn_red\"></p>\n                <p class=\"pseudo\">{{item.name}}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div> -->\n\n  <div class=\"section\">\n    <div class=\"text_other\">\n      voir tous <br>\n      nos autres modèles\n    </div>\n  </div>\n\n  <div class=\"section\">\n    <div class=\"other\">\n      <div class=\"row\">\n        <div class=\"col-lg-2 col-sm-3\" *ngFor=\"let model of other\">\n          <div class=\"contain_other\">\n            <img [src]=\"model.path_soft\" alt=\"\"\n            (mouseover)=\"seeModel(model.id, model.path_soft)\"\n            (click)=\"lightbox.open(0)\">\n            <div class=\"pseudo_profil_main\">\n              <p class=\"btn_red\"></p>\n              <p class=\"pseudo\">{{model.pseudo}}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"no_list\" *ngIf=\"other.length === 0\">\n        Aucun modèle n'est disponible pour le moment\n      </div>\n\n    </div>\n  </div>\n\n  <div class=\"section\">\n    <div class=\"become_model\">\n      <div class=\"contain_become\">\n        <div class=\"text_model\">\n          Devenir modèle !\n        </div>\n        <div class=\"click_model\" routerLink=\"/modele/inscription\">\n          Cliquer ici !\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n","import { animate, group, query, style, transition, trigger } from \"@angular/animations\";\r\n\r\nconst ANIMATION_SPEED = \"250ms\"\r\n\r\nexport const routeTransitionAnimations = trigger('animateRoute',[\r\n    transition('* <=> *', [\r\n      query(\":enter, :leave\", [style({ position: \"fixed\", width: \"100%\" })], { optional: true }),\r\n      group([\r\n        query(\":enter\", [\r\n          style({ transform: \"translateX(150%)\"  }),\r\n          animate(\r\n            `${ANIMATION_SPEED} ease-in-out`,\r\n            style({ transform: \"translateX(0)\" })\r\n          )\r\n        ], { optional: true }),\r\n        query(\":leave\", [\r\n          style({ transform: \"translateX(0%)\" }),\r\n          animate(\r\n            `${ANIMATION_SPEED} ease-in-out`,\r\n            style({ transform: \"translateX(-150%)\" })\r\n          )\r\n        ], { optional: true })\r\n      ])\r\n      ])\r\n]\r\n)\r\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-popup-info',\n  templateUrl: './popup-info.component.html',\n  styleUrls: ['./popup-info.component.scss']\n})\nexport class PopupInfoComponent implements OnInit {\n  title = '';\n  message = '';\n  action = '';\n  constructor(\n    public dialogRef: MatDialogRef<PopupInfoComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private router: Router\n  ) {\n    this.action = data.action;\n    this.title = data.title;\n    this.message = data.message;\n   }\n\n  ngOnInit(): void {\n  }\n\n  async validate(): Promise<void> {\n    if (this.action == 'client') {\n      this.router.navigate(['/connexion'])\n    } else if (this.action == 'model') {\n      this.router.navigate(['/modele/connexion'])\n    } else if (this.action ===  null) {\n      // nothing\n    } else {\n      this.router.navigate([this.action])\n    }\n    return this.dialogRef.close();\n  }\n\n}\n","<div class=\"main_info\">\n  <h2>\n    {{title}}\n  </h2>\n  <mat-dialog-content>\n    <div class=\"content_text\">\n      <div [innerHTML]=\"message | sanitize\">\n      </div>\n      <!-- {{message}} -->\n    </div>\n  </mat-dialog-content>\n  <mat-dialog-actions>\n    <button class=\"btn_cancel\" (click)=\"validate()\" mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Confirmer</button>\n  </mat-dialog-actions>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main\"></div>\n<div class=\"contain_out\">\n  <div class=\"title_found\">\n    Page non trouvé\n  </div>\n  <div class=\"content\">\n    La page que vous essayez d'afficher est introuvable.\n  </div>\n</div>\n","import { Component, OnInit,\r\n  OnDestroy, PLATFORM_ID,\r\n  Inject, ViewChild,\r\n  ElementRef } from '@angular/core';\r\nimport {isPlatformBrowser} from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LocalStorageService } from 'ngx-localstorage';\r\nimport { Chat, ChatSocket } from 'src/app/interfaces/chat.interface';\r\nimport { ChatService } from 'src/app/services/chat/chat.service';\r\nimport { ModelService } from 'src/app/services/model/model.service';\r\nimport { SocketService } from 'src/app/services/socket/socket.service';\r\nimport { PopupService } from '../../../services/popup/popup.service';\r\nimport { ProfilService } from '../../../services/profil/profil.service';\r\nimport { RoomVipService } from '../../../services/roomVip/room-vip.service';\r\nimport { ClientService } from '../../../services/client/client.service';\r\nimport { PackModalComponent } from 'src/app/modals/pack-modal/pack-modal.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { TimerService } from '../../../services/timer/timer.service';\r\nimport { CreditTimer, TypeTimer } from 'src/app/interfaces/timer.interface';\r\nimport { NotificationService } from '../../../services/notification/notification.service';\r\n\r\n// Peer\r\nimport './../../modele/shim';\r\nimport Peer from \"peerjs\"\r\n\r\n@Component({\r\n  selector: 'app-live-vip',\r\n  templateUrl: './live-vip.component.html',\r\n  styleUrls: ['./live-vip.component.scss', './../live.scss']\r\n})\r\nexport class LiveVipComponent implements OnInit {\r\n  context: string = \"VIP\";\r\n  imgPoster = \"assets/images/image.png\";\r\n  thrombone = \"assets/icons/paper-clip.svg\";\r\n  send = \"assets/icons/send-button.svg\";\r\n  dot = \"assets/icons/more_purple.svg\";\r\n  close = \"assets/icons/close.svg\";\r\n\r\n  toggleDot: boolean = false;\r\n\r\n  bg : \"assets/logos/dark-light.jpg\";\r\n  modelPseudo = '';\r\n  modelId: number;\r\n  idRoom: number;\r\n  actif: number;\r\n  message: string = '';\r\n  chatColor = \"black\";\r\n  clientId: number;\r\n  clientPseudo: string = '';\r\n  clientCredit: number = 0;\r\n  client = \"assets/images/user_chat.png\";\r\n\r\n  messages: Chat[] = [];\r\n  leaved: boolean = false;\r\n\r\n  indisponible: boolean = false;\r\n\r\n  timer = {\r\n    id: 0,\r\n    hour: 0,\r\n    minute: 0,\r\n    second: 0,\r\n    fail: false,\r\n    reinit: false\r\n  };\r\n\r\n  show = {\r\n    id: 0,\r\n    credit: null,\r\n    second: null,\r\n    type: null\r\n  };\r\n\r\n  // @HostListener(\"window:beforeunload\", [\"$event\"]) unloadHandler(event: Event) {\r\n  //   this.socketService.leaveVip(this.idRoom, 'client');\r\n  // }\r\n\r\n  // WEB RTC VIDEO\r\n  @ViewChild('video_live_client', {static: true}) video: ElementRef<HTMLVideoElement>;\r\n  @ViewChild('video_live_model', {static: true}) remote_video: ElementRef<HTMLVideoElement>;\r\n\r\n  private peer: Peer;\r\n  peerIdShare: string;\r\n  peerId: string;\r\n  private lazyStream: any;\r\n  currentPeer: any;\r\n  private peerList: Array<any> = [];\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private _platform: Object,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private modelService: ModelService,\r\n    private roomVipService: RoomVipService,\r\n    private store: LocalStorageService,\r\n    private chatService: ChatService,\r\n    private socketService: SocketService,\r\n    private popupService: PopupService,\r\n    private profilService: ProfilService,\r\n    private clientService: ClientService,\r\n    private dialog: MatDialog,\r\n    private timerService: TimerService,\r\n    private notificationService: NotificationService\r\n    ) {\r\n      this.peer = new Peer();\r\n      const id = this.route.snapshot.paramMap.get('model');\r\n      this.modelId = parseInt(id);\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    if (!this.modelId) {\r\n      this.errorRoom();\r\n      return null;\r\n    }\r\n    this.getModel();\r\n    this.initColor();\r\n    this.clientService.lastRoom(this.router.url);\r\n  }\r\n\r\n  async ngOnDestroy() {\r\n    (await this.creditTimer()).subscribe(\r\n      (data) => {\r\n        // console.log(\"Response credit timer \", data);\r\n      }\r\n    );\r\n    // this.roomVipService.leaveRoom();\r\n    // this.socketService.leaveVip(this.idRoom, 'client');\r\n    // console.log('destroy')\r\n  }\r\n\r\n  // Get model infos\r\n  getModel() {\r\n    this.modelService.getModel(this.modelId).subscribe(\r\n        (data) => {\r\n          // console.log('Model ', data);\r\n          this.bg = data.path_soft;\r\n          this.modelPseudo = data.pseudo;\r\n          if (data.profile.status !== 'En vip') {\r\n            this.errorRoom();\r\n            return null;\r\n          }\r\n          this.getMyInfo();\r\n        }\r\n    )\r\n  }\r\n\r\n  // Get client infos + get model info\r\n  getMyInfo() {\r\n      this.clientService.getMyInfos().subscribe(\r\n        (data) => {\r\n          // console.log('My INFO ', data);\r\n          this.clientId = data.id;\r\n          this.clientPseudo = data.pseudo;\r\n          this.clientCredit = data.credit ? data.credit.credit : 0; // Client Credit\r\n          this.getInfoRoom();\r\n        }\r\n      )\r\n  }\r\n\r\n  getInfoRoom() {\r\n    this.roomVipService.getRoomModel(this.modelId).subscribe(\r\n      (data) => {\r\n        console.log('Model room ', data);\r\n        this.idRoom = data.idRoom;\r\n\r\n        if (data.idRoom === null) {\r\n          this.obsolete();\r\n          this.actif = 0;\r\n          this.idRoom = 0;\r\n          return false;\r\n        }\r\n\r\n        this.actif = data.actif > 2 ? 2: data.actif;\r\n\r\n        if (this.clientId !== data.clientId) {\r\n          this.errorRoom();\r\n          return false;\r\n        }\r\n        this.getMessages();\r\n        this.initSocket();\r\n      }\r\n    )\r\n  }\r\n\r\n  // Init the room + Get client infos\r\n  // initRoom() {\r\n  //   const roomVIP = parseInt(this.store.get('roomVIP'));\r\n  //   this.idRoom = roomVIP;\r\n  //   if (!roomVIP) {\r\n  //     this.errorRoom();\r\n  //     return false;\r\n  //   }\r\n  //   this.getMyInfo();\r\n  // }\r\n\r\n\r\n  getMessages() {\r\n    this.chatService.getMessage(this.idRoom, 'vip').subscribe(\r\n      (data) => {\r\n        this.messages = data;\r\n      }\r\n    )\r\n  }\r\n\r\n  initSocket() {\r\n    this.socketService.joinVip(this.idRoom, this.modelId);\r\n\r\n    this.socketService.listen(`joined ${this.idRoom}V`).subscribe(\r\n      (data: any) => {\r\n        // console.log('Joined ', data);\r\n        this.actif = data < 0 ? 0 : data;\r\n        this.actif = data > 2 ? 2 : data;\r\n        console.log('Actif ', this.actif);\r\n      }\r\n    );\r\n\r\n    this.socketService.listen(`leaved ${this.idRoom}V`).subscribe(\r\n      (data: any) => {\r\n        // console.log('leaved ', data);\r\n        this.actif = data < 0 ? 0 : data;\r\n        this.actif = data > 2 ? 2 : data;\r\n        console.log('Actif ', this.actif);\r\n      }\r\n    );\r\n\r\n    this.socketService.listen(`message ${this.idRoom}V`).subscribe(\r\n      (data) => {\r\n        // console.log('Msg to client ', data);\r\n        this.getMessages();\r\n      }\r\n    );\r\n\r\n    this.socketService.listen(`model leaved ${this.idRoom}V`).subscribe(\r\n      (data) => {\r\n        this.leaved = true;\r\n        this.indisponible = true;\r\n        this.actif = 1;\r\n        this.popupService.info('/accueil/registered','LIVE INDISPONIBLE',\r\n        `${this.modelPseudo} a fermé le live de ce room`);\r\n      }\r\n    );\r\n\r\n    this.initTimer();\r\n    this.initLiveVideo();\r\n  }\r\n\r\n  obsolete() {\r\n    this.popupService.info('/accueil/registered','LIVE INDISPONIBLE',\r\n    `Aucun live n\\'est lancé dans ce room`);\r\n  }\r\n\r\n  initColor() {\r\n    if (this.store.get(\"ticket_chat\")) {\r\n      this.chatColor = this.store.get(\"ticket_chat\");\r\n      return true;\r\n    };\r\n    this.roomVipService.getColor().subscribe(\r\n      (data) => {\r\n        this.chatColor = data.color;\r\n        this.store.set(\"ticket_chat\", data.color);\r\n      }\r\n    )\r\n  }\r\n\r\n  sendMessage() {\r\n    if (!this.message) return;\r\n    const data: Chat = {\r\n      idRoom: this.idRoom,\r\n      message: this.message,\r\n      type_source: 'client',\r\n      id_source: this.clientId,\r\n      code_couleur: this.chatColor,\r\n      type_chat: 'vip'\r\n    }\r\n    console.log(data);\r\n    this.chatService.postMessage(data).subscribe(\r\n      (data) => {\r\n        this.getMessages();\r\n        const msg: ChatSocket = {\r\n          room: this.idRoom + 'V',\r\n          role: 'client',\r\n          id: this.clientId,\r\n          message: this.message\r\n        }\r\n        this.socketService.sendMessage(msg);\r\n        this.message = null;\r\n      }\r\n    )\r\n  }\r\n\r\n  toggleDots() {\r\n    this.toggleDot = !this.toggleDot;\r\n    console.log(this.toggleDot);\r\n  }\r\n\r\n\r\n  async liveOut() {\r\n      // this.creditTimer();\r\n      await this.leaveTimer().then(\r\n        (data) => {\r\n          this.roomVipService.leaveRoom();\r\n          this.socketService.leaveVip(this.idRoom, 'client').then(\r\n            () => {\r\n              this.store.remove('roomVIP');\r\n              this.router.navigate(['/accueil/registered']);\r\n            }\r\n          );\r\n        });\r\n        this.onStop();\r\n  }\r\n\r\n  async leaveTimer() {\r\n    const data = {\r\n      id: this.timer.id,\r\n      type: TypeTimer.VIP,\r\n      leaved: true,\r\n      push: new Date().toString()\r\n    }\r\n    // console.log(\"Before leave timer \", data)\r\n    return await this.timerService.updateTimer(data).subscribe(\r\n      (data) => {\r\n        // console.log('Leave timer ', data);\r\n        this.timer.reinit = true;\r\n      }\r\n    )\r\n  }\r\n\r\n  buy() {\r\n    const dialogRef = this.dialog.open(PackModalComponent, {\r\n      width: '80vh',\r\n      data: {}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {});\r\n  }\r\n\r\n  errorRoom() {\r\n    this.popupService.info(null,'LIVE INDISPONIBLE',\r\n    `Ce live n\\'est plus disponible`);\r\n    this.indisponible = true;\r\n  }\r\n\r\n  async getCredit() {\r\n    return await this.clientService.getCredit().subscribe(\r\n      (data) => {\r\n        this.clientCredit = data.credit;\r\n        console.log('Client credit ', this.clientCredit);\r\n        if (this.show.credit < this.clientCredit) return null;\r\n        this.timer.fail = true;\r\n        // if Not leaved\r\n        if (!this.timer.reinit) {\r\n          this.notificationService.failure(\"CREDIT INSUFFISANT\", \"Veuillez vous recharger.\");\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n    // Timer\r\n    async initTimer() {\r\n      this.timerService.getTimer(this.modelId, TypeTimer.VIP).subscribe(\r\n        async (data) => {\r\n          // console.log('Timer ', data);\r\n          const created: Date = data.createdAt;\r\n          const updated: Date = data.updatedAt;\r\n          this.timer.id = data.id;\r\n          // console.log(created.toString(), \" to \", updated.toString());\r\n          const {hour, minute, second} = this.timerService.convertTime(created.toString(), updated.toString());\r\n          this.timer.hour = hour;\r\n          this.timer.minute = minute;\r\n          this.timer.second = second;\r\n          // console.log(this.timer.hour, ':', this.timer.minute, ':', this.timer.second);\r\n          await this.getCostShow();\r\n        }\r\n      )\r\n    }\r\n\r\n    async getCostShow() {\r\n      return await this.timerService.getCostShow(TypeTimer.VIP).subscribe(\r\n        (data: any) => {\r\n          this.show.id = data.id;\r\n          this.show.credit = data.credit;\r\n          this.show.second = data.second;\r\n          this.show.type = data.type;\r\n          // console.log('Show cost ' , this.show, \" - credit - \" , this.clientCredit);\r\n          if (this.clientCredit < this.show.credit) {\r\n            this.aucunCredit();\r\n            return null;\r\n          } else if (this.clientCredit <= (this.show.credit * 2)) {\r\n            this.creditInsuffisant();\r\n            return null;\r\n          }\r\n          this.beginTimer();\r\n        }\r\n      )\r\n    }\r\n\r\n    creditInsuffisant() {\r\n      this.popupService.info(null,'CREDIT INSUFFISANT',\r\n      `Vous n\\'avez presque plus de crédit. Veuillez vous recharger.`);\r\n      setTimeout(\r\n        () => {\r\n          this.getCredit();\r\n\r\n        }, 20000\r\n      )\r\n    }\r\n\r\n    aucunCredit() {\r\n      this.timer.fail = true;\r\n      this.popupService.info('/achat_de_credit','ACHAT DE CREDIT',\r\n      `Veuillez vous recharger.`);\r\n    }\r\n\r\n    async beginTimer() {\r\n      const delay = this.show.second * 1000;\r\n      // console.log(delay, \" ms \");\r\n      await (await this.creditTimer()).subscribe( // launch main creditation\r\n        (data: any) => {\r\n          // console.log(\"Response credit timer \", data);\r\n          this.clientCredit = data.credit ? data.credit : 0;\r\n          if (data.credit <= 0) {\r\n            this.aucunCredit();\r\n            return null;\r\n          } else if (data.credit <= (this.show.credit * 2)) {\r\n            this.creditInsuffisant();\r\n            return null;\r\n          }\r\n        }\r\n      );\r\n      setInterval(\r\n        async () => {\r\n          if (!this.timer.reinit) {\r\n            await (await this.creditTimer()).subscribe(\r\n              (data: any) => {\r\n                // console.log(\"Response credit timer \", data);\r\n                this.clientCredit = data.credit ? data.credit : 0;\r\n                if (data.credit <= 0) {\r\n                  this.aucunCredit();\r\n                  return null;\r\n                } else if (data.credit <= (this.show.credit * 2)) {\r\n                  this.creditInsuffisant();\r\n                  return null;\r\n                }\r\n              }\r\n            );\r\n          }\r\n        }, delay\r\n      )\r\n    }\r\n\r\n    async creditTimer() {\r\n      if ((this.clientId === undefined) || (this.show.credit == null)) return null;\r\n      const data: CreditTimer = {\r\n        clientId: this.clientId,\r\n        modelId: this.modelId,\r\n        timerId: this.timer.id,\r\n        showCredit: this.show.credit,\r\n        showSecond: this.show.second,\r\n        showType: this.show.type,\r\n        roomId: this.idRoom\r\n      }\r\n      // console.log(\"credit timer post \", data);\r\n      return await this.timerService.creditTimer(data);\r\n    }\r\n\r\n  // WEB RTC - LIVE VIDEO\r\n  initLiveVideo() {\r\n    this.onStart();\r\n    this.getPeerId();\r\n  }\r\n\r\n  onStart(){\r\n    if(isPlatformBrowser(this._platform) && 'mediaDevices' in navigator) {\r\n      navigator.mediaDevices.getUserMedia({video: true}).then((ms: MediaStream) => {\r\n        const _video = this.video.nativeElement;\r\n        _video.srcObject = ms;\r\n        _video.play();\r\n      });\r\n    }\r\n  }\r\n\r\n  onStop() {\r\n    if (this.video) {\r\n      this.video.nativeElement.pause();\r\n      if ((this.video.nativeElement.srcObject as MediaStream).getVideoTracks()[0]) {\r\n        (this.video.nativeElement.srcObject as MediaStream).getVideoTracks()[0].stop();\r\n      }\r\n      this.video.nativeElement.srcObject = null;\r\n    }\r\n  }\r\n\r\n  private getPeerId = () => {\r\n    console.log(\"Get Peer\");\r\n    this.peer.on('open', (id) => {\r\n      console.log(\"Peer Id \", id);\r\n      this.peerId = id;\r\n      this.socketService.sendClientPeerId({peerId: this.peerId, room: this.idRoom+'V'});\r\n    });\r\n\r\n    this.peer.on('call', (call) => {\r\n      this.onStop();\r\n      navigator.mediaDevices.getUserMedia({\r\n        video: true,\r\n        audio: true\r\n      }).then((stream) => {\r\n        this.lazyStream = stream;\r\n        const _video = this.video.nativeElement;\r\n        _video.srcObject = stream;\r\n        _video.play();\r\n\r\n        call.answer(stream);\r\n        call.on('stream', (remoteStream) => {\r\n          if (!this.peerList.includes(call.peer)) {\r\n            this.streamRemoteVideo(remoteStream);\r\n            this.currentPeer = call.peerConnection;\r\n            this.peerList.push(call.peer);\r\n          }\r\n        });\r\n      }).catch(err => {\r\n        console.log(err + 'Unable to get media');\r\n      });\r\n    });\r\n  }\r\n\r\n  connectWithPeer(): void {\r\n    this.callPeer(this.peerIdShare);\r\n  }\r\n\r\n  private callPeer(id: string): void {\r\n    navigator.mediaDevices.getUserMedia({\r\n      video: true,\r\n      audio: true\r\n    }).then((stream) => {\r\n      this.lazyStream = stream;\r\n\r\n      const call = this.peer.call(id, stream);\r\n      call.on('stream', (remoteStream) => {\r\n        if (!this.peerList.includes(call.peer)) {\r\n          this.streamRemoteVideo(remoteStream);\r\n          this.currentPeer = call.peerConnection;\r\n          this.peerList.push(call.peer);\r\n        }\r\n      });\r\n    }).catch(err => {\r\n      console.log(err + 'Unable to connect');\r\n    });\r\n  }\r\n\r\n  private streamRemoteVideo(stream: any): void {\r\n    const _video = this.remote_video.nativeElement;\r\n    _video.srcObject = stream;\r\n    _video.play();\r\n  }\r\n\r\n}\r\n","<app-header connected=\"true\"></app-header>\n\n\n<div class=\"main_live\" [ngClass]=\"{'dry_up': timer.fail}\">\n  <img [src]=\"dot\" alt=\"\" id=\"dots\" (click)=\"toggleDots()\">\n  <div class=\"contain_top\">\n    <app-topbar [context]=\"context\" [actif]=\"actif\"\n    [hour]=\"this.timer.hour\"\n    [minute]=\"this.timer.minute\"\n    [second]=\"this.timer.second\"\n    [reinit]=\"this.timer.reinit\"\n    [leaved]=\"leaved\"\n    ></app-topbar>\n    <div class=\"contain_left\">\n      <div class=\"show_live_left\" [ngClass]=\"{'pass_private': indisponible}\">\n\n        <video controls autoplay [poster]=\"bg\" id=\"video_live_model\" #video_live_model>\n        </video>\n\n      </div>\n      <div class=\"client_live\">\n        <video autoplay [poster]=\"client\" class=\"client_flow\" id=\"video_live_client\" #video_live_client></video>\n      </div>\n    </div>\n    <div class=\"contain_right\">\n      <div class=\"show_live_right\">\n        <div class=\"header_chat\">\n          <p>&gt;</p>\n          <div>\n            Live Chat\n          </div>\n        </div>\n        <app-live-free-chat [modelId]=\"modelId\" [messages]=\"messages\"\n        [pseudoModel]=\"modelPseudo\" [leaved]=\"leaved\" [profil]=\"bg\"></app-live-free-chat>\n<!--\n        <mat-tab-group mat-align-tabs=\"center\">\n          <mat-tab label=\"Live Chat\">\n            <app-live-free-chat [modelId]=\"modelId\" [messages]=\"messages\"\n            [pseudoModel]=\"modelPseudo\" [leaved]=\"leaved\" [profil]=\"bg\"></app-live-free-chat>\n          </mat-tab>\n          <mat-tab label=\"Statistiques\">\n            <app-live-vip-stat></app-live-vip-stat>\n          </mat-tab>\n        </mat-tab-group> -->\n\n      </div>\n    </div>\n  </div>\n\n  <div class=\"contain_bottom\">\n    <div class=\"contain_left\">\n      <div class=\"contain_action contain_action_desktop\">\n        <div class=\"buy_credit btn_show\">\n          <button class=\"btn btn_buy lighter\" (click)=\"buy()\">Acheter des crédits</button>\n          <!-- <p>15 crédits / mn</p> -->\n        </div>\n        <div class=\"out_show btn_show\">\n          <button class=\"btn btn_out_show lighter\" (click)=\"liveOut()\">Sortir du Show</button>\n          <!-- <p>15 crédits / mn</p> -->\n        </div>\n      </div>\n\n      <!-- // mobile -->\n      <div class=\"contain_action contain_action_mobile\" *ngIf=\"toggleDot\">\n        <div class=\"buy_credit btn_show\">\n          <button class=\"btn btn_buy lighter\" (click)=\"buy()\">Acheter des crédits</button>\n          <!-- <p>15 crédits / mn</p> -->\n        </div>\n        <div class=\"out_show btn_show\">\n          <button class=\"btn btn_out_show lighter\" (click)=\"liveOut()\">Sortir du Show</button>\n          <!-- <p>15 crédits / mn</p> -->\n        </div>\n        <!-- <div class=\"contain_close\">\n          <img [src]=\"close\" alt=\"\" id=\"close\" (click)=\"toggleDots()\">\n        </div> -->\n      </div>\n\n    </div>\n    <div class=\"contain_right\">\n      <div class=\"contain_message\">\n        <div class=\"contain_thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n        </div>\n        <form (ngSubmit)=\"sendMessage()\">\n        <div class=\"input_text\">\n            <input type=\"text\" name=\"message\" autocomplete=\"off\"\n            placeholder=\"Entrer votre message ici ...\" [(ngModel)]=\"message\">\n            <button type=\"submit\">\n              <div class=\"p\">\n                <img [src]=\"send\" alt=\"\">\n              </div>\n            </button>\n        </div>\n      </form>\n      </div>\n    </div>\n  </div>\n\n</div>\n","import { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { LocalStorageService } from 'ngx-localstorage';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { TypeTimer, CreditTimer } from '../../interfaces/timer.interface';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimerService {\n  endpoint = environment.endpoint\n\n  constructor(\n    private http: HttpClient,\n    private store: LocalStorageService\n  ) { }\n\n  convertTime(created: string, updated: string) {\n    let step = 0; let hour = 0; let minute = 0; let second = 0;\n\n    let hourCreated = parseInt(created.substring(11, 13));\n    let hourUpdated = parseInt(updated.substring(11, 13));\n\n    let minCreated = parseInt(created.substring(14, 16));\n    let minUpdated = parseInt(updated.substring(14, 16));\n\n    let secCreated = parseInt(created.substring(17, 19));\n    let secUpdated = parseInt(updated.substring(17, 19));\n\n    while (hourCreated < hourUpdated) {\n      secCreated++;\n      if (secCreated > 59) {minCreated++; secCreated = 0;}\n      if (minCreated > 59) {hourCreated++; minCreated = 0;}\n      step++;\n    }\n\n    while (minCreated < minUpdated) {\n      secCreated++;\n      if (secCreated > 59) {minCreated++; secCreated = 0;}\n      step++;\n    }\n\n    while (secCreated < secUpdated) {\n      secCreated++; step++;\n    }\n    // console.log(\"Step \", step);\n\n    hour = Math.floor(step / 3600);\n    minute = Math.floor((step % 3600) / 60);\n    second = (step % 3600) % 60;\n\n    return {hour, minute, second}\n  }\n\n  getTimer(modelId: number, type: TypeTimer): Observable<any> {\n    const data = {\n      modelId: modelId,\n      type: type\n    }\n    return this.http.post(`${this.endpoint}/timer`,data, httpOptions)\n  }\n\n  getCostShow(type: TypeTimer) {\n    return this.http.get(`${this.endpoint}/cost-show/${type}`, httpOptions)\n  }\n\n  updateTimer(data) {\n    return this.http.post(`${this.endpoint}/timer/update`, data, httpOptions)\n  }\n\n  creditTimer(data: CreditTimer) {\n    // console.log(data);\n    return this.http.post(`${this.endpoint}/timer/credit`, data, httpOptions)\n  }\n\n  beginTimerModel(modelId: number, type: TypeTimer): Observable<any> {\n    const data = {\n      modelId: modelId,\n      type: type\n    }\n    return this.http.post(`${this.endpoint}/timer/beginTimerModel`,data, httpOptions)\n  }\n\n}\n","import { AuthService } from './../../../services/auth/auth.service';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { SlideInOutAnimation } from 'src/app/animation';\r\nimport { HeaderService } from 'src/app/services/header/header.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ConfirmLogoutComponent } from '../../../modals/confirm-logout/confirm-logout/confirm-logout.component';\r\nimport { ModelService } from '../../../services/model/model.service';\r\n\r\n@Component({\r\n  selector: 'app-connected-model',\r\n  templateUrl: './connected-model.component.html',\r\n  styleUrls: ['./connected-model.component.scss'],\r\n  animations: [SlideInOutAnimation]\r\n})\r\nexport class ConnectedModelComponent implements OnInit {\r\n  animationState = 'out';\r\n  chat = \"assets/icons/chat-comment.svg\";\r\n  settings = \"assets/icons/settings.svg\";\r\n\r\n  @Input()\r\n  actif: string;\r\n  active: number = 0;\r\n\r\n  constructor(\r\n    private authSrv: AuthService,\r\n    private router: Router,\r\n    private dialog: MatDialog,\r\n    private modelService: ModelService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.actif) this.active = parseInt(this.actif);\r\n  }\r\n\r\n  toggleShowDiv(divName: string) {\r\n    if (divName === 'contain_connected') {\r\n      console.log(this.animationState);\r\n      this.animationState = this.animationState === 'out' ? 'in' : 'out';\r\n      console.log(this.animationState);\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    const dialogRef = this.dialog.open(ConfirmLogoutComponent, {\r\n      width: '50vh',\r\n      data: {action: 'model'}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {});\r\n  }\r\n\r\n  goToChat() {\r\n    this.modelService.getInfo().subscribe(\r\n      (data) => {\r\n        const status = data.profile.status;\r\n        if (status === 'En live') {\r\n          this.router.navigate(['/modele/live-private'])\r\n        } else if (status === 'En vip') {\r\n          this.router.navigate(['/modele/live-vip'])\r\n        } else {\r\n          this.router.navigate(['/modele/chat'])\r\n        }\r\n      }\r\n    )\r\n  }\r\n}\r\n\r\n","\n<div class=\"bars\">\n  <img [src]=\"chat\" alt=\"\" class=\"icon\">\n  <img [src]=\"settings\" alt=\"\" class=\"icon\" routerLink=\"/modele/dashboard\"\n    [ngClass]=\"{'active': active == 3}\">\n  <i class=\"fa fa-bars\" (click)=\"toggleShowDiv('contain_connected')\"></i>\n</div>\n\n<div class=\"contain_connected\" [@slideInOut]=\"animationState\">\n\n  <div class=\"list one\" [ngClass]=\"{'active': active == 1}\" routerLink=\"/modele/profile\">\n    Mon Compte\n    <span></span>\n  </div>\n  <div class=\"list two\" routerLink=\"/modele/albums\" [ngClass]=\"{'active': active == 2}\">\n    Mes Albums\n    <span></span>\n  </div>\n\n  <div class=\"list four\" [ngClass]=\"{'active': active == 3}\" routerLink=\"/modele/dashboard\">\n    <img [src]=\"settings\" alt=\"\" class=\"icon\">    <span></span>\n  </div>\n\n  <div class=\"list three\" [ngClass]=\"{'active': active == 4}\" (click)=\"goToChat()\">\n    <img [src]=\"chat\" alt=\"\" class=\"icon\">\n    <span></span>\n  </div>\n\n  <div class=\"list five\" (click)=\"logout()\" [ngClass]=\"{'active': active == 5}\">\n    Déconnexion\n    <span></span>\n  </div>\n\n</div>\n","<div class=\"contain_header\" [ngClass]=\"{'unclickable': !isClickable}\">\n\n  <div class=\"contain_header_connected\" *ngIf=\"isConnected && isModel\">\n    <div class=\"contain_logo\">\n      <h1 class=\"text\">\n        BETWEEN<span>US</span>\n      </h1>\n    </div>\n    <div class=\"contain_menu\">\n      <app-connected-model [actif]=\"isActif\"></app-connected-model>\n    </div>\n  </div>\n\n  <div class=\"contain_header_disconnected\" *ngIf=\"!isConnected\">\n    <div class=\"contain_logo\">\n      <h1 class=\"text\">\n        BETWEEN<span>US</span>\n      </h1>\n    </div>\n    <div class=\"contain_menu\">\n      <app-disconnected [actif]=\"isActif\"></app-disconnected>\n    </div>\n  </div>\n\n  <div class=\"contain_header_connected\" *ngIf=\"isConnected && !isModel\">\n    <div class=\"contain_logo\">\n      <h1 class=\"text\">\n        BETWEEN<span>US</span>\n      </h1>\n    </div>\n    <div class=\"contain_menu\">\n      <app-connected [actif]=\"isActif\"></app-connected>\n    </div>\n  </div>\n\n</div>\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { LocalStorageService } from 'ngx-localstorage';\nimport { HeaderService } from 'src/app/services/header/header.service';\nimport { AuthService } from '../../services/auth/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  @Input()\n  connected: string;\n  isConnected: boolean = false;\n\n  @Input()\n  clickable: string;\n  isClickable: boolean = true;\n\n  @Input()\n  model: string;\n  isModel: boolean = false;\n  isVisible: boolean = false;\n\n  @Input()\n  actif: string;\n  isActif: number = 0;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    if (this.connected) this.isConnected = (this.connected == \"true\");\n    if (this.clickable) this.isClickable = (this.clickable == \"true\");\n    if (this.model) this.isModel = (this.model == \"true\");\n    if (this.actif) this.isActif = parseInt(this.actif);\n  }\n\n\n  // ngAfterContentChecked(): void\n  // {\n  //     if (this.isVisible == false)\n  //     {\n  //       this.isVisible = true;\n  //       if (this.clickable) this.clickable = this.isClickable;\n  //     }\n  //     else if (this.isVisible == true)\n  //     {\n  //         this.isVisible = false;\n  //     }\n  // }\n\n}\n","<div class=\"contain_pass\">\n  <h2 mat-dialog-title>Changer le mot de passe</h2>\n\n  <mat-dialog-content>\n    <form action=\"\" class=\"form_password\" autocomplete=\"off\" [formGroup]=\"passwordForm\">\n      <div class=\"form-group\">\n        <label for=\"oldPassword\">Ancien mot de passe</label>\n        <input type=\"password\" id=\"oldPassword\" class=\"input form-control\" formControlName=\"oldPassword\">\n        <div *ngIf=\"submitted && form.oldPassword.errors\" class=\"error\">\n          <small *ngIf=\"form.oldPassword.errors.required\" class=\"form-text error-text\">Mot de passe requis</small>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"newPassword\">Nouveau mot de passe</label>\n        <input type=\"password\" id=\"newPassword\" class=\"input form-control\" formControlName=\"newPassword\">\n        <div *ngIf=\"submitted && form.newPassword.errors\" class=\"error\">\n          <small *ngIf=\"form.newPassword.errors.required\" class=\"form-text error-text\">\n            Mot de passe requis\n          </small>\n          <small *ngIf=\"form.newPassword.errors.pattern\" class=\"form-text error-text\">\n            Invalide : majuscule, minuscule et un chiffre\n          </small>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"confirmPassword\">Confirmer mot de passe</label>\n        <input type=\"password\" id=\"confirmPassword\" class=\"input form-control\" formControlName=\"confirmPassword\">\n        <div *ngIf=\"submitted && form.confirmPassword.errors\" class=\"error\">\n          <small *ngIf=\"form.confirmPassword.errors.required\" class=\"form-text error-text \">\n            Confirmation mot de passe requis\n          </small>\n          <small *ngIf=\"form.confirmPassword.errors.mustMatch\" class=\"form-text error-text \">\n            Mot de passe ne correspond pas\n          </small>\n        </div>\n        <div class=\"error\" *ngIf=\"errorPassword\">\n          <small class=\"form-text error-text \">\n            Mot de passe incorrect\n          </small>\n        </div>\n      </div>\n    </form>\n  </mat-dialog-content>\n\n  <mat-dialog-actions>\n    <button class=\"btn_cancel\" mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Annuler</button>\n    <button class=\"btn_valid\" (click)=\"validate($event)\">Valider</button>\n  </mat-dialog-actions>\n</div>\n\n","import { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { ClientService } from '../../../../services/client/client.service';\nimport { NotificationService } from '../../../../services/notification/notification.service';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.scss']\n})\nexport class PasswordComponent implements OnInit {\n  passwordForm: FormGroup;\n  submitted: boolean = false;\n  errorPassword = null;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private clientService: ClientService,\n    private notificationService: NotificationService,\n    public dialogRef: MatDialogRef<PasswordComponent>\n    ) {\n    this.passwordForm = this.formBuilder.group({\n      oldPassword : ['', Validators.required],\n      // newPassword : ['',[Validators.required, Validators.pattern(/^(?=\\D*\\d)(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z]).{8,}$/)]],\n      newPassword : ['', Validators.required],\n      confirmPassword: ['',Validators.required],\n    },{\n      validators : this.mustMatch('newPassword','confirmPassword'),\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  get form() {return this.passwordForm.controls}\n\n  mustMatch = (controlName : string, matchControlName : string) => {\n    return (formGroup: FormGroup) => {\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchControlName];\n\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n          return;\n      }\n      if (control.value !== matchingControl.value) {\n          matchingControl.setErrors({ mustMatch: true });\n      } else {\n          matchingControl.setErrors(null);\n      }\n  }\n  }\n\n  async validate(event): Promise<void> {\n    this.submitted = true;\n    event.preventDefault();\n    this.errorPassword = null;\n    if(this.passwordForm.invalid){\n      return;\n    }\n    let passwords = this.passwordForm.value;\n    this.clientService.changePassword(passwords.oldPassword, passwords.newPassword).subscribe(\n      (data: any) => {\n        console.log(\"change Password \", data);\n        if (data.error) {\n          this.errorPassword = data.message;\n        } else {\n          this.notificationService.success(\"Mot de passe\", \"Modifié\");\n          this.dialogRef.close(\"success\");\n        }\n      }\n    )\n  }\n\n}\n","<app-header connected=\"true\" actif=\"2\"></app-header>\n\n\n<div class=\"main_dashboard\">\n<div class=\"profil_header\">\n  Rechargez mes crédits\n</div>\n<div class=\"contain_credit\">\n  <div class=\"info_credit\">\n    <div class=\"block_credit\">\n      <div class=\"content_parameter\">\n        <img [src]=\"coinImg\" alt=\"\" class=\"coinImg\">\n        <div>\n          Vous avez actuellement <br>\n          {{info.credit}} crédit<span *ngIf=\"info.credit > 2\">s</span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"recharge_credit\">\n      <div class=\"title_credit\">\n        <!-- Rechargez mes crédits -->\n      </div>\n      <div class=\"input_credit\">\n        <input type=\"text\" placeholder=\"Entrer ici votre code promo\">\n      </div>\n    </div>\n  </div>\n\n  <div class=\"contain_pack\">\n    <div class=\"choice_pack\">\n      <select id=\"select_choice\" (change)=\"select($event)\">\n        <option value=\"bienvenue\">PACK DE BIENVENUE</option>\n        <option value=\"bronze\">PACK BRONZE</option>\n        <option value=\"argent\">PACK ARGENT</option>\n        <option value=\"or\">PACK OR</option>\n      </select>\n    </div>\n\n    <div class=\"container-fluid contain_pack\">\n\n      <div class=\"pack_bienvenue\" *ngIf=\"currentPack === 'bienvenue'\">\n        <div class=\"row\" *ngFor=\"let item of packBienvenue\">\n          <div class=\"col-lg-4 offset-lg-4 column\">\n            <div class=\"pack\">\n              <div class=\"pack_credit\">\n                <div>\n                  {{item.credit}}\n                </div>\n                <p>\n                  CREDITS\n                </p>\n              </div>\n              <div class=\"pack_cout\">\n                Coût / Crédit\n                <p>\n                  {{item.cout}}$\n                </p>\n              </div>\n              <div class=\"pack_button\">\n                <button class=\"btn btn_buy lighter\"\n                (click)=\"buyPack(item.montant, item.credit)\">\n                  Acheter\n                </button>\n              </div>\n              <div class=\"pack_montant\">\n                {{item.montant}} $\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"pack_or\" *ngIf=\"currentPack === 'or'\">\n        <div class=\"row\">\n          <div class=\"col-lg-3 column\" *ngFor=\"let item of packOr\">\n            <div class=\"pack\">\n              <div class=\"pack_credit\">\n                <div>\n                  {{item.credit}}\n                </div>\n                <p>\n                  CREDITS\n                </p>\n              </div>\n              <div class=\"pack_cout\">\n                Coût / Crédit\n                <p>\n                  {{item.cout}}$\n                </p>\n              </div>\n              <div class=\"pack_button\">\n                <button class=\"btn btn_buy lighter\"\n                (click)=\"buyPack(item.montant, item.credit)\">\n                  Acheter\n                </button>\n              </div>\n              <div class=\"pack_montant\">\n                {{item.montant}} $\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"pack_argent\" *ngIf=\"currentPack === 'argent'\">\n        <div class=\"row\">\n          <div class=\"col-lg-3 column\" *ngFor=\"let item of packArgent\">\n            <div class=\"pack\">\n              <div class=\"pack_credit\">\n                <div>\n                  {{item.credit}}\n                </div>\n                <p>\n                  CREDITS\n                </p>\n              </div>\n              <div class=\"pack_cout\">\n                Coût / Crédit\n                <p>\n                  {{item.cout}}$\n                </p>\n              </div>\n              <div class=\"pack_button\">\n                <button class=\"btn btn_buy lighter\"\n                (click)=\"buyPack(item.montant, item.credit)\">\n                  Acheter\n                </button>\n              </div>\n              <div class=\"pack_montant\">\n                {{item.montant}} $\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"pack_bronze\" *ngIf=\"currentPack === 'bronze'\">\n        <div class=\"row\">\n          <div class=\"col-lg-4 column\" *ngFor=\"let item of packBronze\">\n            <div class=\"pack\" [ngClass]=\"{'bonAffaire': item.affaire}\">\n              <div class=\"txt_bon_affaire\" *ngIf=\"item.affaire\">\n                Pack la plus bonne affaire\n              </div>\n              <div class=\"pack_credit\">\n                <div>\n                  {{item.credit}}\n                </div>\n                <p>\n                  CREDITS\n                </p>\n              </div>\n              <div class=\"pack_cout\">\n                Coût / Crédit\n                <p>\n                  {{item.cout}}$\n                </p>\n              </div>\n              <div class=\"pack_button\">\n                <button class=\"btn btn_buy lighter\"\n                (click)=\"buyPack(item.montant, item.credit)\">\n                  Acheter\n                </button>\n              </div>\n              <div class=\"pack_montant\">\n                {{item.montant}} $\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n</div>\n\n</div>\n<br><br>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { HeaderService } from '../../../services/header/header.service';\r\nimport { ClientService } from '../../../services/client/client.service';\r\nimport { LocalStorageService } from 'ngx-localstorage';\r\nimport { CreditService } from '../../../services/credit/credit.service';\r\nimport { PopupService } from '../../../services/popup/popup.service';\r\nimport { NotificationService } from '../../../services/notification/notification.service';\r\nimport { Pack } from 'src/app/interfaces/pack-credit.interface';\r\n\r\n@Component({\r\n  selector: 'app-buy-credit',\r\n  templateUrl: './buy-credit.component.html',\r\n  styleUrls: ['./buy-credit.component.scss']\r\n})\r\nexport class BuyCreditComponent implements OnInit {\r\n  solde = 500;\r\n  coinImg = \"assets/icons/coin-stack.svg\";\r\n\r\n  currentPack: string = 'bienvenue';\r\n\r\n  info = {\r\n    id: 0,\r\n    pseudo: '',\r\n    credit: 0,\r\n    creditId: null,\r\n    promo: null\r\n  }\r\n\r\n  packBienvenue: Pack[] = this.creditService.packBienvenue;\r\n\r\n  packBronze: Pack[] = this.creditService.packBronze;\r\n\r\n  packArgent: Pack[] = this.creditService.packArgent;\r\n\r\n  packOr: Pack[] = this.creditService.packOr;\r\n\r\n  constructor(\r\n    private clientService: ClientService,\r\n    private store: LocalStorageService,\r\n    private creditService: CreditService,\r\n    private notificationService: NotificationService\r\n  ) {\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.getMyInfo();\r\n  }\r\n\r\n  // Get client infos\r\n  async getMyInfo() {\r\n    const id = parseInt(this.store.get('identification//'));\r\n    await this.clientService.getMyInfos().subscribe(\r\n      (data) => {\r\n        // console.log('My INFO ', data);\r\n        this.info.id = data.id;\r\n        this.info.pseudo = data.pseudo;\r\n        this.info.credit = data.credit ? data.credit.credit : 0;\r\n        this.info.creditId = data.credit ? data.credit.id : 0;\r\n      }\r\n    )\r\n  }\r\n\r\n  select(event) {\r\n    console.log(event.target.value);\r\n    const value = event.target.value;\r\n    this.currentPack = value;\r\n  }\r\n\r\n  buyPack(montant: number, credit: number) {\r\n    console.log(\"Buy \", this.info.credit, \" ID \", this.info.creditId);\r\n    console.log(montant, \" \" , credit);\r\n    if (this.info.creditId === null) return false;\r\n    this.creditService.buyCreditClient(montant, credit, this.info.creditId, this.info.id).subscribe(\r\n      async (data) => {\r\n        if (!data) {\r\n          this.notificationService.failure(`Pack ${this.currentPack}`,\r\n          `Votre transaction a echoué.`);\r\n        } else {\r\n          await this.getMyInfo().then(\r\n            (data) => {\r\n              this.notificationService.success(`Pack ${this.currentPack}`,\r\n              `Vous avez obtenu ${credit} crédits de plus.`);\r\n            }\r\n          );\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<div class=\"main_info\">\n  <div class=\"title_info\">\n    CHANGER MOT DE PASSE\n  </div>\n  <div class=\"line\"></div>\n  <div class=\"container-fluid contain_info\">\n    <form action=\"\" class=\"form_password\" autocomplete=\"off\" [formGroup]=\"changeForm\">\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <input type=\"password\" class=\"input_field\" placeholder=\"Mot de passe actuel\"\n        formControlName=\"oldPassword\">\n        <div *ngIf=\"submitted && form.oldPassword.errors\" class=\"error\">\n          <small *ngIf=\"form.oldPassword.errors.required\" class=\"form-text error-text\">Mot de passe requis</small>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-6\">\n        <div class=\"content_field\">\n          <input type=\"password\" class=\"input_field\" placeholder=\"Nouveau mot de passe\"\n          formControlName=\"newPassword\">\n          <div *ngIf=\"submitted && form.newPassword.errors\" class=\"error\">\n            <small *ngIf=\"form.newPassword.errors.required\" class=\"form-text error-text\">\n              Mot de passe requis\n            </small>\n            <small *ngIf=\"form.newPassword.errors.pattern\" class=\"form-text error-text\">\n              Invalide : majuscule, minuscule et un chiffre\n            </small>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-6\">\n        <div class=\"content_field\">\n          <input type=\"password\" class=\"input_field\" placeholder=\"Confirmer mot de passe\"\n          formControlName=\"confirmPassword\">\n          <div *ngIf=\"submitted && form.confirmPassword.errors\" class=\"error\">\n            <small *ngIf=\"form.confirmPassword.errors.required\" class=\"form-text error-text \">\n              Confirmation mot de passe requis\n            </small>\n            <small *ngIf=\"form.confirmPassword.errors.mustMatch\" class=\"form-text error-text \">\n              Mot de passe ne correspond pas\n            </small>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <p class=\"forgot_text\">\n          Mot de passe oublié ?\n        </p>\n      </div>\n    </div> -->\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 contain_button\">\n        <button type=\"button\" class=\"btn_save_pwd lighter\" (click)=\"validate($event)\" type=\"submit\">\n          ENREGISTER\n        </button>\n      </div>\n    </div>\n\n  </form>\n  </div>\n\n  </div>\n","import { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { ProfilService } from '../../../../services/profil/profil.service';\nimport { NotificationService } from '../../../../services/notification/notification.service';\n\n@Component({\n  selector: 'app-password-modele',\n  templateUrl: './password-modele.component.html',\n  styleUrls: ['./password-modele.component.scss']\n})\nexport class PasswordModeleComponent implements OnInit {\n  changeForm: FormGroup;\n  submitted: boolean = false;\n\n  old: string = '';\n  new: string = '';\n  confirm: string = '';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private profileService: ProfilService,\n    private notificationService: NotificationService\n    ) {\n    this.changeForm = this.formBuilder.group({\n      oldPassword : ['', Validators.required],\n      newPassword : ['', Validators.required],\n      confirmPassword: ['',Validators.required],\n    },{\n      validators : this.mustMatch('newPassword','confirmPassword'),\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  get form() {return this.changeForm.controls}\n\n  mustMatch = (controlName : string, matchControlName : string) => {\n    return (formGroup: FormGroup) => {\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchControlName];\n\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n          return;\n      }\n      if (control.value !== matchingControl.value) {\n          matchingControl.setErrors({ mustMatch: true });\n      } else {\n          matchingControl.setErrors(null);\n      }\n  }\n  }\n\n  async validate(event): Promise<void> {\n    this.submitted = true;\n    event.preventDefault();\n\n    if(this.changeForm.invalid){\n      return;\n    }\n    let passwords = this.changeForm.value;\n    this.profileService.changePassword(passwords).subscribe(\n      (data) => {\n        this.submitted = false;\n        console.log(data)\n        if (data.error)\n          this.notificationService.errorMsg(\"Mot de passe incorrect\")\n        else\n          this.notificationService.success(\"Mot de passe\", \"Modification avec succès\");\n        this.changeForm.reset();\n      }\n    )\n  }\n}\n","import { Component, OnInit,\r\n  OnDestroy, PLATFORM_ID,\r\n  Inject, ViewChild,\r\n  ElementRef } from '@angular/core';\r\nimport {isPlatformBrowser} from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LocalStorageService } from 'ngx-localstorage';\r\nimport { Chat, ChatSocket, ClientCam } from 'src/app/interfaces/chat.interface';\r\nimport { ChatService } from 'src/app/services/chat/chat.service';\r\nimport { ModelService } from 'src/app/services/model/model.service';\r\nimport { SocketService } from 'src/app/services/socket/socket.service';\r\nimport { RoomPrivateService } from '../../../services/roomPrivate/room-private.service';\r\nimport { PopupService } from '../../../services/popup/popup.service';\r\nimport { ProfilService } from '../../../services/profil/profil.service';\r\nimport { RoomVipService } from '../../../services/roomVip/room-vip.service';\r\nimport { CreditService } from '../../../services/credit/credit.service';\r\nimport { TimerService } from '../../../services/timer/timer.service';\r\nimport { TypeTimer } from 'src/app/interfaces/timer.interface';\r\nimport * as $ from 'jquery';\r\n\r\n// For Peer\r\nimport './../shim';\r\nimport Peer from \"peerjs\"\r\nimport { Subscription, Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-live-private-model',\r\n  templateUrl: './live-private-model.component.html',\r\n  styleUrls: ['./live-private-model.component.scss' , './../../live/live.scss']\r\n})\r\nexport class LivePrivateModelComponent implements OnInit {\r\n  context: string = \"LIVE PRIVEE\";\r\n  imgPoster = \"assets/images/image.png\";\r\n  thrombone = \"assets/icons/paper-clip.svg\";\r\n  send = \"assets/icons/send-button.svg\";\r\n  dot = \"assets/icons/more_purple.svg\";\r\n  close = \"assets/icons/close.svg\";\r\n\r\n  toggleDot: boolean = false;\r\n\r\n  info = {\r\n    bg : \"assets/logos/dark-light.jpg\",\r\n    message : '',\r\n    idRoom: 0,\r\n    pseudo: '',\r\n    chatColor:'#FB77FC',\r\n    modelId: 0,\r\n    actif: 0,\r\n    creditModel: 0,\r\n    idCreditModel: 0\r\n  }\r\n\r\n  timer = {\r\n    id: 0,\r\n    hour: 0,\r\n    minute: 0,\r\n    second: 0,\r\n    fail: false,\r\n    reinit: false\r\n  };\r\n\r\n  messages: Chat[] = [];\r\n  leaved: boolean = false;\r\n\r\n  clientId: number = null;\r\n\r\n  clients: ClientCam[] = [];\r\n\r\n  joinSub = new Subscription();\r\n  leaveSub = new Subscription();\r\n  messageSub = new Subscription();\r\n  peerSub = new Subscription();\r\n\r\n  stat = {\r\n    id_show: 0,\r\n    type_show : null,\r\n    tarif_show: 0,\r\n    time_show: 0,\r\n    time_passed : this.timer.hour + ':' + this.timer.minute + ':' + this.timer.second,\r\n    hour_passed : null,\r\n    minute_passed : null,\r\n    second_passed : null,\r\n    actualCredit: this.info.creditModel,\r\n    winCredit: 0,\r\n    totalCredit: this.info.creditModel\r\n  }\r\n\r\n  // WEB RTC VIDEO\r\n  @ViewChild('video_live_model', {static: true}) video: ElementRef<HTMLVideoElement>;\r\n  private peer: Peer;\r\n  peerIdShare: string;\r\n  peerId: string;\r\n  private lazyStream: any;\r\n  currentPeer: any;\r\n  private peerList: Array<any> = [];\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private _platform: Object,\r\n    private router: Router,\r\n    private store: LocalStorageService,\r\n    private modelService: ModelService,\r\n    private chatService: ChatService,\r\n    private roomPrivateService: RoomPrivateService,\r\n    private roomVipService: RoomVipService,\r\n    private socketService: SocketService,\r\n    private profilService: ProfilService,\r\n    private popupService: PopupService,\r\n    private creditService: CreditService,\r\n    private timerService: TimerService) {\r\n      this.peer = new Peer();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getInfo();\r\n    this.initLiveVideo();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.joinSub.unsubscribe();\r\n    this.leaveSub.unsubscribe();\r\n    this.messageSub.unsubscribe();\r\n    this.peerSub.unsubscribe();\r\n  }\r\n\r\n  getInfo() {\r\n    this.modelService.getInfo().subscribe(\r\n      (data) => {\r\n        // console.log('Get info ', data);\r\n        this.info.bg = data.path_soft;\r\n        this.info.modelId = data.id;\r\n        this.info.pseudo = data.pseudo;\r\n        this.getInfoRoom();\r\n      }\r\n    )\r\n  }\r\n\r\n  getInfoRoom() {\r\n    this.roomPrivateService.getRoomModel(this.info.modelId).subscribe(\r\n      async (data) => {\r\n        // console.log('Model room ', data);\r\n        this.info.idRoom = data.idRoom;\r\n        this.getCredit();\r\n        this.initSocket();\r\n      }\r\n    )\r\n  }\r\n\r\n  async getActifs() {\r\n    await this.roomPrivateService.getActif(this.info.idRoom).subscribe(\r\n      (data) => {\r\n        // console.log(\"Get les actifs \", data);\r\n        this.info.actif = data.clients.length;\r\n        this.clients = data.clients;\r\n      }\r\n    )\r\n  }\r\n\r\n  getCredit() {\r\n    this.creditService.getCredit().subscribe(\r\n      (data) => {\r\n        this.info.creditModel = data ? data.credit : 0;\r\n        this.info.idCreditModel = data ? data.id : 0;\r\n      }\r\n    );\r\n\r\n    // Launch the timer\r\n    this.initTimer();\r\n  }\r\n\r\n  initSocket() {\r\n    this.getMessages();\r\n\r\n    this.joinSub = this.socketService.listen(`joined ${this.info.idRoom}P`).subscribe(\r\n      (data: any) => {\r\n        // console.log('joined ', data);\r\n        this.getActifs();\r\n      }\r\n    );\r\n\r\n    this.leaveSub = this.socketService.listen(`leaved ${this.info.idRoom}P`).subscribe(\r\n      (data: any) => {\r\n        // console.log('leaved ', data);\r\n        this.getActifs();\r\n      }\r\n    );\r\n\r\n    this.messageSub = this.socketService.listen(`message ${this.info.idRoom}P`).subscribe(\r\n      (data) => {\r\n        this.getMessages();\r\n      }\r\n    );\r\n\r\n    this.peerSub = this.socketService.listen(`ask peerId ${this.info.idRoom}P`).subscribe(\r\n      async (data: {peerId: any, room: string, clientId: number}) => {\r\n        console.log('Ask peer Id ', data);\r\n        if (!this.peerId) await this.getPeerId();\r\n        this.socketService.ansModelPeerId({\r\n          peerId: this.peerId, room: this.info.idRoom+'P', clientId: data.clientId\r\n        });\r\n      }\r\n    );\r\n\r\n    this.getActifs();\r\n  }\r\n\r\n  getMessages() {\r\n    this.chatService.getMessage(this.info.idRoom, 'private').subscribe(\r\n      (data) => {\r\n        // console.log('Messages ', data);\r\n        this.messages = data;\r\n      }\r\n    )\r\n  }\r\n\r\n  toggleDots() {\r\n    this.toggleDot = !this.toggleDot;\r\n    // console.log(this.toggleDot);\r\n  }\r\n\r\n  sendMessage() {\r\n    if (!this.info.message) return;\r\n\r\n    const data: Chat = {\r\n      idRoom: this.info.idRoom,\r\n      message: this.info.message,\r\n      type_source: 'model',\r\n      id_source: this.info.modelId,\r\n      type_chat: 'private',\r\n      code_couleur: this.info.chatColor\r\n    }\r\n\r\n    this.chatService.postMessage(data).subscribe(\r\n      (data) => {\r\n        this.getMessages();\r\n        const msg: ChatSocket = {\r\n          room: this.info.idRoom + 'P',\r\n          role: 'model',\r\n          id: this.info.modelId,\r\n          message: this.info.message\r\n        }\r\n        this.socketService.sendMessage(msg);\r\n        this.info.message = null;\r\n      }\r\n    )\r\n  }\r\n\r\n  async liveVIP() {\r\n    if (this.clientId) {\r\n      this.leaved = true;\r\n      this.clearTimer();\r\n      (await this.leaveTimer()).subscribe(\r\n        (data) => {\r\n          this.timer.reinit = true;\r\n          this.roomVipService.createRoom(this.clientId).subscribe(\r\n            (data) => {\r\n              this.store.set(\"vipRoomId\", data.room);\r\n\r\n              const msg = {\r\n                room: this.info.idRoom + 'P',\r\n                role: 'model',\r\n                clientId: this.clientId,\r\n                message: 'Let\\'s go to VIP',\r\n                roomVIP: data.room + 'V'\r\n              }\r\n\r\n              this.askLeave().then(\r\n                (data) => {\r\n                  this.socketService.emit('Invitation to VIP', msg).then(\r\n                    (data) => {\r\n                      // this.router.navigate(['/modele/live-vip', {clientId: this.clientId}]);\r\n                      this.router.navigate(['/modele/live-vip']);\r\n                    }\r\n                  );\r\n                }\r\n              )\r\n            }\r\n          )\r\n      })\r\n\r\n    } else {\r\n      this.popupService.info(null,'LIVE VIP',\r\n      `Veuillez choisir votre client`);\r\n    }\r\n  }\r\n\r\n  async askLeave() {\r\n    const data = {\r\n      room: this.info.idRoom + 'P',\r\n      role: 'model',\r\n      id: this.info.modelId,\r\n      pseudo: this.info.pseudo,\r\n      message: 'I pass to live VIP'\r\n    }\r\n    return await this.socketService.emit('Pass to VIP', data);\r\n  }\r\n\r\n  async liveOut() {\r\n    // const room = this.store.get('privateRoomId');\r\n    this.onStop();\r\n    this.leaved = true;\r\n    await (await this.leaveTimer()).subscribe(\r\n      (data) => {\r\n        this.timer.reinit = true;\r\n        this.clearTimer(); // set to zero\r\n        this.socketService.leavePrivate(this.info.idRoom, 'model');\r\n        this.roomPrivateService.leaveRoom();\r\n        this.profilService.updateStatus(this.info.modelId, 'En ligne').subscribe(\r\n          (data) => {\r\n            this.router.navigate(['/modele/chat']);\r\n          }\r\n        )\r\n      }\r\n    );\r\n  }\r\n\r\n  chooseClient(id: number) {\r\n    this.clientId = id;\r\n    // console.log('Selected client ', this.clientId);\r\n  }\r\n\r\n  // Timer\r\n  async initTimer() {\r\n      this.timerService.beginTimerModel(this.info.modelId, TypeTimer.PRIVATE).subscribe(\r\n        async (data) => {\r\n          // console.log('Timer ', data);\r\n          const created: Date = data.createdAt;\r\n          const updated: Date = data.updatedAt;\r\n          this.timer.id = data.id;\r\n          // console.log(created.toString(), \" to \", updated.toString());\r\n          const {hour, minute, second} = this.timerService.convertTime(created.toString(), updated.toString());\r\n          this.timer.hour = hour;\r\n          this.timer.minute = minute;\r\n          this.timer.second = second;\r\n          // console.log(this.timer.hour, ':', this.timer.minute, ':', this.timer.second);\r\n\r\n          this.getCostShow();\r\n        }\r\n      )\r\n  }\r\n\r\n  async getCostShow() {\r\n    return await this.timerService.getCostShow(TypeTimer.VIP).subscribe(\r\n      (data: any) => {\r\n        // console.log(\"Show Cost \", data)\r\n        this.stat.tarif_show = data.credit? data.credit : 0;\r\n        this.stat.time_show = data.second ? data.second : 0;\r\n        this.stat.type_show = (data.type + '').toString().toUpperCase();\r\n\r\n        this.beginCountCredit(this.stat.time_show);\r\n      }\r\n    )\r\n  }\r\n\r\n  beginCountCredit(nbSecond: number) {\r\n    const delay = nbSecond * 1000;\r\n    setInterval(\r\n      () => {\r\n        if (this.info.actif > 0) {\r\n          this.creditService.getCredit().subscribe(\r\n            (data) => {\r\n              this.info.creditModel = data ? data.credit : 0;\r\n            }\r\n          );\r\n        }\r\n      }, delay\r\n    )\r\n  }\r\n\r\n  // Timer set to 0\r\n  clearTimer() {\r\n    this.timer.reinit = true;\r\n  }\r\n\r\n  async leaveTimer(): Promise<Observable<any>> {\r\n    const data = {\r\n      id: this.timer.id,\r\n      type: TypeTimer.PRIVATE,\r\n      leaved: true,\r\n      push: new Date().toString()\r\n    }\r\n\r\n    return await this.timerService.updateTimer(data);\r\n  }\r\n\r\n    // WEB RTC - LIVE VIDEO\r\n    initLiveVideo() {\r\n      this.onStart();\r\n      this.getPeerId();\r\n    }\r\n\r\n    onStart(){\r\n      if(isPlatformBrowser(this._platform) && 'mediaDevices' in navigator) {\r\n        navigator.mediaDevices.getUserMedia({video: true}).then((ms: MediaStream) => {\r\n          const _video = this.video.nativeElement;\r\n          _video.srcObject = ms;\r\n          _video.play();\r\n        });\r\n      }\r\n    }\r\n\r\n    onStop() {\r\n      // let i = 0;\r\n      // (this.video.nativeElement.srcObject as MediaStream).getVideoTracks().forEach(\r\n      //   (stream) => {\r\n      //     (this.video.nativeElement.srcObject as MediaStream).getVideoTracks()[i].stop();\r\n      //     i++;\r\n      //   }\r\n      // )\r\n\r\n      if (this.video && this.video.nativeElement.srcObject) {\r\n        this.video.nativeElement.pause();\r\n        if ((this.video.nativeElement.srcObject as MediaStream).getVideoTracks()[0]) {\r\n          (this.video.nativeElement.srcObject as MediaStream).getVideoTracks()[0].stop();\r\n        }\r\n        this.video.nativeElement.srcObject = null;\r\n      }\r\n    }\r\n\r\n  private getPeerId = () => {\r\n    this.peer.on('open', (id) => {\r\n      console.log(\"Peer Id \", id);\r\n      this.peerId = id;\r\n    });\r\n\r\n    this.peer.on('call', (call) => {\r\n      this.onStop();\r\n      console.log(\"Someone call model\");\r\n      navigator.mediaDevices.getUserMedia({\r\n        video: true,\r\n        audio: true\r\n      }).then((stream) => {\r\n        this.lazyStream = stream;\r\n        const _video = this.video.nativeElement;\r\n        _video.srcObject = stream;\r\n        _video.play();\r\n        console.log(\"Get model stream \", stream);\r\n        call.answer(stream);\r\n        console.log(\"After answer stream\");\r\n        call.on('stream', (remoteStream) => {\r\n          console.log(\"On stream model\");\r\n          if (!this.peerList.includes(call.peer)) {\r\n            this.streamRemoteVideo(remoteStream);\r\n            this.currentPeer = call.peerConnection;\r\n            this.peerList.push(call.peer);\r\n          }\r\n          console.log(\"Peer list \", this.peerList);\r\n        });\r\n      }).catch(err => {\r\n        console.log(err + ' - Unable to get media');\r\n      });\r\n    });\r\n  }\r\n\r\n  connectWithPeer(): void {\r\n    this.callPeer(this.peerIdShare);\r\n  }\r\n\r\n  private callPeer(id: string): void {\r\n    navigator.mediaDevices.getUserMedia({\r\n      video: true,\r\n      audio: true\r\n    }).then((stream) => {\r\n      this.lazyStream = stream;\r\n\r\n      const call = this.peer.call(id, stream);\r\n      call.on('stream', (remoteStream) => {\r\n        if (!this.peerList.includes(call.peer)) {\r\n          this.streamRemoteVideo(remoteStream);\r\n          this.currentPeer = call.peerConnection;\r\n          this.peerList.push(call.peer);\r\n        }\r\n      });\r\n    }).catch(err => {\r\n      console.log(err + 'Unable to connect');\r\n    });\r\n  }\r\n\r\n  private streamRemoteVideo(stream: any): void {\r\n    // const video = document.createElement('video');\r\n    // video.classList.add('video');\r\n    // video.srcObject = stream;\r\n    // video.play();\r\n\r\n    // document.getElementById('remote-video').append(video);\r\n    this.clients[0].client.stream = stream;\r\n  }\r\n\r\n}\r\n","<app-header connected=\"true\" model=\"true\"></app-header>\n\n<div class=\"main_live\">\n  <img [src]=\"dot\" alt=\"\" id=\"dots\" (click)=\"toggleDots()\">\n  <div class=\"contain_top\">\n    <div class=\"contain_left\">\n      <app-topbar [context]=\"context\" [actif]=\"info.actif\"\n      [hour]=\"this.timer.hour\"\n      [minute]=\"this.timer.minute\"\n      [second]=\"this.timer.second\"\n      [reinit]=\"this.timer.reinit\"\n      [leaved]=\"leaved\"\n      ></app-topbar>\n      <div class=\"show_live_left\">\n\n        <video controls autoplay [poster]=\"info.bg\" id=\"video_live_model\" #video_live_model>\n        </video>\n      </div>\n    </div>\n    <div class=\"contain_right\">\n      <div class=\"show_live_right\">\n        <mat-tab-group mat-align-tabs=\"center\">\n          <mat-tab label=\"Live Cam\">\n            <app-live-private-cam [clients]=\"clients\" canSelect=\"true\"\n            (clientSelected)=\"chooseClient($event)\"></app-live-private-cam>\n          </mat-tab>\n          <mat-tab label=\"Live Chat\">\n            <app-live-free-chat [modelId]=\"info.modelId\" [messages]=\"messages\" [profil]=\"info.bg\"></app-live-free-chat>\n          </mat-tab>\n        </mat-tab-group>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"contain_bottom\">\n    <div class=\"contain_left\">\n      <div class=\"contain_action contain_action_desktop\">\n        <div class=\"show_vip btn_show\">\n          <button class=\"btn btn_vip lighter\" (click)=\"liveVIP()\">Passer en show VIP</button>\n          <p></p>\n        </div>\n\n        <div class=\"out_show btn_show\">\n          <button class=\"btn btn_out_show lighter\" (click)=\"liveOut()\">Sortir du Show</button>\n          <p></p>\n        </div>\n\n        <div class=\"btn_credit\">\n          <button class=\"btn lighter\">\n            {{info.creditModel}} crédits\n          </button>\n          <p></p>\n        </div>\n      </div>\n\n      <!-- // mobile -->\n      <div class=\"contain_action contain_action_mobile\" *ngIf=\"toggleDot\">\n        <div class=\"show_vip btn_show\">\n          <button class=\"btn btn_vip lighter\" (click)=\"liveVIP()\">Passer en show VIP</button>\n          <p></p>\n        </div>\n\n        <div class=\"out_show btn_show\">\n          <button class=\"btn btn_out_show lighter\" (click)=\"liveOut()\">Sortir du Show</button>\n          <p></p>\n        </div>\n\n        <div class=\"btn_credit\">\n          <button class=\"btn lighter\">\n            {{info.creditModel}} crédits\n          </button>\n          <p></p>\n        </div>\n      </div>\n\n    </div>\n    <div class=\"contain_right\">\n      <div class=\"contain_message\">\n        <div class=\"contain_thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n        </div>\n        <form (ngSubmit)=\"sendMessage()\">\n        <div class=\"input_text\">\n            <input type=\"text\" name=\"message\" autocomplete=\"off\"\n            placeholder=\"Entrer votre message ici ...\" [(ngModel)]=\"info.message\">\n            <button type=\"submit\">\n              <div class=\"p\">\n                <img [src]=\"send\" alt=\"\">\n              </div>\n            </button>\n        </div>\n      </form>\n      </div>\n    </div>\n  </div>\n\n</div>\n","import { Component } from '@angular/core';\nimport { Router, Event, NavigationStart, NavigationEnd, NavigationError } from '@angular/router';import { HeaderService } from './services/header/header.service';\nimport { routeTransitionAnimations } from './utils/slide';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations : [routeTransitionAnimations]\n})\nexport class AppComponent {\n  title = 'betweenUs';\n  hide: boolean = false;\n  unselect: boolean = false;\n\n  constructor(private headerSrv: HeaderService, private router: Router) {\n    this.router.events.subscribe((event: Event) => {\n      if (event instanceof NavigationStart) {\n          // Show loading indicator\n      }\n\n      if (event instanceof NavigationEnd) {\n          // Hide loading indicator\n      }\n\n      if (event instanceof NavigationError) {\n          // Hide loading indicator\n\n          // Present error to user\n          console.log(event.error);\n      }\n  });\n\n    this.headerSrv.hidded.subscribe(\n      (data) => {\n        this.hide = data;\n      }\n    );\n    this.headerSrv.unselected.subscribe(\n      (data) => {\n        this.unselect = data;\n      }\n    );\n  }\n\n\n}\n","<!-- <div class=\"contain_header\" [ngClass]=\"{'unclickable': unselect}\" *ngIf=\"!hide\">\n  <app-header></app-header>\n</div> -->\n<div class=\"spacer\"></div>\n<router-outlet></router-outlet>\n\n<!-- <app-scrolltop></app-scrolltop> -->\n","import { Injectable } from '@angular/core';\nimport * as CryptoJS from 'crypto-js';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EncryptionService {\n  private key = CryptoJS.enc.Utf8.parse('4512631236589784');\n  private iv = CryptoJS.enc.Utf8.parse('4512631236589784');\n\n  constructor() { }\n\n  encryptUsingAES256(enString) {\n    var encrypted = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(JSON.stringify(enString)), this.key, {\n        keySize: 128 / 8,\n        iv: this.iv,\n        mode: CryptoJS.mode.CBC,\n        padding: CryptoJS.pad.Pkcs7\n    });\n    return encrypted;\n  }\n\n  decryptUsingAES256(decString) {\n      var decrypted = CryptoJS.AES.decrypt(decString, this.key, {\n          keySize: 128 / 8,\n          iv: this.iv,\n          mode: CryptoJS.mode.CBC,\n          padding: CryptoJS.pad.Pkcs7\n      });\n      const result = decrypted.toString(CryptoJS.enc.Utf8);\n      return result;\n  }\n\n}\n","import { Component, Input, IterableDiffers, OnInit } from '@angular/core';\r\nimport { Chat } from '../../../../interfaces/chat.interface';\r\nimport * as $ from 'jquery';\r\nimport { SocketService } from '../../../../services/socket/socket.service';\r\n\r\ninterface message {\r\n  source: string,\r\n  name: string,\r\n  url: string,\r\n  message: string,\r\n  color: string\r\n}\r\n\r\n@Component({\r\n  selector: 'app-live-free-chat',\r\n  templateUrl: './live-free-chat.component.html',\r\n  styleUrls: ['./live-free-chat.component.scss']\r\n})\r\nexport class LiveFreeChatComponent implements OnInit {\r\n  @Input()\r\n  modelId: number;\r\n\r\n  @Input()\r\n  pseudoModel: string;\r\n\r\n  @Input()\r\n  leaved: boolean;\r\n\r\n  @Input()\r\n  passedToPrivate: boolean;\r\n\r\n  @Input()\r\n  profil: string;\r\n\r\n  room: number;\r\n\r\n  user = \"assets/images/user_chat.png\";\r\n  listColor = [];\r\n\r\n  @Input()\r\n  messages: Chat[] = [];\r\n\r\n  iterableDiffer: any;\r\n  constructor(\r\n    private iterableDiffers: IterableDiffers,\r\n    private socketService: SocketService) {\r\n    this.iterableDiffer = iterableDiffers.find([]).create(null);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.profil === undefined) this.profil = this.user;\r\n    if (this.messages.length > 0) {\r\n      $(document).ready(function () {\r\n        setTimeout(\r\n          () => {\r\n              $('#main_chat').animate({\r\n                scrollTop: $('#main_chat .msg:last-child').position().top\r\n              }, 10);\r\n          }, 1000\r\n        )\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  ngDoCheck() {\r\n    let changes = this.iterableDiffer.diff(this.messages);\r\n    if (changes) {\r\n      $(\"#main_chat\").animate({ scrollTop: $('#main_chat').prop(\"scrollHeight\")}, 10);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"main_chat\" id=\"main_chat\">\n  <div *ngFor=\"let item of messages; let i=index\" class=\"msg\">\n    <div class=\"left_chat contain_chat\" *ngIf=\"item.type_source == 'model'\">\n      <div class=\"contain_image\">\n        <img [src]=\"profil\" alt=\"\" class=\"user_profile\">\n      </div>\n      <div class=\"left_message chat\" [ngStyle]=\"{'background-color': item.code_couleur}\">\n        <p>{{item.message}}</p>\n      </div>\n    </div>\n\n    <div class=\"right_chat contain_chat\" *ngIf=\"item.type_source == 'client'\">\n      <div class=\"right_message chat\" [ngStyle]=\"{'background-color': item.code_couleur}\">\n        <p>{{item.message}}</p>\n      </div>\n      <div class=\"contain_image\">\n        <img [src]=\"user\" alt=\"\" class=\"user_profile\">\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"leave_model\" *ngIf=\"leaved\">\n    <p>\" {{pseudoModel}} a quitté la discussion \"</p>\n  </div>\n\n  <div class=\"leave_model\" *ngIf=\"passedToPrivate\">\n    <p>\" {{pseudoModel}} est passé en live Privé \"</p>\n  </div>\n\n</div>\n","<app-header></app-header>\n\n<div class=\"contain_signup_one\">\n  <div class=\"inside_sign part_one\">\n    <h2>INSCRIPTION</h2>\n    <p>MODELE</p>\n    <div class=\"blank\"></div>\n  </div>\n</div>\n\n<div class=\"contain_signup_two inside_sign\">\n  <h2 class=\"title\">\n    Devenir modèle\n  </h2>\n\n  <div class=\"descr\">\n      Tous les modèles présents <br>\n      sur ce site sont agé de 18 et plus. <br>\n      Avant de vous inscrire, assurez-vous d'être bien majeur.\n  </div>\n  <div class=\"already\">\n    Déjà un compte ? <span routerLink=\"/modele/connexion\">Se connecter</span>\n  </div>\n\n  <form class=\"form\" [formGroup]=\"signForm\" novalidate autocomplete=\"off\">\n    <div class=\"form-group\">\n      <label for=\"pseudo\">Nom *</label>\n      <input type=\"text\" formControlName=\"firstname\"\n      name=\"firstName\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.firstname.errors\">\n        <small *ngIf=\"form.firstname.errors.required\" class=\"form-text error-text\">Nom requis</small>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"pseudo\">Prénom *</label>\n      <input type=\"text\" formControlName=\"lastname\" name=\"lastName\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.lastname.errors\">\n        <small *ngIf=\"form.lastname.errors.required\" class=\"form-text error-text\">Prénom requis</small>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"pseudo\">Pseudo *</label>\n      <input type=\"text\" formControlName=\"pseudo\" name=\"pseudo\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.pseudo.errors\">\n        <small *ngIf=\"form.pseudo.errors.required\" class=\"form-text error-text\">Pseudo requis</small>\n      </div>\n      <div *ngIf=\"pseudoExist\">\n        <small class=\"form-text error-text\">Pseudo existe déjà</small>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"email\">Email *</label>\n      <input type=\"text\" formControlName=\"email\" name=\"email\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.email.errors\">\n        <small *ngIf=\"form.email.errors.required\" class=\"form-text error-text \">\n          Adresse email requis\n        </small>\n        <small *ngIf=\"form.email.errors.email\" class=\"form-text error-text \">\n          Format invalide\n        </small>\n      </div>\n      <div *ngIf=\"emailExist\">\n        <small class=\"form-text error-text \">\n          Email déjà utilisé\n        </small>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"pseudo\">Date de naissance *</label>\n      <div class=\"container-fluid\">\n        <div class=\"row\">\n          <div class=\"col-lg-3\">\n            <select formControlName=\"day_birth\" name=\"day\" class=\"form-control input lighter\"\n            placeholder=\"jj\" (click)=\"select()\"\n            style=\"background-color: var(--purple); color: white;border-color: transparent;\">\n              <option value=\"\" selected=\"true\" class=\"selected_option\">jj</option>\n              <option *ngFor=\"let item of day\" [value]=\"item.value\">{{item.name}}</option>\n            </select>\n            <!-- <input type=\"text\" formControlName=\"day\" name=\"day\" class=\"form-control input lighter\" placeholder=\"jj\"> -->\n            <div *ngIf=\"submitted && form.day_birth.errors\">\n              <small *ngIf=\"form.day_birth.errors.required\" class=\"form-text error-text\">Jour requis</small>\n            </div>\n          </div>\n          <div class=\"col-lg-4 offset-lg-1\">\n            <select formControlName=\"month_birth\" name=\"month\" class=\"form-control input lighter\"\n            placeholder=\"mm\" (click)=\"select()\"\n            style=\"background-color: var(--purple); color: white;border-color: transparent;\">\n              <option value=\"\" selected=\"true\" class=\"selected_option\">mm</option>\n              <option *ngFor=\"let item of month\" [value]=\"item.value\">{{item.name}}</option>\n            </select>\n            <!-- <input type=\"text\" formControlName=\"month\" name=\"month\" class=\"form-control input lighter\" placeholder=\"mm\"> -->\n            <div *ngIf=\"submitted && form.month_birth.errors\">\n              <small *ngIf=\"form.month_birth.errors.required\" class=\"form-text error-text\">Mois requis</small>\n            </div>\n          </div>\n          <div class=\"col-lg-3 offset-lg-1\">\n            <select formControlName=\"year_birth\" name=\"year\" class=\"form-control input lighter\"\n            placeholder=\"aaaa\" (click)=\"select()\"\n            style=\"background-color: var(--purple); color: white;border-color: transparent;\">\n              <option value=\"\" selected=\"true\" class=\"selected_option\">aaaa</option>\n              <option *ngFor=\"let item of year\" [value]=\"item.value\">{{item.name}}</option>\n            </select>\n            <!-- <input type=\"text\" formControlName=\"year\" name=\"year\" class=\"form-control input lighter\" placeholder=\"aaaa\"> -->\n            <div *ngIf=\"submitted && form.year_birth.errors\">\n              <small *ngIf=\"form.year_birth.errors.required\" class=\"form-text error-text\">Année requis</small>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"pseudo\">Copie pièce d'identitée *</label>\n      <div class=\"container-fluid\">\n        <div class=\"row\">\n          <div class=\"col-lg-6\" (click)=\"selectPhoto('recto')\">\n            <input type=\"text\" formControlName=\"path_recto\" name=\"recto\"\n            class=\"form-control input lighter input_img\" placeholder=\"Recto\"\n            [(ngModel)]=\"nameRecto\">\n            <div *ngIf=\"submitted && form.path_recto.errors\">\n              <small *ngIf=\"form.path_recto.errors.required\" class=\"form-text error-text\">Recto requis</small>\n            </div>\n            <div *ngIf=\"errorRecto\">\n              <small class=\"form-text error-text\">Format invalide (image)</small>\n            </div>\n          </div>\n          <div class=\"col-lg-6\" (click)=\"selectPhoto('verso')\">\n            <input type=\"text\" formControlName=\"path_verso\" name=\"verso\"\n            class=\"form-control input lighter input_img\" placeholder=\"Verso\"\n            [(ngModel)]=\"nameVerso\">\n            <div *ngIf=\"submitted && form.path_verso.errors\">\n              <small *ngIf=\"form.path_verso.errors.required\" class=\"form-text error-text\">Verso requis</small>\n            </div>\n            <div *ngIf=\"errorVerso\">\n              <small class=\"form-text error-text\">Format invalide (image)</small>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"form-group\" (click)=\"selectPhoto('photo')\">\n      <label for=\"pseudo\">Photo de vous avec la carte d'identité *</label>\n      <input type=\"text\" formControlName=\"path_cin\"\n      name=\"photoCIN\" class=\"form-control input lighter input_img\"\n      [(ngModel)]=\"namePhoto\">\n      <div *ngIf=\"submitted && form.path_cin.errors\">\n        <small *ngIf=\"form.path_cin.errors.required\" class=\"form-text error-text\">Photo avec CIN requis</small>\n      </div>\n      <div *ngIf=\"errorPhoto\">\n        <small class=\"form-text error-text\">Format invalide (image)</small>\n      </div>\n    </div>\n\n    <div class=\"form-group\" (click)=\"selectPhoto('soft')\">\n      <label for=\"pseudo\">Photo soft pour le profil *</label>\n      <input type=\"text\" formControlName=\"path_soft\"\n      name=\"photoSoft\" class=\"form-control input lighter input_img\"\n      [(ngModel)]=\"nameSoft\">\n      <div *ngIf=\"submitted && form.path_soft.errors\">\n        <small *ngIf=\"form.path_soft.errors.required\" class=\"form-text error-text\">Photo soft requis</small>\n      </div>\n      <div *ngIf=\"errorSoft\">\n        <small class=\"form-text error-text\">Format invalide (image)</small>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"password\">Mot de passe *</label>\n      <input type=\"password\" formControlName=\"password\" name=\"password\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.password.errors\">\n        <small *ngIf=\"form.password.errors.required\" class=\"form-text error-text\">\n          Mot de passe requis\n        </small>\n        <small *ngIf=\"form.password.errors.pattern\" class=\"form-text error-text\">\n          Au moins 8 caractères, lettre majuscule et  minuscule,\n          un chiffre et/ou un caractère spécial.\n        </small>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"passwordConfirm\">Confirmer mot de passe *</label>\n      <input type=\"password\" formControlName=\"passwordConfirm\" name=\"passwordConfirm\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.passwordConfirm.errors\">\n        <small *ngIf=\"form.passwordConfirm.errors.required\" class=\"form-text error-text \">\n          Confirmation mot de passe requis\n        </small>\n        <small *ngIf=\"form.passwordConfirm.errors.mustMatch\" class=\"form-text error-text \">\n          Mot de passe ne correspond pas\n        </small>\n      </div>\n    </div>\n\n    <!-- <div>\n      <small *ngIf=\"error !== null\" class=\"form-text error-text\">\n        {{error}}\n      </small>\n    </div> -->\n\n    <div class=\"notif\">\n      * Champ obligatoire\n    </div>\n\n    <div class=\"action\">\n      <button class=\"btn btn_signup lighter\" (click)=\"register()\">\n        <div class=\"loader\" *ngIf=\"loading\"></div>\n        <span *ngIf=\"!loading\"> S'INSCRIRE</span>\n      </button>\n    </div>\n  </form>\n\n  <input type=\"file\" class=\"hidden_file\" id=\"recto\" accept=\"image/x-png,image/gif,image/jpeg\" (change)=\"fileChoose($event, 'recto')\">\n  <input type=\"file\" class=\"hidden_file\" id=\"verso\" accept=\"image/x-png,image/gif,image/jpeg\" (change)=\"fileChoose($event, 'verso')\">\n  <input type=\"file\" class=\"hidden_file\" id=\"photo\" accept=\"image/x-png,image/gif,image/jpeg\" (change)=\"fileChoose($event, 'photo')\">\n  <input type=\"file\" class=\"hidden_file\" id=\"soft\" accept=\"image/x-png,image/gif,image/jpeg\" (change)=\"fileChoose($event, 'soft')\">\n</div>\n","import { AuthService } from './../../../services/auth/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport * as $  from 'jquery';\nimport { Router } from '@angular/router';\nimport { registerModel } from '../../../interfaces/register.interface';\nimport { PopupService } from '../../../services/popup/popup.service';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { ProfilService } from '../../../services/profil/profil.service';\nimport { CreditService } from '../../../services/credit/credit.service';\n\ninterface birth {\n  value: string,\n  name: string\n}\n\n@Component({\n  selector: 'app-inscription-model',\n  templateUrl: './inscription-model.component.html',\n  styleUrls: ['./inscription-model.component.scss']\n})\nexport class InscriptionModelComponent implements OnInit {\n  signForm : FormGroup;\n  submitted :boolean =  false;\n  loading: boolean = false;\n\n  error: string = null;\n  emailExist: boolean = false;\n  pseudoExist: boolean = false;\n\n  day: birth[] = [\n    {value: '01', name: '01'},{value: '02', name: '02'},{value: '03', name: '03'},{value: '04', name: '04'},\n    {value: '05', name: '05'},{value: '06', name: '06'},{value: '07', name: '07'},{value: '08', name: '08'},\n    {value: '09', name: '09'}\n  ];\n\n  month: birth[] = [\n    {value: '01', name: 'Janvier'}, {value: '02', name: 'Février'}, {value: '03', name: 'Mars'}, {value: '04', name: 'Avril'},\n    {value: '05', name: 'Mai'}, {value: '06', name: 'Juin'}, {value: '07', name: 'Juillet'}, {value: '08', name: 'Août'},\n    {value: '09', name: 'Septembre'}, {value: '10', name: 'Octobre'}, {value: '11', name: 'Novembre'}, {value: '12', name: 'Décembre'}\n  ];\n\n  year: birth[] = [];\n\n  fileRecto: File = null;\n  previewRecto: any;\n  nameRecto: any;\n  errorRecto: boolean = false;\n\n  fileVerso: File = null;\n  previewVerso: any;\n  nameVerso: any;\n  errorVerso: boolean = false;\n\n\n  filePhoto: File = null;\n  previewPhoto: any;\n  namePhoto: any;\n  errorPhoto: boolean = false;\n\n\n  fileSoft: File = null;\n  previewSoft: any;\n  nameSoft: any;\n  errorSoft: boolean = false;\n\n\n  fileUploadProgress: string = null;\n\n  constructor(\n    private formBuilder : FormBuilder,\n    private popupService: PopupService,\n    private authService: AuthService,\n    private profileService: ProfilService,\n    private creditService: CreditService\n  ) {\n    this.signForm = this.formBuilder.group({\n      firstname : ['', Validators.required],\n      lastname : ['', Validators.required],\n      pseudo : ['', Validators.required],\n      email : ['',[Validators.required, Validators.email]],\n      // password : ['',[Validators.required, Validators.pattern(/^(?=\\D*\\d)(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z]).{8,}$/)]],\n      day_birth : ['', Validators.required],\n      month_birth : ['', Validators.required],\n      year_birth : ['', Validators.required],\n      path_recto : [''],\n      path_verso : [''],\n      path_cin : [''],\n      path_soft : [''],\n      password : ['', Validators.required],\n      passwordConfirm: ['',Validators.required],\n    },{\n      validators : this.mustMatch('password','passwordConfirm'),\n    })\n  }\n\n  ngOnInit(): void {\n    this.initDay();\n    this.initYear();\n  }\n\n  get form() {return this.signForm.controls}\n\n  mustMatch = (controlName : string, matchControlName : string) => {\n    return (formGroup: FormGroup) => {\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchControlName];\n\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n          return;\n      }\n      if (control.value !== matchingControl.value) {\n          matchingControl.setErrors({ mustMatch: true });\n      } else {\n          matchingControl.setErrors(null);\n      }\n    }\n  }\n\n  initDay() {\n    for (var i = 10; i < 32; i++) {\n      const tmp: birth = {value: i+'', name: i+''};\n      this.day.push(tmp);\n    }\n  }\n\n  initYear() {\n    for (var i = 1920; i < 2500; i++) {\n      const tmp: birth = {value: i+'', name: i+''};\n      this.year.push(tmp);\n    }\n  }\n\n  selectPhoto(type: string) {\n    $(`#${type}`).click();\n  }\n\n  verifyMimeType(mime: string) {\n    return (mime === \"image/png\" || mime === \"image/jpeg\");\n  }\n\n  fileChoose(fileInput, type: string) {\n    var ok: boolean = false;\n    switch (type) {\n      case 'recto':\n        ok = true;\n        this.fileRecto =  fileInput.target.files[0];\n        break;\n      case 'verso':\n        ok = true;\n        this.fileVerso =  fileInput.target.files[0];\n        break;\n      case 'photo':\n        ok = true;\n        this.filePhoto =  fileInput.target.files[0];\n        break;\n      case 'soft':\n        ok = true;\n        this.fileSoft =  fileInput.target.files[0];\n        break;\n      default:\n        break;\n    }\n    if (ok) {this.preview(type);}\n  }\n\n  preview(type: string) {\n    this.errorRecto = this.errorVerso = this.errorPhoto = this.errorSoft = false;\n    var mimeType: any;\n    var reader = new FileReader();\n    var ok: boolean = false;\n\n    switch (type) {\n      case 'recto':\n        ok = true;\n        mimeType = this.fileRecto.type;\n        if (!this.verifyMimeType(mimeType)) this.errorRecto = true;\n        reader = new FileReader();\n        reader.readAsDataURL(this.fileRecto);\n        reader.onload = (event) => {\n          this.previewRecto = reader.result;\n          this.nameRecto = this.fileRecto.name;\n        };\n        break;\n\n      case 'verso':\n        ok = true;\n        mimeType = this.fileVerso.type;\n        if (!this.verifyMimeType(mimeType)) this.errorVerso = true;\n        reader = new FileReader();\n        reader.readAsDataURL(this.fileVerso);\n        reader.onload = (event) => {\n          this.previewVerso = reader.result;\n          this.nameVerso = this.fileVerso.name;\n        };\n        break;\n\n      case 'photo':\n        ok = true;\n        mimeType = this.filePhoto.type;\n        if (!this.verifyMimeType(mimeType)) this.errorPhoto = true;\n        reader = new FileReader();\n        reader.readAsDataURL(this.filePhoto);\n        reader.onload = (event) => {\n          this.previewPhoto = reader.result;\n          this.namePhoto = this.filePhoto.name;\n        };\n        break;\n\n      case 'soft':\n        ok = true;\n        mimeType = this.fileSoft.type;\n        if (!this.verifyMimeType(mimeType)) this.errorSoft = true;\n        reader = new FileReader();\n        reader.readAsDataURL(this.fileSoft);\n        reader.onload = (event) => {\n          this.previewSoft = reader.result;\n          this.nameSoft = this.fileSoft.name;\n        };\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  select() {\n    $(\".selected_option\").hide();\n  }\n\n  async register() {\n    this.pseudoExist = false;\n    this.emailExist = false;\n    this.error = null;\n    this.submitted = true;\n\n    if(this.signForm.invalid || this.errorSoft || this.errorRecto || this.errorVerso || this.errorPhoto){\n      return false;\n    }\n    this.loading = true;\n\n    const formData = new FormData();\n    formData.append('file_recto', this.fileRecto, this.nameRecto);\n    formData.append('file_verso', this.fileVerso, this.nameVerso);\n    formData.append('file_cin', this.filePhoto, this.namePhoto);\n    formData.append('file_soft', this.fileSoft, this.nameSoft);\n    this.fileUploadProgress = '0%';\n\n    return await this.authService.uploadImagesModel(formData).subscribe(\n      (events) => {\n        if (events.type === HttpEventType.UploadProgress) {\n          this.fileUploadProgress = Math.round(events.loaded / events.total * 100) + '%';\n          // console.log(this.fileUploadProgress);\n        }\n        else if (events.type === HttpEventType.Response) {\n          let user: registerModel = this.signForm.value;\n          user = this.signForm.value;\n          user.date_birth = user.day_birth + '/' + user.month_birth + '/' + user.year_birth;\n          user.path_recto = events.body.path_recto;\n          user.path_verso = events.body.path_verso;\n          user.path_cin = events.body.path_cin;\n          user.path_soft = events.body.path_soft;\n          this.authService.registerModel(user).subscribe(\n            (res: any) => {\n                // console.log(res);\n                if (res.error) {\n                  this.error = res.message;\n                  if (res.pseudo) this.pseudoExist = true;\n                  if (res.email) this.emailExist = true;\n                } else {\n                  this.profileService.createSetting(res.id).subscribe(\n                    (data) => {\n                      this.creditService.createCredit(res.id).subscribe(\n                        (data) => {\n                          this.profileService.createProfil(res.id).subscribe(\n                            (data) => {\n                              this.popupService.info('model','Félicitation',\n                              `Cher nouveau modèle, Un email est envoyé à\n                              <span style=\"font-style: italic; color: var(--pink)\">${res.email}</span>\n                              pour les informations de votre compte.`);\n                              this.signForm.reset();\n                            }\n                          );\n                        }\n                      );\n                    }\n                  );\n\n                }\n                this.loading = false;\n            },\n            (err: any) => {\n                this.loading = false;\n                console.log(err);\n            }\n          );\n        }\n      }, (error) => {\n        console.log(error);\n      }\n    )\n  }\n\n}\n","import { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { LocalStorageService } from 'ngx-localstorage';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoomVipService {\n  endpoint = environment.endpoint\n\n  constructor(\n    private http: HttpClient,\n    private store: LocalStorageService\n  ) { }\n\n  getColor(): Observable<any> {\n    return this.http.get(`${this.endpoint}/room-vip/color`, httpOptions)\n  }\n\n  createRoom(clientId: number): Observable<any> {\n    return this.http.post(`${this.endpoint}/room-vip`,{clientId}, httpOptions)\n  }\n\n  getRoomModel(id: number): Observable<any> {\n    return this.http.get(`${this.endpoint}/room-vip/model/${id}`, httpOptions)\n  }\n\n  getInfo(id: number): Observable<any> {\n    return this.http.get(`${this.endpoint}/room-vip/client/${id}`, httpOptions)\n  }\n\n  async getActif(id: number): Promise<number> {\n    let actif = 0;\n    await this.http.get(`${this.endpoint}/room-vip/${id}`, httpOptions).subscribe(\n      (data: any) => {\n        if (data.actif) {\n          actif =  data.actif\n        }\n      }\n    );\n    return actif;\n  }\n\n  joinRoom(idRoom: number) {\n    this.store.set(\"vipRoom\", idRoom);\n  }\n\n  joinedRoom(idRoom: number) {\n    const room = this.store.get(\"vipRoom\");\n    return room === idRoom;\n  }\n\n  leaveRoom() {\n    this.store.remove(\"vipRoom\");\n  }\n\n  getGain(modelId: number): Observable<any> {\n    return this.http.get(`${this.endpoint}/room-vip/gain/${modelId}`, httpOptions)\n  }\n\n}\n","window.parcelRequire = undefined;\r\n","import { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LocalStorageService } from 'ngx-localstorage';\nimport { NotificationService } from 'src/app/services/notification/notification.service';\nimport { environment } from 'src/environments/environment';\nimport { ClientService } from '../../../services/client/client.service';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n@Component({\n  selector: 'app-reactivate-account',\n  templateUrl: './reactivate-account.component.html',\n  styleUrls: ['./reactivate-account.component.scss']\n})\nexport class ReactivateAccountComponent implements OnInit {\n  endpoint = environment.endpoint\n\n  token = null;\n  errorToken: boolean = false;\n  errorMessageToken: string = null;\n  successMessageToken: string = null;\n\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private http: HttpClient,\n    private store: LocalStorageService,\n    private router: Router,\n    private notificationService: NotificationService,\n    private clientService: ClientService\n    ) {\n    this.activatedRoute.queryParams.subscribe(params => {\n          this.token = params['token'];\n      });\n  }\n\n  ngOnInit(): void {\n    this.confirmToken();\n  }\n\n  confirmToken() {\n    if (!this.token) {\n      this.errorToken = true;\n      this.errorMessageToken = \"Token introuvable\"\n      return false;\n    }\n    this.store.set(\"token\", this.token);\n\n    // POST client/confirm\n    this.clientService.reactivateAccount().subscribe(\n      (data: {success: boolean, message: string}) => {\n        // console.log(\"Client token \", data);\n        if (!data.success) {\n          this.errorMessageToken = data.message;\n          this.errorToken = true;\n        } else {\n          this.errorToken = false;\n          this.successMessageToken = data.message;\n          this.notificationService.infoMsg(\"Votre compte est réactivé\");\n          this.router.navigate(['/connexion']);\n        }\n      }\n    )\n  }\n\n}\n","<div class=\"main\"></div>\n\n<div class=\"main_token\">\n  <div class=\"main_contain\">\n    <h3 class=\"titre\">Réactivation de compte</h3>\n    <p class=\"success message\" *ngIf=\"!errorToken\">\n      {{successMessageToken}}\n    </p>\n    <p class=\"error message\" *ngIf=\"errorToken\">\n      {{errorMessageToken}}\n    </p>\n  </div>\n</div>\n\n","<app-header actif=\"2\"></app-header>\n\n<div class=\"contain_signin_one\">\n  <div class=\"inside_sign part_one\">\n    <h2>Bienvenue sur <span class=\"word_one\">BETWEEN</span><span class=\"word_two\">US</span></h2>\n  </div>\n</div>\n\n<div class=\"contain_signin_two inside_sign\">\n  <h2 class=\"title\">\n    Se connecter\n  </h2>\n\n  <div class=\"descr\">\n      Nous utilisons des cookies pour améliorer votre expérience\n      d'utilisateur. En poursuivant votre navigation, vous acceptez\n      l'utilisation de cookies, notamment de tiers. Politique relative aux cookies.\n  </div>\n\n  <form class=\"form\" [formGroup]=\"loginForm\" novalidate autocomplete=\"off\">\n    <div class=\"form-group\">\n      <label for=\"pseudo\">Pseudo</label>\n      <input type=\"text\" formControlName=\"pseudo\" name=\"pseudo\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.pseudo.errors\">\n        <small *ngIf=\"form.pseudo.errors.required\" class=\"form-text error-text\">Pseudo requis</small>\n      </div>\n    </div>\n\n\n    <div class=\"form-group\">\n      <label for=\"password\">Mot de passe</label>\n      <input type=\"password\" formControlName=\"password\" name=\"password\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.password.errors\">\n        <small *ngIf=\"form.password.errors.required\" class=\"form-text error-text\">\n          Mot de passe requis\n        </small>\n      </div>\n    </div>\n\n      <small *ngIf=\"errorAuth\" class=\"form-text error-text\">\n        {{errorAuth}}\n      </small>\n\n    <div class=\"options\">\n      <div class=\"stay_connected\">\n        <input (change)=\"remember($event)\" type=\"checkbox\" id=\"checker\" class=\"regular-checkbox\">\n        <label for=\"checker\" class=\"label_check\">Rester connecté</label>\n      </div>\n      <div class=\"forgot\" routerLink=\"/motdepasseoublie\">\n        Mot de passe oublié ?\n      </div>\n    </div>\n\n    <div class=\"action\">\n      <button class=\"btn btn_signin lighter\" (click)=\"login($event)\">\n        <div class=\"loader\" *ngIf=\"loading\"></div>\n        <span *ngIf=\"!loading\">CONNEXION</span>\n      </button>\n    </div>\n\n    <div class=\"register\">\n      Pas encore membre ? <span routerLink=\"/inscription\">Inscrivez-vous</span>\n    </div>\n  </form>\n\n  <br><br><br>\n</div>\n","import { EncryptionService } from './../../../services/encryption/encryption.service';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HeaderService } from '../../../services/header/header.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { environment } from 'src/environments/environment';\nimport { loginUser } from '../../../interfaces/login.interface';\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss']\n})\nexport class SigninComponent implements OnInit {\n  loginForm : FormGroup;\n  submitted :boolean =  false;\n  loading: boolean = false;\n  checked :boolean =  false;\n  pseudoStorage : string = null;\n  passStorage : string = null;\n  errorAuth  :boolean = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private encryptionService: EncryptionService,\n    private headerSrv: HeaderService,\n    private authService: AuthService,\n    private router: Router,\n  ) {\n    this.loginForm = this.formBuilder.group({\n      pseudo: ['', Validators.required],\n      password: ['', Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n    this.isRemembered();\n  }\n\n  get form() { return this.loginForm.controls }\n\n  remember(value) {\n    if (value.target.checked) {\n        this.checked = true;\n        localStorage.setItem(\"checklog\", \"true\");\n    } else {\n        this.checked = false;\n        localStorage.setItem(\"checklog\", \"false\");\n    }\n  }\n\n  async isRemember(user: loginUser) {\n    if (this.checked) {\n        const pseudoCrypted = this.encryptionService.encryptUsingAES256(user.pseudo);\n        const passCrypted = this.encryptionService.encryptUsingAES256(user.password);\n        localStorage.setItem(environment.CRYPT_PSEUDO, pseudoCrypted);\n        localStorage.setItem(environment.CRYPT_PASS, passCrypted);\n    } else {\n        localStorage.setItem(environment.CRYPT_PSEUDO, null);\n        localStorage.setItem(environment.CRYPT_PASS, null);\n    }\n  }\n\n  isRemembered() {\n    const pseudoStorage = localStorage.getItem(environment.CRYPT_PSEUDO) ? localStorage.getItem(environment.CRYPT_PSEUDO) : null;\n    const passStorage = localStorage.getItem(environment.CRYPT_PASS) ? localStorage.getItem(environment.CRYPT_PASS) : null;\n\n    if (pseudoStorage && passStorage) {\n      this.pseudoStorage = this.encryptionService.decryptUsingAES256(pseudoStorage);\n      this.passStorage = this.encryptionService.decryptUsingAES256(passStorage);\n\n      this.pseudoStorage = this.pseudoStorage.replace(/['\"]+/g, '');\n      this.passStorage = this.passStorage.replace(/['\"]+/g, '');\n\n      this.loginForm.setValue({\n            pseudo: this.pseudoStorage,\n            password: this.passStorage\n      })\n    }\n\n    if (localStorage.getItem(\"checklog\") === \"true\")\n      $('#checker').prop('checked', true);\n    else\n      $('#checker').prop('checked', false);\n  }\n\n\n  async login(event) {\n    this.submitted = true;\n    event.preventDefault();\n    if (this.loginForm.invalid) {return false;}\n    this.loading = true;\n    let user: loginUser = this.loginForm.value;\n    await this.authService.loginClient(user).subscribe(\n      (res: any) => {\n          this.loading = false;\n          console.log(res);\n          if (res.error) {\n            this.errorAuth = res.message;\n          } else {\n            this.errorAuth = null;\n            if (res.access_token)\n              this.authService.saveToken(res.access_token, res.id).then(\n                () => {\n                  this.isRemember(user).then(\n                    () => {\n                      this.router.navigate(['/accueil/registered']);\n                    }\n                  );\n                }\n              );\n          }\n      },\n      (err: any) => {\n          this.loading = false;\n          console.log(err);\n      }\n    );\n\n    return true;\n}\n\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"XhEF\";","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Information } from '../../interfaces/model-information.interface';\nimport { Setting } from '../../interfaces/setting.interface';\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfilService {\n  endpoint = environment.endpoint\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getProfil(): Observable<any> {\n    return this.http.get(`${this.endpoint}/profile`, httpOptions)\n  }\n\n  getSpecificProfil(id: number): Observable<any> {\n    return this.http.get(`${this.endpoint}/profile/${id}`, httpOptions)\n  }\n\n  createProfil(id: number): Observable<any> {\n    return this.http.post(`${this.endpoint}/profile/create/${id}`,{id}, httpOptions)\n  }\n\n  updateProfil(profile: Information) {\n    return this.http.patch(`${this.endpoint}/profile/${profile.id}`, profile, httpOptions)\n  }\n\n  updateStatus(modelId: number, status: string) {\n    const data = {\n      status\n    }\n    return this.http.patch(`${this.endpoint}/profile/${modelId}`, data, httpOptions)\n  }\n\n  getInfo(): Observable<any> {\n    return this.http.get(`${this.endpoint}/setting/info`, httpOptions)\n  }\n\n  getSetting(): Observable<any> {\n    return this.http.get(`${this.endpoint}/setting`, httpOptions)\n  }\n\n  updateSetting(setting: Setting) {\n    return this.http.patch(`${this.endpoint}/setting/${setting.id}`, setting, httpOptions)\n  }\n\n  updateInfo(info: any) {\n    return this.http.patch(`${this.endpoint}/setting/model`, info, httpOptions)\n  }\n\n  createSetting(id: number): Observable<any> {\n    return this.http.post(`${this.endpoint}/setting/create/${id}`,{id}, httpOptions)\n  }\n\n  updatePhoto(formData: FormData): Observable<any> {\n    return this.http.post(`${this.endpoint}/upload/profile`, formData, {\n        reportProgress: true,\n        observe: 'events'\n    });\n  }\n\n  changePassword(data: any): Observable<any> {\n    return this.http.post(`${this.endpoint}/setting/password/`,data, httpOptions)\n  }\n\n  getCredential(): Observable<any> {\n    return this.http.get(`${this.endpoint}/profile/credential`, httpOptions)\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { GetModel } from '../../interfaces/get-model.interface';\n\ninterface model {\n  url: string,\n  name: string\n}\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModelService {\n  endpoint = environment.endpoint\n\n\n  live: model [] = [\n    {url: 'assets/images/image3.jpg', name: 'Roddy'},\n    {url: 'assets/images/image2.jpg', name: 'Monica'},\n    {url: 'assets/images/image.png', name: 'Angelina'},\n    {url: 'assets/images/image.png', name: 'Monica'},\n    {url: 'assets/images/image.png', name: 'Angelina'},\n    {url: 'assets/images/image.png', name: 'Angelina'},\n    {url: 'assets/images/image.png', name: 'Angelina'},\n    {url: 'assets/images/image.png', name: 'Angelina'},\n    {url: 'assets/images/image.png', name: 'Angelina'},\n    {url: 'assets/images/image.png', name: 'Angelina'}\n  ];\n\n  chat: model [] = [\n    {url: 'assets/images/image2.jpg', name: 'Monica'},\n    {url: 'assets/images/image2.jpg', name: 'Monica'},\n    {url: 'assets/images/image2.jpg', name: 'Angelina'},\n    {url: 'assets/images/image2.jpg', name: 'Angelina'},\n    {url: 'assets/images/image.png', name: 'Angelina'},\n    {url: 'assets/images/image2.jpg', name: 'Angelina'},\n    {url: 'assets/images/image.png', name: 'Angelina'},\n    {url: 'assets/images/image.png', name: 'Angelina'}\n  ];\n\n  offline: model [] = [\n    {url: 'assets/images/image3.jpg', name: 'Angelina'},\n    {url: 'assets/images/image3.jpg', name: 'Monica'},\n    {url: 'assets/images/image.png', name: 'Angelina'}\n  ];\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getTotalLive() {\n    return this.live.length;\n  }\n\n  getTotalChat() {\n    return this.chat.length;\n  }\n\n  getTotalOffline() {\n    return this.offline.length;\n  }\n\n  getModelProfil(context: string, debut: number, marge: number) {\n    var tmp = [];\n    switch (context) {\n      case 'live':\n      tmp = this.live.slice(debut, debut + marge);\n      break;\n\n      case 'chat':\n        tmp = this.chat.slice(debut, debut + marge);\n        break;\n\n      case 'offline':\n        tmp = this.offline.slice(debut, debut + marge);\n        break;\n\n      default:\n        break;\n    }\n    return tmp;\n  }\n\n  getAll(context: string) {\n    var tmp = [];\n    switch (context) {\n      case 'live':\n        tmp =  [...this.live];\n        break;\n\n      case 'chat':\n        tmp =  [...this.chat];\n        break;\n\n      case 'offline':\n        tmp =  [...this.offline];\n        break;\n\n      default:\n        break;\n    }\n    return tmp;\n  }\n\n  // return live, chat, offline\n  count(): Observable<any> {\n    return this.http.get(`${this.endpoint}/model/total`, httpOptions);\n  }\n\n  // return array Model\n  getList(data: GetModel): Observable<any> {\n    return this.http.post(`${this.endpoint}/model/list`, data, httpOptions)\n  }\n\n  getModel(id: number): Observable<any> {\n    return this.http.get(`${this.endpoint}/model/${id}`, httpOptions);\n  }\n\n  getInfo(): Observable<any> {\n    return this.http.get(`${this.endpoint}/model/info`, httpOptions);\n  }\n\n  getLive(): Observable<any> {\n    return this.http.get(`${this.endpoint}/model/live`, httpOptions);\n  }\n\n  getNoLive(): Observable<any> {\n    return this.http.get(`${this.endpoint}/model/nolive`, httpOptions);\n  }\n\n  forgot(email : string) : Observable<any>{\n    const options = {\n      email : email\n    }\n    return this.http.post(`${this.endpoint}/model/forgot`, options, httpOptions)\n  }\n\n  reinitPassword(userId: number, password: string) : Observable<any>{\n    const options = {\n      id : userId,\n      newPassword: password\n    }\n    return this.http.post(`${this.endpoint}/model/reinitPassword`, options, httpOptions)\n  }\n\n}\n","import { AuthService } from 'src/app/services/auth/auth.service';\r\nimport { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable, throwError } from \"rxjs\";\r\n\r\nimport { catchError, retry } from \"rxjs/operators\";\r\nimport { Router } from \"@angular/router\";\r\nimport { NotificationService } from '../notification/notification.service';\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor{\r\n\r\n    constructor(\r\n      private authService : AuthService,\r\n      public router : Router,\r\n      private notificationService: NotificationService){\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const token = this.authService.getToken()\r\n        let header = req.headers\r\n\r\n        if ( this.authService.isConnected )\r\n        {\r\n            req = req.clone({\r\n                setHeaders : {\r\n                    Authorization : 'Bearer '+ token\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(req)\r\n        .pipe(\r\n            retry(1),\r\n            catchError((error : HttpErrorResponse)=>{\r\n                // let errorMessage = '';\r\n\r\n                    if(error.error.statusCode == 400){\r\n                      this.notificationService.errorMsg(error.error.message);\r\n                    } else if(error.error.statusCode == 401){\r\n                      this.notificationService.errorMsg('Accès refusé');\r\n                    } else {\r\n                      this.notificationService.errorMsg(\"Erreur lors de la connexion au serveur\");\r\n                    }\r\n                //     if(error.status == 500){\r\n                //         // this.router.navigateByUrl(\"connexion\")\r\n                //         // this.dialogService.erreur('500');\r\n                //     }\r\n                //     if (error.error instanceof ErrorEvent) {\r\n                //         // client-side error\r\n                //         errorMessage = `Error: ${error.error.message}`;\r\n                //     }\r\n                    console.log('Erreur interceptor ', error.error);\r\n                    return throwError(error);\r\n            })\r\n        )\r\n\r\n    }\r\n\r\n}\r\n","import { AuthService } from './services/auth/auth.service';\nimport { NotificationService } from './services/notification/notification.service';\nimport { EncryptionService } from './services/encryption/encryption.service';\nimport { DisconnectedComponent } from './layouts/header/disconnected/disconnected.component';\nimport { ConnectedComponent } from './layouts/header/connected/connected.component';\nimport { HeaderComponent } from './layouts/header/header.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CUSTOM_ELEMENTS_SCHEMA, LOCALE_ID, NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { EnterComponent } from './components/client/enter/enter.component';\nimport { SignupComponent } from './components/client/signup/signup.component';\nimport { SigninComponent } from './components/client/signin/signin.component';\nimport { HeaderService } from './services/header/header.service';\nimport { DashboardComponent } from './components/modele/dashboard/dashboard.component';\nimport { ProfilComponent } from './components/client/profil/profil.component';\n\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { PasswordComponent } from './components/client/profil/password/password.component';\nimport { DeleteComponent } from './components/client/profil/delete/delete.component';\nimport { GainComponent } from './components/modele/dashboard/gain/gain.component';\nimport { InformationComponent } from './components/modele/dashboard/information/information.component';\nimport { SoldeComponent } from './components/modele/dashboard/solde/solde.component';\nimport { InscriptionModelComponent } from './components/modele/inscription-model/inscription-model.component';\n\nimport { AgChartsAngularModule } from 'ag-charts-angular';\nimport { ConnexionComponent } from './components/modele/dashboard/connexion/connexion.component';\nimport { SettingComponent } from './components/modele/dashboard/setting/setting.component';\nimport { PasswordModeleComponent } from './components/modele/dashboard/password-modele/password-modele.component';\nimport { ForgotPasswordComponent } from './modals/forgot-password/forgot-password.component';\n\nimport {NgxNotificationMsgModule} from 'ngx-notification-msg';\nimport { NotifierModule, NotifierOptions } from 'angular-notifier';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AlbumsComponent } from './components/modele/albums/albums.component';\nimport { ProfilModelComponent } from './components/modele/profil-model/profil-model.component';\nimport { AlbumService } from './services/album/album.service';\n\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { CreditComponent } from './components/modele/dashboard/credit/credit.component';\nimport { PackArgentComponent } from './components/modele/dashboard/credit/pack-argent/pack-argent.component';\nimport { PackBronzeComponent } from './components/modele/dashboard/credit/pack-bronze/pack-bronze.component';\nimport { PackBienvenueComponent } from './components/modele/dashboard/credit/pack-bienvenue/pack-bienvenue.component';\nimport { PackOrComponent } from './components/modele/dashboard/credit/pack-or/pack-or.component';\nimport { HomeClientComponent } from './components/home/home-connected/home-client.component';\nimport { ModelService } from './services/model/model.service';\nimport { HomeLiveComponent } from './components/home/home-disconnected/home-live.component';\nimport { LiveFreeComponent } from './components/live/live-free/live-free.component';\nimport { LivePrivateComponent } from './components/live/live-private/live-private.component';\nimport { LiveVipComponent } from './components/live/live-vip/live-vip.component';\n\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { LivePrivateCamComponent } from './components/live/live-private/live-private-cam/live-private-cam.component';\nimport { TopbarComponent } from './components/live/topbar/topbar.component';\nimport { LiveFreeChatComponent } from './components/live/live-free/live-free-chat/live-free-chat.component';\nimport { LiveVipStatComponent } from './components/live/live-vip/live-vip-stat/live-vip-stat.component';\nimport { OutComponent } from './components/client/out/out.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\n\nimport {NgxLocalStorageModule} from 'ngx-localstorage';\nimport { ScrolltopComponent } from './layouts/scrolltop/scrolltop.component';\nimport { BuyCreditComponent } from './components/client/buy-credit/buy-credit.component';\nimport { ConnectedModelComponent } from './layouts/header/connected-model/connected-model.component';\nimport { ConfirmLogoutComponent } from './modals/confirm-logout/confirm-logout/confirm-logout.component';\nimport { ConnexionModelComponent } from './components/modele/connexion-model/connexion-model.component';\nimport { AuthInterceptor } from './services/auth/auth.interceptor';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { PopupInfoComponent } from './modals/popup-info/popup-info.component';\nimport { PopupService } from './services/popup/popup.service';\nimport { SanitizePipe } from './pipes/sanitize/sanitize.pipe';\nimport { ProfilService } from './services/profil/profil.service';\nimport { LogService } from './services/log/log.service';\nimport { CreditService } from './services/credit/credit.service';\nimport { LiveChatModelComponent } from './components/modele/live-chat-model/live-chat-model.component';\nimport { RoomService } from './services/room/room.service';\nimport { ChatService } from './services/chat/chat.service';\n\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\nimport { LivePrivateModelComponent } from './components/modele/live-private-model/live-private-model.component';\nimport { LiveVipModelComponent } from './components/modele/live-vip-model/live-vip-model.component';\nimport { ClientService } from './services/client/client.service';\nimport { PackModalComponent } from './modals/pack-modal/pack-modal.component';\nimport { TimerService } from './services/timer/timer.service';\nimport { ConfirmEmailComponent } from './components/client/confirm-email/confirm-email.component';\nimport { SendForgotComponent } from './components/forgot/send-forgot/send-forgot.component';\nimport { NewPasswordComponent } from './components/forgot/new-password/new-password.component';\nimport { SendForgotModelComponent } from './components/forgot/send-forgot-model/send-forgot-model.component';\n\nimport { GalleryModule } from 'ng-gallery';\nimport { LightboxModule } from 'ng-gallery/lightbox';\nimport { PopupImageComponent } from './modals/popup-image/popup-image.component';\n\nimport { PickerModule } from '@ctrl/ngx-emoji-mart';\nimport { ReactivateAccountComponent } from './components/client/reactivate-account/reactivate-account.component';\n\nconst config: SocketIoConfig = {\n  // url: 'http://localhost:4000/',\n  url : 'https://143.198.109.141/api',\n  options: {\n\n  }\n};\n/**\n * Custom angular notifier options\n */\nconst customNotifierOptions: NotifierOptions = {\n  position: {\n\t\thorizontal: {\n\t\t\tposition: 'left',\n\t\t\tdistance: 12\n\t\t},\n\t\tvertical: {\n\t\t\tposition: 'bottom',\n\t\t\tdistance: 12,\n\t\t\tgap: 10\n\t\t}\n\t},\n  theme: 'material',\n  behaviour: {\n    autoHide: 5000,\n    onClick: 'hide',\n    onMouseover: 'pauseAutoHide',\n    showDismissButton: true,\n    stacking: 4\n  },\n  animations: {\n    enabled: true,\n    show: {\n      preset: 'slide',\n      speed: 300,\n      easing: 'ease'\n    },\n    hide: {\n      preset: 'fade',\n      speed: 300,\n      easing: 'ease',\n      offset: 50\n    },\n    shift: {\n      speed: 300,\n      easing: 'ease'\n    },\n    overlap: 150\n  }\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EnterComponent,\n    HeaderComponent,\n    ConnectedComponent,\n    DisconnectedComponent,\n    SignupComponent,\n    SigninComponent,\n    DashboardComponent,\n    ProfilComponent,\n    PasswordComponent,\n    DeleteComponent,\n    GainComponent,\n    InformationComponent,\n    SoldeComponent,\n    InscriptionModelComponent,\n    ConnexionComponent,\n    SettingComponent,\n    PasswordModeleComponent,\n    ForgotPasswordComponent,\n    AlbumsComponent,\n    ProfilModelComponent,\n    CreditComponent,\n    PackArgentComponent,\n    PackBronzeComponent,\n    PackBienvenueComponent,\n    PackOrComponent,\n    HomeClientComponent,\n    HomeLiveComponent,\n    LiveFreeComponent,\n    LivePrivateComponent,\n    LiveVipComponent,\n    LivePrivateCamComponent,\n    TopbarComponent,\n    LiveFreeChatComponent,\n    LiveVipStatComponent,\n    OutComponent,\n    PageNotFoundComponent,\n    ScrolltopComponent,\n    BuyCreditComponent,\n    ConnectedModelComponent,\n    ConfirmLogoutComponent,\n    ConnexionModelComponent,\n    PopupInfoComponent,\n    SanitizePipe,\n    LiveChatModelComponent,\n    LivePrivateModelComponent,\n    LiveVipModelComponent,\n    PackModalComponent,\n    ConfirmEmailComponent,\n    SendForgotComponent,\n    NewPasswordComponent,\n    SendForgotModelComponent,\n    PopupImageComponent,\n    ReactivateAccountComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule.withConfig({ warnOnNgModelWithFormControl: \"never\" }),\n    MatSlideToggleModule,\n    MatDialogModule,\n    MatTabsModule,\n    MatSnackBarModule,\n    AgChartsAngularModule,\n    NgxNotificationMsgModule,\n    NotifierModule.withConfig(customNotifierOptions),\n    HttpClientModule,\n    FileUploadModule,\n    SocketIoModule.forRoot(config),\n    NgxLocalStorageModule.forRoot(),\n    GalleryModule,\n    LightboxModule,\n    PickerModule\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA],\n  entryComponents: [\n    PasswordComponent,\n    DeleteComponent,\n    ConfirmLogoutComponent,\n    PopupInfoComponent,\n    PackModalComponent,\n    PopupImageComponent\n  ],\n  providers: [\n    HeaderService,\n    EncryptionService,\n    NotificationService,\n    AlbumService,\n    ModelService,\n    AuthService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n    { provide: LOCALE_ID, useValue: \"fr\" },\n    PopupService,\n    ProfilService,\n    LogService,\n    CreditService,\n    RoomService,\n    ChatService,\n    ClientService,\n    TimerService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { LocalStorageService } from 'ngx-localstorage';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n  endpoint = environment.endpoint\n\n  constructor(\n    private http: HttpClient,\n    private store: LocalStorageService\n  ) { }\n\n  getMyInfos(): Observable<any> {\n    return this.http.get(`${this.endpoint}/client`, httpOptions)\n  }\n\n  getClient(id: number): Observable<any> {\n    return this.http.get(`${this.endpoint}/client/${id}`, httpOptions)\n  }\n\n  getCredit(): Observable<any> {\n    return this.http.get(`${this.endpoint}/credit/client`, httpOptions)\n  }\n\n  forgot(email : string) : Observable<any>{\n    const options = {\n      email : email\n    }\n    return this.http.post(`${this.endpoint}/client/forgot`, options, httpOptions)\n  }\n\n  reinitPassword(userId: number, password: string) : Observable<any>{\n    const options = {\n      id : userId,\n      newPassword: password\n    }\n    return this.http.post(`${this.endpoint}/client/reinitPassword`, options, httpOptions)\n  }\n\n  lastRoom(linkRoom?: string) {\n    if (linkRoom === null) return this.store.remove('lastRoom');\n    if (linkRoom)\n      this.store.set(\"lastRoom\", linkRoom);\n    return this.store.get(\"lastRoom\");\n  }\n\n  changePseudo(pseudo: string) {\n    const data = {\n      pseudo\n    }\n    return this.http.post(`${this.endpoint}/client/changePseudo`, data, httpOptions)\n  }\n\n  changePassword(oldPassword: string, newPassword: string) {\n    const data = {\n      oldPassword,\n      newPassword\n    }\n    return this.http.post(`${this.endpoint}/client/changePassword`, data, httpOptions)\n  }\n\n  deleteAccount(password: string) {\n    const data = {\n      password\n    }\n    return this.http.post(`${this.endpoint}/client/deleteAccount`, data, httpOptions)\n  }\n\n  deactivateAccount(password: string) {\n    const data = {\n      password\n    }\n    return this.http.post(`${this.endpoint}/client/deactivateAccount`, data, httpOptions)\n  }\n\n  reactivateAccount() {\n    return this.http.post(`${this.endpoint}/client/reactivateAccount`, {}, httpOptions)\n  }\n\n  restoreAccount() {\n    return this.http.post(`${this.endpoint}/client/restoreAccount`, {}, httpOptions)\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n\n  constructor(private _sanitizer: DomSanitizer){}\n\n  transform(text: string) : SafeHtml {\n     return this._sanitizer.bypassSecurityTrustHtml(text);\n  }\n\n}\n","import { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { LocalStorageService } from 'ngx-localstorage';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoomPrivateService {\n  endpoint = environment.endpoint\n\n  constructor(\n    private http: HttpClient,\n    private store: LocalStorageService\n  ) { }\n\n  getColor(): Observable<any> {\n    return this.http.get(`${this.endpoint}/room-private/color`, httpOptions)\n  }\n\n  createRoom(): Observable<any> {\n    return this.http.post(`${this.endpoint}/room-private`,{}, httpOptions)\n  }\n\n  getRoomModel(id: number): Observable<any> {\n    return this.http.get(`${this.endpoint}/room-private/model/${id}`, httpOptions)\n  }\n\n  getInfo(id: number): Observable<any> {\n    return this.http.get(`${this.endpoint}/room-private/client/${id}`, httpOptions)\n  }\n\n  getActif(id: number): Observable<any> {\n    return this.http.get(`${this.endpoint}/room-private/${id}`, httpOptions)\n  }\n\n  joinRoom(idRoom: number) {\n    this.store.set(\"privateRoom\", idRoom);\n  }\n\n  joinedRoom(idRoom: number) {\n    const room = this.store.get(\"privateRoom\");\n    return room === idRoom;\n  }\n\n  leaveRoom() {\n    this.store.remove(\"privateRoom\");\n  }\n\n  updateActif(roomId: number, joined: boolean, type_room: string): Observable<any> {\n    const data = {\n      roomId,\n      joined,\n      type_room\n    }\n    // console.log(\"Update actif \", data);\n    return this.http.post(`${this.endpoint}/actif-room-private`, data, httpOptions)\n  }\n\n  getGain(modelId: number): Observable<any> {\n    return this.http.get(`${this.endpoint}/room-private/gain/${modelId}`, httpOptions)\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PopupInfoComponent } from '../../modals/popup-info/popup-info.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PopupService {\n\n  constructor(\n    private dialog: MatDialog\n  ) { }\n\n  info(action: string, title: string, message: string) {\n    this.dialog.open(PopupInfoComponent, {\n      width: '50vh',\n      data: {action, title, message}\n    });\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { SlideInOutAnimation } from 'src/app/animation';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ConfirmLogoutComponent } from 'src/app/modals/confirm-logout/confirm-logout/confirm-logout.component';\r\nimport { ClientService } from '../../../services/client/client.service';\r\nimport { NotificationService } from '../../../services/notification/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-connected',\r\n  templateUrl: './connected.component.html',\r\n  styleUrls: ['./connected.component.scss'],\r\n  animations: [SlideInOutAnimation]\r\n})\r\nexport class ConnectedComponent implements OnInit {\r\n  animationState = 'out';\r\n  chat = \"assets/icons/chat-comment.svg\";\r\n  settings = \"assets/icons/settings.svg\";\r\n\r\n  @Input()\r\n  actif: string;\r\n  active: number = 0;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private dialog: MatDialog,\r\n    private clientService: ClientService,\r\n    private notificationService: NotificationService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.actif) this.active = parseInt(this.actif);\r\n  }\r\n\r\n  toggleShowDiv(divName: string) {\r\n    if (divName === 'contain_connected') {\r\n      console.log(this.animationState);\r\n      this.animationState = this.animationState === 'out' ? 'in' : 'out';\r\n      console.log(this.animationState);\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    const dialogRef = this.dialog.open(ConfirmLogoutComponent, {\r\n      width: '50vh',\r\n      data: {action: 'client'}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {});\r\n  }\r\n\r\n  lastChat() {\r\n    const lastRoom = this.clientService.lastRoom();\r\n    if (!lastRoom) {\r\n      this.notificationService.infoMsg(\"Aucun récent Chat\");\r\n      return null;\r\n    }\r\n    // console.log(lastRoom);\r\n    this.router.navigateByUrl(lastRoom);\r\n  }\r\n}\r\n","\n<div class=\"bars\">\n  <img [src]=\"chat\" alt=\"\" class=\"icon\">\n  <img [src]=\"settings\" alt=\"\" class=\"icon\">\n  <i class=\"fa fa-bars\" (click)=\"toggleShowDiv('contain_connected')\"></i>\n</div>\n\n<div class=\"contain_connected\" [@slideInOut]=\"animationState\">\n  <div class=\"list one\" [ngClass]=\"{'active': active == 1}\" routerLink=\"/accueil/registered\">\n    Tous les modèles\n    <span></span>\n  </div>\n  <div class=\"list two\" routerLink=\"/achat_de_credit\" [ngClass]=\"{'active': active == 2}\">\n    Acheter des crédits\n    <span></span>\n  </div>\n  <div class=\"list three\" [ngClass]=\"{'active': active == 3}\" (click)=\"lastChat()\">\n    <img [src]=\"chat\" alt=\"\" class=\"icon\">\n    <span></span>\n  </div>\n  <div class=\"list four\" routerLink=\"/profile\" [ngClass]=\"{'active': active == 4}\">\n    <img [src]=\"settings\" alt=\"\" class=\"icon\">\n    <span></span>\n  </div>\n  <div class=\"list five\" (click)=\"logout()\" [ngClass]=\"{'active': active == 5}\">\n    Déconnexion\n    <span></span>\n  </div>\n</div>\n","import { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Chat } from '../../interfaces/chat.interface';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n  endpoint = environment.endpoint\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  postMessage(message: Chat): Observable<any> {\n    return this.http.post(`${this.endpoint}/chat`, message, httpOptions)\n  }\n\n  getMessage(idRoom: number, type_chat: string = 'free'): Observable<any> {\n    let room = idRoom;\n    if (room === null) room = 0;\n    return this.http.get(`${this.endpoint}/chat/${type_chat}/${room}`, httpOptions)\n  }\n}\n","import { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { LocalStorageService } from 'ngx-localstorage';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoomService {\n  endpoint = environment.endpoint\n\n  constructor(\n    private http: HttpClient,\n    private store: LocalStorageService\n  ) { }\n\n  getColor(): Observable<any> {\n    return this.http.get(`${this.endpoint}/room/color`, httpOptions)\n  }\n\n  createRoom(): Observable<any> {\n    return this.http.post(`${this.endpoint}/room`,{}, httpOptions)\n  }\n\n  getRoomModel(id: number): Observable<any> {\n    return this.http.get(`${this.endpoint}/room/model/${id}`, httpOptions)\n  }\n\n  getInfo(id: number): Observable<any> {\n    return this.http.get(`${this.endpoint}/room/client/${id}`, httpOptions)\n  }\n\n  async getActif(id: number): Promise<number> {\n    let actif = 0;\n    await this.http.get(`${this.endpoint}/room/${id}`, httpOptions).subscribe(\n      (data: any) => {\n        if (data.actif) {\n          actif =  data.actif\n        }\n      }\n    );\n    return actif;\n  }\n\n  joinRoom() {\n    this.store.set(\"freeRoom\", true);\n  }\n\n  joinedRoom() {\n    return this.store.get(\"freeRoom\") ? true : false;\n  }\n\n  leaveRoom() {\n    this.store.remove(\"freeRoom\");\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pack-bronze',\n  templateUrl: './pack-bronze.component.html',\n  styleUrls: ['./pack-bronze.component.scss']\n})\nexport class PackBronzeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>pack-bronze works!</p>\n","<app-header actif=\"3\"></app-header>\n\n\n<div class=\"contain_signup_one\">\n  <div class=\"inside_sign part_one\">\n    <h2>INSCRIPTION</h2>\n    <p>CLIENT</p>\n    <div class=\"blank\"></div>\n  </div>\n</div>\n\n<div class=\"contain_signup_two inside_sign\">\n  <h2 class=\"title\">\n    Créer un compte <br>\n    Inscription gratuite\n  </h2>\n\n  <div class=\"descr\">\n      ENTRER DANS L'AVENTURE <span class=\"under\"> BETWEEN<span class=\"under_bold\">US</span>.LIVE</span> <br>\n      Un site français, moderne et innovant. <br>\n      Une plateforme unique et 100% live. <br>\n      Nos valeurs: respect et écoute des modèles et des abonnées. <br>\n      Votre fidelité recompensée.\n  </div>\n\n  <form class=\"form\" [formGroup]=\"signForm\" novalidate autocomplete=\"off\">\n    <div class=\"form-group\">\n      <label for=\"pseudo\">Pseudo *</label>\n      <input type=\"text\" formControlName=\"pseudo\" name=\"pseudo\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.pseudo.errors\">\n        <small *ngIf=\"form.pseudo.errors.required\" class=\"form-text error-text\">Pseudo requis</small>\n      </div>\n      <div *ngIf=\"pseudoExist\">\n        <small class=\"form-text error-text\">Pseudo existe déjà</small>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"email\">Email *</label>\n      <input type=\"text\" formControlName=\"email\" name=\"email\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.email.errors\">\n        <small *ngIf=\"form.email.errors.required\" class=\"form-text error-text \">\n          Adresse email requis\n        </small>\n        <small *ngIf=\"form.email.errors.email\" class=\"form-text error-text \">\n          Format invalide\n        </small>\n      </div>\n      <div *ngIf=\"emailExist\">\n        <small class=\"form-text error-text \">\n          Email déjà utilisé\n        </small>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"password\">Mot de passe *</label>\n      <input type=\"password\" formControlName=\"password\" name=\"password\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.password.errors\">\n        <small *ngIf=\"form.password.errors.required\" class=\"form-text error-text\">\n          Mot de passe requis\n        </small>\n        <small *ngIf=\"form.password.errors.pattern\" class=\"form-text error-text\">\n          Au moins 8 caractères, lettre majuscule et  minuscule,\n          un chiffre et/ou un caractère spécial.\n        </small>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"passwordConfirm\">Confirmer mot de passe *</label>\n      <input type=\"password\" formControlName=\"passwordConfirm\" name=\"passwordConfirm\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.passwordConfirm.errors\">\n        <small *ngIf=\"form.passwordConfirm.errors.required\" class=\"form-text error-text \">\n          Confirmation mot de passe requis\n        </small>\n        <small *ngIf=\"form.passwordConfirm.errors.mustMatch\" class=\"form-text error-text \">\n          Mot de passe ne correspond pas\n        </small>\n      </div>\n    </div>\n\n    <!-- <div>\n      <small *ngIf=\"error !== null\" class=\"form-text error-text\">\n        {{error}}\n      </small>\n    </div> -->\n\n\n    <div class=\"notif\">\n      * Champ obligatoire\n    </div>\n\n    <div class=\"action\">\n      <button class=\"btn btn_signup lighter\" (click)=\"register($event)\">\n        <div class=\"loader\" *ngIf=\"loading\"></div>\n        <span *ngIf=\"!loading\"> S'INSCRIRE</span>\n      </button>\n    </div>\n  </form>\n\n\n</div>\n","import { AuthService } from './../../../services/auth/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PopupService } from '../../../services/popup/popup.service';\nimport { registerClient } from 'src/app/interfaces/register.interface';\nimport { CreditService } from '../../../services/credit/credit.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n  signForm : FormGroup;\n  submitted :boolean =  false;\n  loading: boolean = false;\n\n  error: string = null;\n  emailExist: boolean = false;\n  pseudoExist: boolean = false;\n\n  constructor(\n    private formBuilder : FormBuilder,\n    private authService: AuthService,\n    private popupService: PopupService,\n    private creditService: CreditService\n  ) {\n    this.signForm = this.formBuilder.group({\n      pseudo : ['', Validators.required],\n      email : ['',[Validators.required, Validators.email]],\n      // password : ['',[Validators.required, Validators.pattern(/^(?=\\D*\\d)(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z]).{8,}$/)]],\n      password : ['', Validators.required],\n      passwordConfirm: ['',Validators.required],\n    },{\n      validators : this.mustMatch('password','passwordConfirm'),\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  get form() {return this.signForm.controls}\n\n  mustMatch = (controlName : string, matchControlName : string) => {\n    return (formGroup: FormGroup) => {\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchControlName];\n\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n          return;\n      }\n      if (control.value !== matchingControl.value) {\n          matchingControl.setErrors({ mustMatch: true });\n      } else {\n          matchingControl.setErrors(null);\n      }\n  }\n  }\n\n  async register(event) {\n    this.pseudoExist = false;\n    this.emailExist = false;\n    this.error = null;\n    this.submitted = true;\n    event.preventDefault();\n\n    if(this.signForm.invalid){\n      return false;\n    }\n    this.loading = true;\n    let user: registerClient = this.signForm.value;\n    await this.authService.registerClient(user).subscribe(\n      (res: any) => {\n          // console.log(res);\n          if (res.error) {\n            this.error = res.message;\n            if (res.pseudo) this.pseudoExist = true;\n            if (res.email) this.emailExist = true;\n          } else {\n            this.creditService.createCreditClient(res.id).subscribe(\n              (data) => {\n                this.popupService.info('client','Félicitation',\n                `Un email de confirmation est envoyé à\n                <span style=\"font-style: italic; color: var(--pink)\">${res.email}</span>`);\n                this.signForm.reset();\n              }\n            )\n          }\n          this.loading = false;\n      },\n      (err: any) => {\n          this.loading = false;\n          console.log(err);\n      }\n    );\n    return true;\n  }\n\n}\n","<app-header actif=\"4\" connected=\"true\" model=\"true\"></app-header>\n\n<div class=\"main_live\">\n  <img [src]=\"dot\" alt=\"\" id=\"dots\" (click)=\"toggleDots()\">\n  <div class=\"contain_top\">\n    <div class=\"contain_left\">\n      <app-topbar context=\"Live Chat\" visible=\"false\" minuteur=\"false\" [actif]=\"info.actif\"></app-topbar>\n      <div class=\"show_live_left\" [ngStyle]=\"{'background-image': 'url(' + info.bg + ')'}\">\n      </div>\n    </div>\n    <div class=\"contain_right\">\n      <div class=\"show_live_right\">\n        <div class=\"header_chat\">\n          <p>&gt;</p>\n          <div>\n            Live Chat\n          </div>\n        </div>\n        <app-live-free-chat [modelId]=\"info.modelId\" [messages]=\"messages\" [profil]=\"info.bg\"></app-live-free-chat>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"contain_bottom\">\n    <div class=\"contain_left\">\n      <div class=\"contain_action contain_action_desktop\">\n        <div class=\"launch\">\n          <button class=\"btn_launch\" (click)=\"launchLive()\">\n            Lancer un live\n          </button>\n        </div>\n      </div>\n\n      <!-- // mobile -->\n      <div class=\"contain_action contain_action_mobile\" *ngIf=\"toggleDot\">\n        <div class=\"launch\">\n          <button class=\"btn_launch\" (click)=\"launchLive()\">\n            Lancer un live\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"contain_right\">\n      <div class=\"contain_message\">\n        <div class=\"contain_thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n        </div>\n        <form (ngSubmit)=\"sendMessage()\">\n          <div class=\"input_text\">\n              <input type=\"text\" name=\"message\" autocomplete=\"off\"\n              placeholder=\"Entrer votre message ici ...\" [(ngModel)]=\"info.message\">\n              <button type=\"submit\">\n                <div class=\"p\">\n                  <img [src]=\"send\" alt=\"\">\n                </div>\n              </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n\n</div>\n\n<!-- // -------- EMOJI ----------------- -->\n<!-- <input placeholder=\"Type a message. Hit Enter to send\"\ntype=\"text\" (blur)=\"onBlur()\" (focus)=\"onFocus()\"\nname=\"message\" [(ngModel)]=\"message\">\n<button (click) =\"toggleEmojiPicker()\"> 😀</button><br>\n\n<emoji-mart class=\"emoji-mart\" set=\"{{set}}\"\n*ngIf=\"showEmojiPicker\" (emojiSelect)=\"addEmoji($event)\"\ntitle=\"Pick your emoji…\"></emoji-mart> -->\n","import { Component, HostListener, Input, OnInit, OnDestroy } from '@angular/core';\r\nimport { NavigationExtras, Router, RouterStateSnapshot, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'ngx-localstorage';\r\nimport { ModelService } from '../../../services/model/model.service';\r\nimport { ProfilService } from '../../../services/profil/profil.service';\r\nimport { ChatService } from '../../../services/chat/chat.service';\r\nimport { Chat, ChatSocket } from 'src/app/interfaces/chat.interface';\r\nimport { RoomService } from '../../../services/room/room.service';\r\nimport { SocketService } from 'src/app/services/socket/socket.service';\r\nimport { RoomPrivateService } from '../../../services/roomPrivate/room-private.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-live-chat-model',\r\n  templateUrl: './live-chat-model.component.html',\r\n  styleUrls: ['./live-chat-model.component.scss', './../../live/live.scss']\r\n})\r\nexport class LiveChatModelComponent implements OnInit, OnDestroy {\r\n  context: string = \"FREE\";\r\n  imgPoster = \"assets/images/image.png\";\r\n  thrombone = \"assets/icons/paper-clip.svg\";\r\n  send = \"assets/icons/send-button.svg\";\r\n  dot = \"assets/icons/more_purple.svg\";\r\n  close = \"assets/icons/close.svg\";\r\n\r\n\r\n  info = {\r\n    bg : \"assets/images/image.png\",\r\n    message : '',\r\n    idRoom: 0,\r\n    pseudo: '',\r\n    chatColor:'#FB77FC',\r\n    modelId: 0,\r\n    actif: 0\r\n  }\r\n\r\n  messages: Chat[] = [];\r\n\r\n  toggleDot: boolean = false;\r\n\r\n  joinSub = new Subscription();\r\n  leaveSub = new Subscription();\r\n  messageSub = new Subscription();\r\n\r\n  // @HostListener(\"window:beforeunload\", [\"$event\"]) unloadHandler(event: Event) {\r\n  //   this.socketService.leave(this.info.idRoom, '');\r\n  // }\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private store: LocalStorageService,\r\n    private modelService: ModelService,\r\n    private chatService: ChatService,\r\n    private roomService: RoomService,\r\n    private roomPrivateService: RoomPrivateService,\r\n    private socketService: SocketService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getInfo();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    //Called once, before the instance is destroyed.\r\n    //Add 'implements OnDestroy' to the class.\r\n    this.joinSub.unsubscribe();\r\n    this.leaveSub.unsubscribe();\r\n    this.messageSub.unsubscribe();\r\n  }\r\n\r\n  initSocket() {\r\n    if (!this.roomService.joinedRoom()) {\r\n      this.roomService.joinRoom();\r\n      this.socketService.join(this.info.idRoom, this.info.modelId);\r\n    }\r\n\r\n    this.joinSub = this.socketService.listen(`joined ${this.info.idRoom}`).subscribe(\r\n      (data: any) => {\r\n        // console.log('joined ', data);\r\n        this.info.actif = data < 1 ? 0 : data - 1;\r\n      }\r\n    );\r\n\r\n    this.leaveSub = this.socketService.listen(`leaved ${this.info.idRoom}`).subscribe(\r\n      (data: any) => {\r\n        // console.log('leaved ', data);\r\n        this.info.actif = data < 1 ? 0 : data - 1;\r\n      }\r\n    );\r\n\r\n    this.messageSub = this.socketService.listen(`message ${this.info.idRoom}`).subscribe(\r\n      (data) => {\r\n        // console.log('Message from client ', data);\r\n        this.getMessages();\r\n      }\r\n    );\r\n  }\r\n\r\n  getInfo() {\r\n    this.modelService.getInfo().subscribe(\r\n      (data) => {\r\n        // console.log(data);\r\n        this.info.bg = data.path_soft;\r\n        this.info.modelId = data.id;\r\n        this.info.pseudo = data.pseudo;\r\n        this.getInfoRoom();\r\n      }\r\n    )\r\n  }\r\n\r\n  getInfoRoom() {\r\n    this.roomService.getRoomModel(this.info.modelId).subscribe(\r\n      (data) => {\r\n        // console.log('Model room ', data);\r\n        this.info.idRoom = data.idRoom;\r\n        this.info.actif = data.actif < 1 ? 0 : data.actif - 1;\r\n        this.getMessages();\r\n        this.initSocket();\r\n      }\r\n    )\r\n  }\r\n\r\n  toggleDots() {\r\n    this.toggleDot = !this.toggleDot;\r\n    // console.log(this.toggleDot);\r\n  }\r\n\r\n  sendMessage() {\r\n    const data: Chat = {\r\n      idRoom: this.info.idRoom,\r\n      message: this.info.message,\r\n      type_source: 'model',\r\n      id_source: this.info.modelId,\r\n      code_couleur: this.info.chatColor\r\n    }\r\n    this.chatService.postMessage(data).subscribe(\r\n      (data) => {\r\n        this.getMessages();\r\n        const msg: ChatSocket = {\r\n          room: this.info.idRoom + '',\r\n          role: 'model',\r\n          id: this.info.modelId,\r\n          message: this.info.message\r\n        }\r\n        this.socketService.sendMessage(msg);\r\n        this.info.message = null;\r\n      }\r\n    )\r\n  }\r\n\r\n  getMessages() {\r\n    this.chatService.getMessage(this.info.idRoom).subscribe(\r\n      (data) => {\r\n        // console.log(data);\r\n        this.messages = data;\r\n      }\r\n    )\r\n  }\r\n\r\n  async launchLive() {\r\n    // console.log('launch')\r\n    this.roomPrivateService.createRoom().subscribe(\r\n      async (data) => {\r\n        await this.askLeave().then(\r\n          (data) => {\r\n            this.store.set(\"privateRoomId\", data.room);\r\n            this.router.navigate(['/modele/live-private']);\r\n          }\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  async askLeave() {\r\n    const data = {\r\n      room: this.info.idRoom + '',\r\n      role: 'model',\r\n      id: this.info.modelId,\r\n      pseudo: this.info.pseudo,\r\n      message: 'I pass to private live'\r\n    }\r\n    return await this.socketService.emit('Pass to private', data);\r\n  }\r\n\r\n  // -------- EMOJI -----------------\r\n  // showEmojiPicker = false;\r\n  // sets = [\r\n  //   'native',\r\n  //   'google',\r\n  //   'twitter',\r\n  //   'facebook',\r\n  //   'emojione',\r\n  //   'apple',\r\n  //   'messenger'\r\n  // ]\r\n  // set = 'twitter';\r\n  // toggleEmojiPicker() {\r\n  //   console.log(this.showEmojiPicker);\r\n  //       this.showEmojiPicker = !this.showEmojiPicker;\r\n  // }\r\n\r\n  // addEmoji(event) {\r\n  //   console.log(this.message)\r\n  //   const { message } = this;\r\n  //   console.log(message);\r\n  //   console.log(`${event.emoji.native}`)\r\n  //   const text = `${message}${event.emoji.native}`;\r\n\r\n  //   this.message = text;\r\n  //   // this.showEmojiPicker = false;\r\n  // }\r\n\r\n  // onFocus() {\r\n  //   console.log('focus');\r\n  //   this.showEmojiPicker = false;\r\n  // }\r\n  // onBlur() {\r\n  //   console.log('onblur')\r\n  // }\r\n\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pack-argent',\n  templateUrl: './pack-argent.component.html',\n  styleUrls: ['./pack-argent.component.scss']\n})\nexport class PackArgentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>pack-argent works!</p>\n","import { Injectable } from '@angular/core';\nimport { addAlbum } from '../../interfaces/add-album.interface';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { SpecificAlbum } from '../../interfaces/specific-album.interface';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlbumService {\n  endpoint = environment.endpoint\n\n\n  public albumPrivate = [\n    'assets/images/image.png', 'assets/images/bg.jpg',\n    'assets/images/image.png', 'assets/images/image.png',\n    'assets/images/image.png', 'assets/images/image.png',\n    'assets/images/bg.jpg', 'assets/images/image.png',\n    'assets/images/image.png', 'assets/images/bg.jpg',\n    'assets/images/bg.jpg', 'assets/images/bg.jpg',\n    'assets/images/bg.jpg', 'assets/images/image.png',\n    'assets/images/bg.jpg', 'assets/images/image.png',\n    'assets/images/bg.jpg', 'assets/images/bg.jpg',\n    'assets/images/bg.jpg', 'assets/images/bg.jpg',\n    'assets/images/bg.jpg', 'assets/images/bg.jpg'\n  ];\n\n  public albumVIP = [\n    'assets/images/image2.jpg', 'assets/images/bg.jpg',\n    'assets/images/image2.jpg', 'assets/images/image.png',\n    'assets/images/image2.jpg', 'assets/images/image.png',\n    'assets/images/bg.jpg', 'assets/images/image.png',\n    'assets/images/image2.jpg', 'assets/images/image2.jpg',\n    'assets/images/bg.jpg', 'assets/images/bg.jpg',\n    'assets/images/bg.jpg', 'assets/images/image2.jpg',\n    'assets/images/bg.jpg', 'assets/images/image2.jpg',\n    'assets/images/bg.jpg', 'assets/images/bg.jpg',,\n    'assets/images/image2.jpg', 'assets/images/bg.jpg'\n  ];\n\n  public albumFree = [\n    'assets/images/image3.jpg', 'assets/images/image3.jpg',\n    'assets/images/image.png', 'assets/images/image.png',\n    'assets/images/bg.jpg', 'assets/images/image3.jpg',\n    'assets/images/image3.jpg', 'assets/images/bg.jpg',\n    'assets/images/bg.jpg', 'assets/images/bg.jpg',\n    'assets/images/bg.jpg', 'assets/images/image.png',\n    'assets/images/image3.jpg', 'assets/images/image.png',\n    'assets/images/bg.jpg', 'assets/images/bg.jpg',\n    'assets/images/image3.jpg', 'assets/images/bg.jpg'\n  ];\n\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  totalVip() {\n    return this.albumVIP.length;\n  }\n\n  totalFree() {\n    return this.albumFree.length;\n  }\n\n  totalPrivate() {\n    return this.albumPrivate.length;\n  }\n\n  async addPhoto(url: string, file: any, context: string) {\n    console.log(url);\n    console.log(context);\n    var tmp = [];\n    var tab: any;\n    tmp.push(url);\n    switch (context) {\n      case 'private':\n      for (let index = 0; index < this.albumPrivate.length; index++) {\n        tmp.push(this.albumPrivate[index]);\n      }\n      this.albumPrivate = tmp;\n      break;\n\n      case 'vip':\n        for (let index = 0; index < this.albumVIP.length; index++) {\n          tmp.push(this.albumVIP[index]);\n        }\n        this.albumVIP = tmp;\n        break;\n\n      case 'free':\n        for (let index = 0; index < this.albumFree.length; index++) {\n          tmp.push(this.albumFree[index]);\n        }\n        this.albumFree = tmp;\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  async getAlbums(context: string, debut: number, marge: number): Promise<Observable<any>> {\n    const album: SpecificAlbum = {\n      type_album: context,\n      begin: debut,\n      end: debut + marge\n    }\n    return this.http.post(`${this.endpoint}/album/specific`, album, httpOptions)\n  }\n\n  uploadAlbumModel(formData: FormData): Observable<any> {\n    return this.http.post(`${this.endpoint}/upload/album`,formData,{\n        reportProgress: true,\n        observe: 'events'\n    });\n  }\n\n  addAlbums(albums: addAlbum[]): Observable<any> {\n    return this.http.post(`${this.endpoint}/album`, albums, httpOptions)\n  }\n\n  getCount(): Observable<any> {\n    return this.http.get(`${this.endpoint}/album/model/count`, httpOptions)\n  }\n\n  // Get model albums by client\n  getModelAlbums(data: {modelId: number, type_album: string}) {\n    return this.http.post(`${this.endpoint}/album/getAlbums`, data, httpOptions)\n  }\n\n  deleteAlbum(id: number) {\n    return this.http.delete(`${this.endpoint}/album/${id}`, httpOptions)\n  }\n\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Pack } from 'src/app/interfaces/pack-credit.interface';\nimport { environment } from 'src/environments/environment';\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreditService {\n  endpoint = environment.endpoint;\n\n  public listPack = ['De Bienvenue', 'Bronze', 'Argent', 'Or'];\n\n  public packBienvenue: Pack[] = [\n    {credit: 30, cout: 0.18, montant: 5.25, affaire: false}\n  ];\n\n  public packBronze: Pack[] = [\n    {credit: 40, cout: 0.26, montant: 10.5, affaire: false},\n    {credit: 82, cout: 0.26, montant: 21, affaire: false},\n    {credit: 123, cout: 0.26, montant: 31.5, affaire: false},\n    {credit: 164, cout: 0.23, montant: 42, affaire: false},\n    {credit: 225, cout: 0.23, montant: 52.5, affaire: true},\n    {credit: 360, cout: 0.26, montant: 84 , affaire: false}\n  ];\n\n  public packArgent: Pack[] = [\n    {credit: 470, cout: 0.21, montant: 210, affaire: false},\n    {credit: 564, cout: 0.21, montant: 315, affaire: false},\n    {credit: 720, cout: 0.21, montant: 420, affaire: false},\n    {credit: 864, cout: 0.21, montant: 525, affaire: false},\n  ];\n\n  public packOr: Pack[] = [\n    {credit: 1000, cout: 0.21, montant: 210, affaire: false},\n    {credit: 1500, cout: 0.21, montant: 315, affaire: false},\n    {credit: 2000, cout: 0.21, montant: 420, affaire: false},\n    {credit: 2500, cout: 0.21, montant: 525, affaire: false},\n  ];\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getCredit(): Observable<any> {\n    return this.http.get(`${this.endpoint}/credit`, httpOptions)\n  }\n\n  createCredit(id: number): Observable<any> {\n    return this.http.post(`${this.endpoint}/credit/create/${id}`,{id}, httpOptions)\n  }\n\n  createCreditClient(id: number): Observable<any> {\n    return this.http.post(`${this.endpoint}/credit/create/client/${id}`,{id}, httpOptions)\n  }\n\n  updateCredit(id: number, credit: number) {\n    const data = {\n      credit\n    }\n    return this.http.patch(`${this.endpoint}/credit/${id}`, data, httpOptions)\n  }\n\n  buyCreditClient(montant: number, credit: number, creditId: number, clientId: number) {\n    const data = {\n      montant,\n      credit,\n      creditId,\n      clientId\n    }\n    return this.http.patch(`${this.endpoint}/credit/client`, data, httpOptions)\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {NgxNotificationDirection, NgxNotificationMsgService, NgxNotificationStatusMsg} from 'ngx-notification-msg'\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(\n    private _snackbar: MatSnackBar,\n    private readonly ngxNotificationMsgService: NgxNotificationMsgService) {\n    }\n\n  success (title: string, message: string) {\n    this.ngxNotificationMsgService.open({\n      status: NgxNotificationStatusMsg.SUCCESS,\n      header: title,\n      messages: [message],\n      displayIcon: true,\n      closeable: true,\n      direction: NgxNotificationDirection.TOP_RIGHT,\n      displayProgressBar: false,\n      delay: 2000\n    });\n  }\n\n  info (title: string, message: string) {\n    this.ngxNotificationMsgService.open({\n      status: NgxNotificationStatusMsg.INFO,\n      header: title,\n      messages: [message],\n      displayIcon: true,\n      closeable: true,\n      direction: NgxNotificationDirection.TOP_RIGHT,\n      displayProgressBar: false,\n      delay: 2000\n    });\n  }\n\n  failure (title: string, message: string) {\n    this.ngxNotificationMsgService.open({\n      status: NgxNotificationStatusMsg.FAILURE,\n      header: title,\n      messages: [message],\n      displayIcon: true,\n      closeable: true,\n      direction: NgxNotificationDirection.TOP_RIGHT,\n      displayProgressBar: false,\n      delay: 2000\n    });\n  }\n\n  simple (title: string, message: string) {\n    this.ngxNotificationMsgService.open({\n      status: NgxNotificationStatusMsg.NONE,\n      header: title,\n      messages: [message],\n      displayIcon: true,\n      closeable: true,\n      direction: NgxNotificationDirection.TOP_RIGHT,\n      displayProgressBar: false,\n      delay: 2000\n    });\n  }\n\n  errorMsg(message: string) {\n    this._snackbar.open(message, \"\", {\n      duration: 2000,\n      horizontalPosition: \"right\",\n      verticalPosition: \"bottom\",\n      panelClass: [\"erreur_snackar\"]\n  })\n  }\n\n  successMsg(message: string) {\n    this._snackbar.open(message, \"\", {\n      duration: 2000,\n      horizontalPosition: \"right\",\n      verticalPosition: \"bottom\",\n      panelClass: [\"success_snackar\"]\n  })\n  }\n\n  infoMsg(message: string) {\n    this._snackbar.open(message, \"\", {\n      duration: 2000,\n      horizontalPosition: \"right\",\n      verticalPosition: \"bottom\",\n      panelClass: [\"info_snackar\"]\n  })\n  }\n\n}\n","<app-header></app-header>\n\n<div class=\"contain_signin_one\">\n  <div class=\"inside_sign part_one\">\n    <h2>Bienvenue sur <span class=\"word_one\">BETWEEN</span><span class=\"word_two\">US</span></h2>\n  </div>\n</div>\n\n<div class=\"contain_signin_two inside_sign\">\n  <h2 class=\"title\">\n    Se connecter en tant que Modèle\n  </h2>\n\n  <div class=\"descr\">\n      Nous utilisons des cookies pour améliorer votre expérience\n      d'utilisateur. En poursuivant votre navigation, vous acceptez\n      l'utilisation de cookies, notamment de tiers. Politique relative aux cookies.\n  </div>\n\n  <form class=\"form\" [formGroup]=\"loginForm\" novalidate autocomplete=\"off\">\n    <div class=\"form-group\">\n      <label for=\"pseudo\">Pseudo</label>\n      <input type=\"text\" formControlName=\"pseudo\" name=\"pseudo\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.pseudo.errors\">\n        <small *ngIf=\"form.pseudo.errors.required\" class=\"form-text error-text\">Pseudo requis</small>\n      </div>\n    </div>\n\n\n    <div class=\"form-group\">\n      <label for=\"password\">Mot de passe</label>\n      <input type=\"password\" formControlName=\"password\" name=\"password\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.password.errors\">\n        <small *ngIf=\"form.password.errors.required\" class=\"form-text error-text\">\n          Mot de passe requis\n        </small>\n      </div>\n    </div>\n\n      <small *ngIf=\"errorAuth\" class=\"form-text error-text\">\n        Pseudo / Mot de passe incorrect\n      </small>\n\n    <div class=\"options\">\n      <div class=\"stay_connected\">\n        <input (change)=\"remember($event)\" type=\"checkbox\" id=\"checker\" class=\"regular-checkbox\">\n        <label for=\"checker\" class=\"label_check\">Rester connecté</label>\n      </div>\n      <div class=\"forgot\" routerLink=\"/modele/motdepasseoublie\">\n        Mot de passe oublié ?\n      </div>\n    </div>\n\n    <div class=\"action\">\n      <button class=\"btn btn_signin lighter\" (click)=\"login($event)\">\n        <div class=\"loader\" *ngIf=\"loading\"></div>\n        <span *ngIf=\"!loading\">CONNEXION</span>\n      </button>\n    </div>\n\n    <div class=\"register\">\n      Pas encore membre ? <span routerLink=\"/modele/inscription\">Inscrivez-vous</span>\n    </div>\n  </form>\n\n  <br><br><br>\n</div>\n","import { EncryptionService } from './../../../services/encryption/encryption.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport * as $ from 'jquery';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { loginUser } from 'src/app/interfaces/login.interface';\nimport { environment } from 'src/environments/environment';\nimport { LogService } from '../../../services/log/log.service';\nimport { Log } from '../../../interfaces/log.interface';\nimport { RoomService } from '../../../services/room/room.service';\nimport { LocalStorageService } from 'ngx-localstorage';\n\n@Component({\n  selector: 'app-connexion-model',\n  templateUrl: './connexion-model.component.html',\n  styleUrls: ['./connexion-model.component.scss']\n})\nexport class ConnexionModelComponent implements OnInit {\n  loginForm : FormGroup;\n\n  submitted :boolean =  false;\n  loading: boolean = false;\n\n  checked :boolean =  false;\n\n  pseudoStorage : string = null;\n  passStorage : string = null;\n  errorAuth  :boolean = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private encryptionService: EncryptionService,\n    private authService: AuthService,\n    private router: Router,\n    private logService: LogService,\n    private roomService: RoomService,\n    private store: LocalStorageService\n  ) {\n    this.loginForm = this.formBuilder.group({\n      pseudo: ['', Validators.required],\n      password: ['', Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n    this.isRemembered();\n  }\n\n  get form() { return this.loginForm.controls }\n\n  remember(value) {\n    if (value.target.checked) {\n        this.checked = true;\n        localStorage.setItem(\"checklogmod\", \"true\");\n    } else {\n        this.checked = false;\n        localStorage.setItem(\"checklogmod\", \"false\");\n    }\n  }\n\n  async isRemember(user: loginUser) {\n    if (this.checked) {\n        const pseudoCrypted = this.encryptionService.encryptUsingAES256(user.pseudo);\n        const passCrypted = this.encryptionService.encryptUsingAES256(user.password);\n        localStorage.setItem(environment.CRYPT_PSEUDO_MODEL, pseudoCrypted);\n        localStorage.setItem(environment.CRYPT_PASS_MODEL, passCrypted);\n    } else {\n        localStorage.setItem(environment.CRYPT_PSEUDO_MODEL, null);\n        localStorage.setItem(environment.CRYPT_PASS_MODEL, null);\n    }\n  }\n\n  isRemembered() {\n    const pseudoStorage = localStorage.getItem(environment.CRYPT_PSEUDO_MODEL) ? localStorage.getItem(environment.CRYPT_PSEUDO_MODEL) : null;\n    const passStorage = localStorage.getItem(environment.CRYPT_PASS_MODEL) ? localStorage.getItem(environment.CRYPT_PASS_MODEL) : null;\n\n    if (pseudoStorage && passStorage) {\n      this.pseudoStorage = this.encryptionService.decryptUsingAES256(pseudoStorage);\n      this.passStorage = this.encryptionService.decryptUsingAES256(passStorage);\n\n      this.pseudoStorage = this.pseudoStorage.replace(/['\"]+/g, '');\n      this.passStorage = this.passStorage.replace(/['\"]+/g, '');\n\n      this.loginForm.setValue({\n            pseudo: this.pseudoStorage,\n            password: this.passStorage\n      })\n    }\n\n    if (localStorage.getItem(\"checklogmod\") === \"true\")\n      $('#checker').prop('checked', true);\n    else\n      $('#checker').prop('checked', false);\n  }\n\n  async login(event) {\n    this.submitted = true;\n    event.preventDefault();\n    if (this.loginForm.invalid) {return false;}\n    this.loading = true;\n    let user: loginUser = this.loginForm.value;\n    await this.authService.loginModel(user).subscribe(\n      (res: any) => {\n          // console.log(res);\n          if (res.error) {\n            this.errorAuth = res.message;\n          } else {\n            this.errorAuth = null;\n            if (res.access_token)\n              this.authService.saveToken(res.access_token).then(\n                () => {\n                  this.logService.createLog(\"connection\").subscribe(\n                    (data) => {\n                      this.isRemember(user).then(\n                        () => {\n                          this.roomService.createRoom().subscribe(\n                            (data) => {\n                              this.store.set(\"room\", data.room);\n                              this.router.navigate(['/modele/profile']);\n                            }\n                          )\n                        }\n                      );\n                    }, (error) => {\n                      console.log(error);\n                    }\n                  );\n\n                }\n              );\n          }\n          this.loading = false;\n      },\n      (err: any) => {\n          this.loading = false;\n          console.log(err);\n      }\n    );\n\n    return true;\n  }\n\n  saveLog() {\n    this.logService.createLog(\"connection\").subscribe(\n      (data) => {\n        console.log('Log ', data)\n      }, (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AlbumService } from '../../services/album/album.service';\nimport { NotificationService } from '../../services/notification/notification.service';\n\n@Component({\n  selector: 'app-popup-image',\n  templateUrl: './popup-image.component.html',\n  styleUrls: ['./popup-image.component.scss']\n})\nexport class PopupImageComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: {id: number, url: string, type: string},\n    private albumService: AlbumService,\n    private notificationService: NotificationService,\n    public dialogRef: MatDialogRef<PopupImageComponent>\n    ) { }\n\n  ngOnInit(): void {\n  }\n\n  close() {\n    this.dialogRef.close('close');\n  }\n\n  delete(id: number) {\n    this.albumService.deleteAlbum(id).subscribe(\n      (data) => {\n        this.notificationService.info(\"Suppression\", \"Photo Supprimée\");\n        this.dialogRef.close('success');\n      }\n    )\n  }\n\n}\n","<div class=\"main_popup\">\n  <img [src]=\"data.url\" alt=\"\" class=\"img_popup\" *ngIf=\"data.url\">\n\n  <div class=\"bottom_action\">\n    <div class=\"bottom_btn\">\n      <button class=\"btn_delete btn\" (click)=\"delete(data.id)\">\n        Supprimer\n      </button>\n      <button class=\"btn btn_close\" (click)=\"close()\">\n        Fermer\n      </button>\n    </div>\n    <div class=\"bottom_title\">\n      Photo {{data.type}}\n    </div>\n  </div>\n  <!-- <div class=\"action\">\n    <button class=\"btn_delete btn\" (click)=\"delete(data.id)\">\n      Supprimer\n    </button>\n    <button class=\"btn btn_close\" (click)=\"close()\">\n      Fermer\n    </button>\n  </div> -->\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { LocalStorageService } from 'ngx-localstorage';\nimport { NotificationService } from '../../../services/notification/notification.service';\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n@Component({\n  selector: 'app-confirm-email',\n  templateUrl: './confirm-email.component.html',\n  styleUrls: ['./confirm-email.component.scss']\n})\nexport class ConfirmEmailComponent implements OnInit {\n  endpoint = environment.endpoint\n\n  token = null;\n  errorToken: boolean = false;\n  errorMessageToken: string = null;\n  successMessageToken: string = null;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private http: HttpClient,\n    private store: LocalStorageService,\n    private router: Router,\n    private notificationService: NotificationService\n    ) {\n    this.activatedRoute.queryParams.subscribe(params => {\n          this.token = params['token'];\n      });\n  }\n\n  ngOnInit(): void {\n    this.confirmToken();\n  }\n\n  confirmToken() {\n    if (!this.token) {\n      this.errorToken = true;\n      this.errorMessageToken = \"Token introuvable\"\n      return false;\n    }\n    this.store.set(\"token\", this.token);\n\n    // POST client/confirm\n    this.http.post(`${this.endpoint}/client/confirm`,{}, httpOptions).subscribe(\n      (data: {success: boolean, message: string}) => {\n        // console.log(\"Client token \", data);\n        if (!data.success) {\n          this.errorMessageToken = data.message;\n          this.errorToken = true;\n        } else {\n          this.errorToken = false;\n          this.successMessageToken = data.message;\n          this.notificationService.infoMsg(\"Votre compte est confirmé\");\n          this.router.navigate(['/connexion']);\n        }\n      }\n    )\n  }\n\n}\n","<div class=\"main\"></div>\n\n<div class=\"main_token\">\n  <div class=\"main_contain\">\n    <h3 class=\"titre\">Confirmation d'inscription</h3>\n    <p class=\"success message\" *ngIf=\"!errorToken\">\n      {{successMessageToken}}\n    </p>\n    <p class=\"error message\" *ngIf=\"errorToken\">\n      {{errorMessageToken}}\n    </p>\n  </div>\n</div>\n\n","<div class=\"contain_credit\">\n  <div class=\"info_credit\">\n    <div class=\"txt_credit\">\n      Vous avez actuellement : <span> {{solde}} Crédits </span>\n    </div>\n    <div class=\"recharge_credit\">\n      <div class=\"title_credit\">\n        Rechargez mes crédits\n      </div>\n      <div class=\"input_credit\">\n        <input type=\"text\" placeholder=\"Entrer ici votre code promo\">\n      </div>\n    </div>\n  </div>\n\n  <div class=\"contain_pack\">\n    <div class=\"choice_pack\">\n      <select id=\"select_choice\" (change)=\"select($event)\">\n        <option value=\"bienvenue\">PACK DE BIENVENUE</option>\n        <option value=\"bronze\">PACK BRONZE</option>\n        <option value=\"argent\">PACK ARGENT</option>\n        <option value=\"or\">PACK OR</option>\n      </select>\n    </div>\n\n    <div class=\"container-fluid contain_pack\">\n\n      <div class=\"pack_bienvenue\" *ngIf=\"currentPack === 'bienvenue'\">\n        <div class=\"row\">\n          <div class=\"col-lg-4 offset-lg-4 column\">\n            <div class=\"pack\">\n              <div class=\"pack_credit\">\n                <div>\n                  {{packBienvenue.credit}}\n                </div>\n                <p>\n                  CREDITS\n                </p>\n              </div>\n              <div class=\"pack_cout\">\n                Coût / Crédit\n                <p>\n                  {{packBienvenue.cout}}$\n                </p>\n              </div>\n              <div class=\"pack_button\">\n                <button class=\"btn btn_buy lighter\">\n                  Acheter\n                </button>\n              </div>\n              <div class=\"pack_montant\">\n                {{packBienvenue.montant}} $\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"pack_or\" *ngIf=\"currentPack === 'or'\">\n        <div class=\"row\">\n          <div class=\"col-lg-3 column\" *ngFor=\"let item of packOr\">\n            <div class=\"pack\">\n              <div class=\"pack_credit\">\n                <div>\n                  {{item.credit}}\n                </div>\n                <p>\n                  CREDITS\n                </p>\n              </div>\n              <div class=\"pack_cout\">\n                Coût / Crédit\n                <p>\n                  {{item.cout}}$\n                </p>\n              </div>\n              <div class=\"pack_button\">\n                <button class=\"btn btn_buy lighter\">\n                  Acheter\n                </button>\n              </div>\n              <div class=\"pack_montant\">\n                {{item.montant}} $\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"pack_argent\" *ngIf=\"currentPack === 'argent'\">\n        <div class=\"row\">\n          <div class=\"col-lg-3 column\" *ngFor=\"let item of packArgent\">\n            <div class=\"pack\">\n              <div class=\"pack_credit\">\n                <div>\n                  {{item.credit}}\n                </div>\n                <p>\n                  CREDITS\n                </p>\n              </div>\n              <div class=\"pack_cout\">\n                Coût / Crédit\n                <p>\n                  {{item.cout}}$\n                </p>\n              </div>\n              <div class=\"pack_button\">\n                <button class=\"btn btn_buy lighter\">\n                  Acheter\n                </button>\n              </div>\n              <div class=\"pack_montant\">\n                {{item.montant}} $\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"pack_bronze\" *ngIf=\"currentPack === 'bronze'\">\n        <div class=\"row\">\n          <div class=\"col-lg-4 column\" *ngFor=\"let item of packBronze\">\n            <div class=\"pack\" [ngClass]=\"{'bonAffaire': item.affaire}\">\n              <div class=\"txt_bon_affaire\" *ngIf=\"item.affaire\">\n                Pack la plus bonne affaire\n              </div>\n              <div class=\"pack_credit\">\n                <div>\n                  {{item.credit}}\n                </div>\n                <p>\n                  CREDITS\n                </p>\n              </div>\n              <div class=\"pack_cout\">\n                Coût / Crédit\n                <p>\n                  {{item.cout}}$\n                </p>\n              </div>\n              <div class=\"pack_button\">\n                <button class=\"btn btn_buy lighter\">\n                  Acheter\n                </button>\n              </div>\n              <div class=\"pack_montant\">\n                {{item.montant}} $\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport * as $ from 'jquery';\n\ninterface Pack {\n  credit: number,\n  cout: number,\n  montant: number,\n  affaire: boolean\n}\n\n@Component({\n  selector: 'app-credit',\n  templateUrl: './credit.component.html',\n  styleUrls: ['./credit.component.scss']\n})\nexport class CreditComponent implements OnInit {\n  solde = 500;\n\n  currentPack: string = 'bienvenue';\n\n  packBienvenue: Pack = {\n    credit:30, cout: 0.18, montant: 5.25, affaire: false\n  };\n\n  packBronze: Pack[] = [\n    {credit: 40, cout: 0.26, montant: 10.5, affaire: false},\n    {credit: 82, cout: 0.26, montant: 21, affaire: false},\n    {credit: 123, cout: 0.26, montant: 31.5, affaire: false},\n    {credit: 164, cout: 0.23, montant: 42, affaire: false},\n    {credit: 225, cout: 0.23, montant: 52.5, affaire: true},\n    {credit: 360, cout: 0.26, montant: 84 , affaire: false}\n  ];\n\n  packArgent: Pack[] = [\n    {credit: 470, cout: 0.21, montant: 210, affaire: false},\n    {credit: 564, cout: 0.21, montant: 315, affaire: false},\n    {credit: 720, cout: 0.21, montant: 420, affaire: false},\n    {credit: 864, cout: 0.21, montant: 525, affaire: false},\n  ];\n\n  packOr: Pack[] = [\n    {credit: 1000, cout: 0.21, montant: 210, affaire: false},\n    {credit: 1500, cout: 0.21, montant: 315, affaire: false},\n    {credit: 2000, cout: 0.21, montant: 420, affaire: false},\n    {credit: 2500, cout: 0.21, montant: 525, affaire: false},\n  ];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  select(event) {\n    console.log(event.target.value);\n    const value = event.target.value;\n    this.currentPack = value;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Log } from '../../interfaces/log.interface';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogService {\n  endpoint = environment.endpoint\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  createLog(description: string): Observable<any> {\n    const log: Log = {\n      type: 'model',\n      description: description\n    }\n    return this.http.post(`${this.endpoint}/log`, log, httpOptions)\n  }\n\n  getLogs(): Observable<any> {\n    return this.http.get(`${this.endpoint}/log/all`, httpOptions)\n  }\n}\n","import { Component, OnInit,\r\n  OnDestroy, PLATFORM_ID,\r\n  Inject, ViewChild,\r\n  ElementRef,\r\n  HostListener} from '@angular/core';\r\nimport {isPlatformBrowser} from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LocalStorageService } from 'ngx-localstorage';\r\nimport { Chat, ChatSocket, ClientCam } from 'src/app/interfaces/chat.interface';\r\nimport { ChatService } from 'src/app/services/chat/chat.service';\r\nimport { ModelService } from 'src/app/services/model/model.service';\r\nimport { SocketService } from 'src/app/services/socket/socket.service';\r\nimport { RoomPrivateService } from '../../../services/roomPrivate/room-private.service';\r\nimport { PopupService } from '../../../services/popup/popup.service';\r\nimport { ProfilService } from '../../../services/profil/profil.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { PackModalComponent } from '../../../modals/pack-modal/pack-modal.component';\r\nimport { TimerService } from '../../../services/timer/timer.service';\r\nimport { TypeTimer } from 'src/app/interfaces/timer.interface';\r\nimport { ClientService } from '../../../services/client/client.service';\r\nimport { NotificationService } from '../../../services/notification/notification.service';\r\nimport { CreditTimer } from '../../../interfaces/timer.interface';\r\nimport { RoomVipService } from '../../../services/roomVip/room-vip.service';\r\n\r\n// Peer\r\nimport './../../modele/shim';\r\nimport Peer from \"peerjs\"\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-live-private',\r\n  templateUrl: './live-private.component.html',\r\n  styleUrls: ['./live-private.component.scss', './../live.scss']\r\n})\r\nexport class LivePrivateComponent implements OnInit {\r\n  context: string = \"PRIVEE\";\r\n  imgPoster = \"assets/images/image.png\";\r\n  thrombone = \"assets/icons/paper-clip.svg\";\r\n  send = \"assets/icons/send-button.svg\";\r\n  dot = \"assets/icons/more_purple.svg\";\r\n  close = \"assets/icons/close.svg\";\r\n\r\n  toggleDot: boolean = false;\r\n\r\n  bg = \"assets/logos/dark-light.jpg\";\r\n  modelPseudo = '';\r\n  modelId: number;\r\n  idRoom: number;\r\n  actif: number;\r\n  message: string = '';\r\n  chatColor = \"black\";\r\n  clientId: number;\r\n  clientPseudo: string = null;\r\n  clientCredit: number  = 0.\r\n\r\n  messages: Chat[] = [];\r\n  leaved: boolean = false;\r\n\r\n  invitedVIP = false;\r\n  passedVIP = false;\r\n  roomVIP: string = null;\r\n\r\n  clients: ClientCam[] = [];\r\n\r\n  timer = {\r\n    id: 0,\r\n    hour: 0,\r\n    minute: 0,\r\n    second: 0,\r\n    fail: false,\r\n    reinit: false\r\n  };\r\n\r\n  show = {\r\n    id: 0,\r\n    credit: null,\r\n    second: null,\r\n    type: null\r\n  };\r\n\r\n  actifSub = new Subscription();\r\n  joinSub = new Subscription();\r\n  leaveSub = new Subscription();\r\n  messageSub = new Subscription();\r\n  modelLeaveSub = new Subscription();\r\n  modelPassedVipSub = new Subscription();\r\n  invitationVipSub = new Subscription();\r\n  peerSub = new Subscription();\r\n\r\n  // @HostListener(\"window:beforeunload\", [\"$event\"]) unloadHandler(event: Event) {\r\n  //   this.socketService.leavePrivate(this.idRoom, 'client');\r\n  // }\r\n\r\n    // WEB RTC VIDEO\r\n    @ViewChild('video_live_model', {static: true}) remote_video: ElementRef<HTMLVideoElement>;\r\n    @ViewChild('video_live_client', {static: true}) video: ElementRef<HTMLVideoElement>;\r\n\r\n    private peer: Peer;\r\n    peerIdShare: string;\r\n    peerId: string;\r\n    private lazyStream: any;\r\n    currentPeer: any;\r\n    private peerList: Array<any> = [];\r\n\r\n\r\n    constructor(\r\n    @Inject(PLATFORM_ID) private _platform: Object,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private modelService: ModelService,\r\n    private roomPrivateService: RoomPrivateService,\r\n    private store: LocalStorageService,\r\n    private chatService: ChatService,\r\n    private socketService: SocketService,\r\n    private popupService: PopupService,\r\n    private profilService: ProfilService,\r\n    private dialog: MatDialog,\r\n    private timerService: TimerService,\r\n    private clientService: ClientService,\r\n    private notificationService: NotificationService,\r\n    private roomVipService: RoomVipService\r\n    ) {\r\n      this.peer = new Peer();\r\n      const id = this.route.snapshot.paramMap.get('model');\r\n      this.modelId = parseInt(id);\r\n    }\r\n\r\n  ngOnInit(): void {\r\n      if (!this.modelId) return null;\r\n      this.getModel();\r\n      this.initColor();\r\n      this.clientService.lastRoom(this.router.url); // save last room for chat\r\n  }\r\n\r\n  async ngOnDestroy() {\r\n    (await this.creditTimer()).subscribe(\r\n      (data) => {\r\n        // console.log(\"Response credit timer \", data);\r\n      }\r\n    );\r\n\r\n    this.actifSub.unsubscribe();\r\n    this.joinSub.unsubscribe();\r\n    this.leaveSub.unsubscribe();\r\n    this.messageSub.unsubscribe();\r\n    this.modelLeaveSub.unsubscribe();\r\n    this.modelPassedVipSub.unsubscribe();\r\n    this.invitationVipSub.unsubscribe();\r\n    this.peerSub.unsubscribe();\r\n  }\r\n\r\n  getModel() {\r\n    this.modelService.getModel(this.modelId).subscribe(\r\n      (data) => {\r\n        // console.log(\"Le model \", data);\r\n        this.bg = data.path_soft;\r\n        this.modelPseudo = data.pseudo;\r\n        if (data.profile.status === \"En vip\") {\r\n          this.passedVIP = true;\r\n          this.clearTimer();\r\n          // return null;\r\n        } else if (data.profile.status === \"En ligne\") {\r\n          this.obsolete();\r\n          this.clearTimer();\r\n          // return null;\r\n        }\r\n        this.getInfo();\r\n      }\r\n    )\r\n  }\r\n\r\n  getInfo() {\r\n    this.clientService.getMyInfos().subscribe( // My info\r\n      (data) => {\r\n        // console.log(\"My info \", data)\r\n        this.clientId = data.id;\r\n        this.clientPseudo = data.pseudo;\r\n        this.clientCredit = data.credit ? data.credit.credit : 0; // Client Credit\r\n        this.getInfoRoom();\r\n      }\r\n    )\r\n  }\r\n\r\n  async getCredit() {\r\n    return await this.clientService.getCredit().subscribe(\r\n      (data) => {\r\n        this.clientCredit = data.credit;\r\n        // console.log('Client credit ', this.clientCredit);\r\n        if (this.show.credit < this.clientCredit) return null;\r\n        this.timer.fail = true;\r\n        // if Not leaved\r\n        if (!this.timer.reinit) {\r\n          this.notificationService.failure(\"CREDIT INSUFFISANT\", \"Veuillez vous recharger.\");\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  async getInfoRoom() {\r\n    await this.roomPrivateService.getRoomModel(this.modelId).subscribe(\r\n      async (data) => {\r\n        // console.log('Info room ', data);\r\n        this.idRoom = data.idRoom;\r\n\r\n        if (data.idRoom === null) {\r\n          this.obsolete();\r\n          this.idRoom = 0;\r\n          this.clearTimer();\r\n        }\r\n        this.getMessages();\r\n        // console.log(\"Before initSocket\");\r\n        this.initSocket()\r\n      }\r\n    )\r\n  }\r\n\r\n  async getActifs() {\r\n    await this.roomPrivateService.getActif(this.idRoom).subscribe(\r\n      (data) => {\r\n        // console.log(\"Get les actifs \", data);\r\n        this.actif = data.clients.length + 1; // +1 for the model\r\n        this.clients = data.clients;\r\n      }\r\n    )\r\n  }\r\n\r\n  getMessages() {\r\n    this.chatService.getMessage(this.idRoom, 'private').subscribe(\r\n      (data) => {\r\n        this.messages = data;\r\n      }\r\n    )\r\n  }\r\n\r\n  async initSocket() {\r\n\r\n    await this.socketService.joinPrivate(this.idRoom, this.modelId,\r\n      this.clientId, this.clientPseudo);\r\n\r\n    this.actifSub = await this.roomPrivateService.updateActif(this.idRoom, true, 'private').subscribe(\r\n      (data) => {\r\n        // console.log(\"Retour Update Actif in room Service \", data);\r\n        this.getActifs();\r\n      }\r\n    );\r\n\r\n    this.joinSub = this.socketService.listen(`joined ${this.idRoom}P`).subscribe(\r\n      (data: any) => {\r\n        // console.log('Joined ', data);\r\n        this.getActifs();\r\n      }\r\n    );\r\n\r\n    this.leaveSub = this.socketService.listen(`leaved ${this.idRoom}P`).subscribe(\r\n      (data: any) => {\r\n        // console.log('leaved ', data);\r\n        this.getActifs();\r\n      }\r\n    );\r\n\r\n    this.messageSub = this.socketService.listen(`message ${this.idRoom}P`).subscribe(\r\n      (data) => {\r\n        this.getMessages();\r\n      }\r\n    );\r\n\r\n    // Model leaved the room\r\n    this.modelLeaveSub = this.socketService.listen(`model leaved ${this.idRoom}P`).subscribe(\r\n      (data) => {\r\n        this.leaved = true;\r\n        this.actif--;\r\n        this.popupService.info('/accueil/registered','LIVE INDISPONIBLE',\r\n        `${this.modelPseudo} a fermé le live de ce room`);\r\n      }\r\n    );\r\n\r\n    // Model passed to VIP\r\n    this.modelPassedVipSub = this.socketService.listen(`Pass to VIP ${this.idRoom}P`).subscribe(\r\n      (data: any) => {\r\n        this.passedVIP = true;\r\n      }\r\n    );\r\n\r\n    // Invitation to pass in VIP\r\n    this.invitationVipSub = this.socketService.listen(`pass VIP ${this.clientId} ${this.idRoom}P`).subscribe(\r\n      (data: any) => {\r\n        this.invitedVIP = true;\r\n        this.invitationVIP();\r\n        this.roomVIP = data.roomVIP;\r\n        this.store.set(\"roomVIP\", this.roomVIP);\r\n      }\r\n    );\r\n\r\n    // Invitation to pass in VIP\r\n    this.peerSub = this.socketService.listen(`ans peerId ${this.clientId} ${this.idRoom}P`).subscribe(\r\n        (data: {peerId: any, room: string, clientId: number}) => {\r\n            console.log(\"ans peerId \", data);\r\n            this.peerIdShare = data.peerId;\r\n            this.connectWithPeer();\r\n      }\r\n    );\r\n\r\n    this.initTimer();\r\n    this.initLiveVideo();\r\n  }\r\n\r\n  obsolete() {\r\n    this.leaved = true;\r\n    this.popupService.info('/accueil/registered','LIVE INDISPONIBLE',\r\n    `Aucun live n\\'est lancé dans ce room`);\r\n  }\r\n\r\n  initColor() {\r\n    if (this.store.get(\"ticket_chat\")) {\r\n      this.chatColor = this.store.get(\"ticket_chat\");\r\n      return true;\r\n    };\r\n    this.roomPrivateService.getColor().subscribe(\r\n      (data) => {\r\n        this.chatColor = data.color;\r\n        this.store.set(\"ticket_chat\", data.color);\r\n      }\r\n    )\r\n  }\r\n\r\n  sendMessage() {\r\n    if (!this.message) return;\r\n    const data: Chat = {\r\n      idRoom: this.idRoom,\r\n      message: this.message,\r\n      type_source: 'client',\r\n      id_source: this.clientId,\r\n      code_couleur: this.chatColor,\r\n      type_chat: 'private'\r\n    }\r\n\r\n    this.chatService.postMessage(data).subscribe(\r\n      (data) => {\r\n        this.getMessages();\r\n        const msg: ChatSocket = {\r\n          room: this.idRoom + 'P',\r\n          role: 'client',\r\n          id: this.clientId,\r\n          message: this.message\r\n        }\r\n        this.socketService.sendMessage(msg);\r\n        this.message = null;\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  toggleDots() {\r\n    this.toggleDot = !this.toggleDot;\r\n  }\r\n\r\n  async liveVIP() {\r\n    return (await this.leaveTimer()).subscribe(\r\n      async (data) => {\r\n        this.timer.reinit = true;\r\n\r\n        (await this.creditTimer()).subscribe(\r\n          (data: { credit: number; id: number; updatedAt: Date; }) => {\r\n            this.clientCredit = data.credit ? data.credit : 0;\r\n            if (data.credit <= 0) {\r\n              this.aucunCredit();\r\n              return null;\r\n            } else if (data.credit <= (this.show.credit * 2)) {\r\n              this.creditInsuffisant();\r\n              return null;\r\n            }\r\n            this.profilService.getSpecificProfil(this.modelId).subscribe(\r\n              async (data) => {\r\n                if (data.status === \"En vip\" && this.getInfoRoomVIP()) {\r\n                  this.router.navigate(['/live/vip', { model: this.modelId }]);\r\n                } else {\r\n                  this.popupService.info(null, 'LIVE VIP INDISPONIBLE',\r\n                    `${this.modelPseudo} ne vous a pas invité en VIP.`);\r\n                }\r\n              }\r\n            );\r\n\r\n          })\r\n      }\r\n    );\r\n  }\r\n\r\n  async getInfoRoomVIP() {\r\n    return await this.roomVipService.getRoomModel(this.modelId).subscribe(\r\n      (data) => {\r\n        if (data.idRoom === null) {return false;}\r\n        if (this.clientId !== data.clientId) {return false;}\r\n        return true;\r\n      })\r\n  }\r\n\r\n  async liveOut() {\r\n    // this.creditTimer();\r\n    this.onStop();\r\n    await (await this.leaveTimer()).subscribe(\r\n      async (data) => {\r\n        this.timer.reinit = true;\r\n        await this.roomPrivateService.updateActif(this.idRoom, false, 'private').subscribe(\r\n          (data) => {\r\n            this.socketService.leavePrivate(this.idRoom, 'client').then(\r\n              (data) => {\r\n                this.roomPrivateService.leaveRoom();\r\n                this.router.navigate(['/accueil/registered']);\r\n              }\r\n            );\r\n          }\r\n        );\r\n      })\r\n  }\r\n\r\n  buy() {\r\n    const dialogRef = this.dialog.open(PackModalComponent, {\r\n      width: '80vh',\r\n      data: {}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {});\r\n  }\r\n\r\n  invitationVIP() {\r\n    this.popupService.info(null,'LIVE VIP',\r\n    `${this.modelPseudo} vous a invité en LIVE VIP. Veuillez passer en show VIP`);\r\n  }\r\n\r\n\r\n  // Timer\r\n  async initTimer() {\r\n    this.timerService.getTimer(this.modelId, TypeTimer.PRIVATE).subscribe(\r\n      async (data) => {\r\n        // console.log('Timer ', data);\r\n        const created: Date = data.createdAt;\r\n        const updated: Date = data.updatedAt;\r\n        this.timer.id = data.id;\r\n        // console.log(created.toString(), \" to \", updated.toString());\r\n        const {hour, minute, second} = this.timerService.convertTime(created.toString(), updated.toString());\r\n        this.timer.hour = hour;\r\n        this.timer.minute = minute;\r\n        this.timer.second = second;\r\n        // console.log(this.timer.hour, ':', this.timer.minute, ':', this.timer.second);\r\n        await this.getCostShow();\r\n      }\r\n    )\r\n  }\r\n\r\n  async getCostShow() {\r\n    return await this.timerService.getCostShow(TypeTimer.PRIVATE).subscribe(\r\n      (data: any) => {\r\n        this.show.id = data.id;\r\n        this.show.credit = data.credit;\r\n        this.show.second = data.second;\r\n        this.show.type = data.type;\r\n        // console.log('Show cost ' , this.show, \" - credit - \" , this.clientCredit);\r\n        if (this.clientCredit == 0) {\r\n          this.aucunCredit();\r\n          return null;\r\n        } else if (this.clientCredit <= (this.show.credit * 2)) {\r\n          this.creditInsuffisant();\r\n          return null;\r\n        }\r\n        this.beginTimer();\r\n      }\r\n    )\r\n  }\r\n\r\n  creditInsuffisant() {\r\n    this.popupService.info(null,'CREDIT INSUFFISANT',\r\n    `Vous n\\'avez presque plus de crédit. Veuillez vous recharger.`);\r\n    setTimeout(\r\n      () => {\r\n        this.getCredit();\r\n      }, 20000\r\n    )\r\n  }\r\n\r\n  aucunCredit() {\r\n    this.timer.fail = true;\r\n    this.popupService.info('/achat_de_credit','ACHAT DE CREDIT',\r\n    `Veuillez vous recharger.`);\r\n  }\r\n\r\n  // Timer set to 0\r\n  clearTimer() {\r\n    this.timer.reinit = true;\r\n  }\r\n\r\n  async leaveTimer(): Promise<Observable<any>> {\r\n    const data = {\r\n      id: this.timer.id,\r\n      type: TypeTimer.PRIVATE,\r\n      leaved: true,\r\n      push: new Date().toString()\r\n    }\r\n\r\n    return await this.timerService.updateTimer(data);\r\n  }\r\n\r\n  async beginTimer() {\r\n    const delay = this.show.second * 1000;\r\n    // console.log(delay, \" ms \");\r\n    await (await this.creditTimer()).subscribe( // launch main creditation\r\n      (data) => {\r\n        // console.log(\"Response credit timer \", data);\r\n        this.clientCredit = data.credit ? data.credit : 0;\r\n        if (data.credit <= 0) {\r\n          this.aucunCredit();\r\n          return null;\r\n        } else if (data.credit <= (this.show.credit * 2)) {\r\n          this.creditInsuffisant();\r\n          return null;\r\n        }\r\n      }\r\n    );\r\n    setInterval(\r\n      async () => {\r\n        if (!this.timer.reinit) {\r\n          await (await this.creditTimer()).subscribe(\r\n            (data) => {\r\n              // console.log(\"Response credit timer \", data);\r\n              this.clientCredit = data.credit ? data.credit : 0;\r\n              if (data.credit <= 0) {\r\n                this.aucunCredit();\r\n                return null;\r\n              } else if (data.credit <= (this.show.credit * 2)) {\r\n                this.creditInsuffisant();\r\n                return null;\r\n              }\r\n            }\r\n          );\r\n        }\r\n      }, delay\r\n    )\r\n  }\r\n\r\n  async creditTimer(): Promise<Observable<any>> {\r\n    if ((this.clientId === undefined) || (this.show.credit == null)) return null;\r\n    const data: CreditTimer = {\r\n      clientId: this.clientId,\r\n      modelId: this.modelId,\r\n      timerId: this.timer.id,\r\n      showCredit: this.show.credit,\r\n      showSecond: this.show.second,\r\n      showType: this.show.type,\r\n      roomId: this.idRoom\r\n    }\r\n    // console.log(\"credit timer post \", data);\r\n    return await this.timerService.creditTimer(data);\r\n  }\r\n\r\n    // WEB RTC - LIVE VIDEO\r\n    initLiveVideo() {\r\n      //this.onStart();\r\n      this.getPeerId();\r\n    }\r\n\r\n    onStart(){\r\n      if(isPlatformBrowser(this._platform) && 'mediaDevices' in navigator) {\r\n        navigator.mediaDevices.getUserMedia({video: true}).then((ms: MediaStream) => {\r\n          const _video = this.video.nativeElement;\r\n          _video.srcObject = ms;\r\n          _video.play();\r\n        });\r\n      }\r\n    }\r\n\r\n    onStop() {\r\n      if (this.video && this.video.nativeElement.srcObject) {\r\n        this.video.nativeElement.pause();\r\n        if ((this.video.nativeElement.srcObject as MediaStream).getVideoTracks()[0]) {\r\n          (this.video.nativeElement.srcObject as MediaStream).getVideoTracks()[0].stop();\r\n        }\r\n        this.video.nativeElement.srcObject = null;\r\n      }\r\n    }\r\n\r\n    private getPeerId = () => {\r\n      this.peer.on('open', (id) => {\r\n        console.log(\"Peer Id \", id);\r\n        this.peerId = id;\r\n        // Send peer client\r\n        this.socketService.askModelPeerId({peerId: this.peerId,\r\n          room: this.idRoom+'P', clientId: this.clientId})\r\n      });\r\n\r\n      this.peer.on('call', (call) => {\r\n        this.onStop();\r\n        navigator.mediaDevices.getUserMedia({\r\n          video: true,\r\n          audio: true\r\n        }).then((stream) => {\r\n          this.lazyStream = stream;\r\n          // const _video = this.video.nativeElement;\r\n          // _video.srcObject = stream;\r\n          // _video.play();\r\n\r\n          call.answer(stream);\r\n          call.on('stream', (remoteStream) => {\r\n            if (!this.peerList.includes(call.peer)) {\r\n              this.streamRemoteVideo(remoteStream);\r\n              this.currentPeer = call.peerConnection;\r\n              this.peerList.push(call.peer);\r\n            }\r\n          });\r\n        }).catch(err => {\r\n          console.log(err + ' - Unable to get media');\r\n        });\r\n      });\r\n    }\r\n\r\n    connectWithPeer(): void {\r\n      this.callPeer(this.peerIdShare);\r\n    }\r\n\r\n    private callPeer(id: string): void {\r\n      console.log(\"Client call model\");\r\n      navigator.mediaDevices.getUserMedia({\r\n        video: true,\r\n        audio: true\r\n      }).then((stream) => {\r\n        this.lazyStream = stream;\r\n        console.log(\"Get client stream \", stream);\r\n        const call = this.peer.call(id, stream);\r\n        console.log(\"After call model\");\r\n        call.on('stream', (remoteStream) => {\r\n          console.log(\"On stream in client\");\r\n          if (!this.peerList.includes(call.peer)) {\r\n            this.streamRemoteVideo(remoteStream);\r\n            this.currentPeer = call.peerConnection;\r\n            this.peerList.push(call.peer);\r\n          }\r\n        });\r\n      }).catch(err => {\r\n        console.log(err + 'Unable to connect');\r\n      });\r\n    }\r\n\r\n    private streamRemoteVideo(stream: any): void {\r\n      const _video = this.remote_video.nativeElement;\r\n      _video.srcObject = stream;\r\n      _video.play();\r\n      // const video = document.createElement('video');\r\n      // video.classList.add('video');\r\n      // video.srcObject = stream;\r\n      // video.play();\r\n      // document.getElementById('remote-video').append(video);\r\n    }\r\n\r\n\r\n}\r\n","<app-header connected=\"true\"></app-header>\n\n<div class=\"main_live\" [ngClass]=\"{'dry_up': timer.fail}\">\n  <img [src]=\"dot\" alt=\"\" id=\"dots\" (click)=\"toggleDots()\">\n  <div class=\"contain_top\">\n    <div class=\"contain_left\">\n      <app-topbar [context]=\"context\" [actif]=\"actif\"\n      [hour]=\"this.timer.hour\"\n      [minute]=\"this.timer.minute\"\n      [second]=\"this.timer.second\"\n      [reinit]=\"this.timer.reinit\"\n      [leaved]=\"leaved\"\n      ></app-topbar>\n      <div class=\"show_live_left\" [ngClass]=\"{'dry_up': leaved}\">\n\n        <video controls autoplay [poster]=\"bg\" id=\"video_live_model\" #video_live_model>\n        </video>\n\n        <div class=\"come_on\" *ngIf=\"passedVIP\">\n          {{modelPseudo}} est passée en VIP\n        </div>\n\n      </div>\n    </div>\n    <div class=\"contain_right\">\n      <div class=\"show_live_right\">\n        <mat-tab-group mat-align-tabs=\"center\">\n          <mat-tab label=\"Live Cam\">\n            <app-live-private-cam [clients]=\"clients\"></app-live-private-cam>\n          </mat-tab>\n          <mat-tab label=\"Live Chat\">\n            <app-live-free-chat [modelId]=\"modelId\" [messages]=\"messages\"\n            [pseudoModel]=\"modelPseudo\" [leaved]=\"leaved\" [profil]=\"bg\"></app-live-free-chat>\n              </mat-tab>\n        </mat-tab-group>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"contain_bottom\">\n    <div class=\"contain_left\">\n      <div class=\"contain_action contain_action_desktop\">\n        <div class=\"show_vip btn_show\">\n          <button class=\"btn btn_vip lighter\" (click)=\"liveVIP()\">Passer en show VIP</button>\n          <p>15 crédits / mn</p>\n        </div>\n        <div class=\"buy_credit btn_show\">\n          <button class=\"btn btn_buy lighter\" (click)=\"buy()\">Acheter des crédits</button>\n          <p>15 crédits / mn</p>\n        </div>\n        <div class=\"out_show btn_show\">\n          <button class=\"btn btn_out_show lighter\" (click)=\"liveOut()\">Sortir du Show</button>\n          <p>15 crédits / mn</p>\n        </div>\n      </div>\n\n      <!-- // mobile -->\n      <div class=\"contain_action contain_action_mobile\" *ngIf=\"toggleDot\">\n        <div class=\"show_vip btn_show\">\n          <button class=\"btn btn_vip lighter\" (click)=\"liveVIP()\">Passer en show VIP</button>\n          <p>15 crédits / mn</p>\n        </div>\n        <div class=\"buy_credit btn_show\">\n          <button class=\"btn btn_buy lighter\" (click)=\"buy()\">Acheter des crédits</button>\n          <!-- <p>15 crédits / mn</p> -->\n        </div>\n        <div class=\"out_show btn_show\">\n          <button class=\"btn btn_out_show lighter\" (click)=\"liveOut()\">Sortir du Show</button>\n          <!-- <p>15 crédits / mn</p> -->\n        </div>\n        <!-- <div class=\"contain_close\">\n          <img [src]=\"close\" alt=\"\" id=\"close\" (click)=\"toggleDots()\">\n        </div> -->\n      </div>\n\n    </div>\n    <div class=\"contain_right\">\n      <div class=\"contain_message\">\n        <div class=\"contain_thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n        </div>\n        <form (ngSubmit)=\"sendMessage()\">\n        <div class=\"input_text\">\n            <input type=\"text\" name=\"message\" autocomplete=\"off\"\n            placeholder=\"Entrer votre message ici ...\" [(ngModel)]=\"message\">\n            <button type=\"submit\">\n              <div class=\"p\">\n                <img [src]=\"send\" alt=\"\">\n              </div>\n            </button>\n        </div>\n      </form>\n      </div>\n    </div>\n  </div>\n\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-enter',\n  templateUrl: './enter.component.html',\n  styleUrls: ['./enter.component.scss']\n})\nexport class EnterComponent implements OnInit, OnDestroy {\n  logoDark = \"assets/logos/dark-light.jpg\";\n  alert = \"assets/icons/alert.png\";\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy() {  }\n\n}\n","<app-header clickable=\"false\"></app-header>\n\n<div class=\"main_enter\">\n  <div class=\"enter_img\">\n    <img [src]=\"logoDark\" alt=\"\">\n  </div>\n  <div class=\"enter_content\">\n    <div>\n      <img [src]=\"alert\" alt=\"\" class=\"img_alert\">\n    </div>\n    <div class=\"content content_one\">\n      SITE POUR ADULTE PLUS DE 18 ANS <br>\n      <span>VERIFICATION PAR CARTE BANCAIRE</span>\n    </div>\n\n    <div class=\"content\">\n        Betweenus contient du contenu reservé aux adultes\n        <br>\n        En utilisant ce site, vous reconnaissez avoir plus de 18 ans, avoir\n        lu notre Politique de Confidentialité et accepté nos Conditions\n        Générales.\n    </div>\n\n    <div class=\" content\">\n        Si vous êtes mineurs, veuillez quitter ce site en cliquant sur SORTIR ci-dessous.\n    </div>\n\n    <div class=\"content\">\n        En cliquant sur ENTRER, vous déclarez être majeur et adhérez au contrat\n        d'utilisation de ce site.\n    </div>\n\n    <div class=\"content\">\n        Nous utilisons des cookies pour améliorer votre expérience d'utilisateur.\n        En poursuivant votre navigation, vous acceptez l'utilisation de cookies, notamment de tiers.\n        Politique relative aux cookies.\n    </div>\n\n    <div class=\"enter_action\">\n      <button class=\"btn_out btn lighter\" routerLink=\"/bye\">\n        SORTIR\n      </button>\n      <button class=\"btn_in btn lighter\" routerLink=\"/accueil\">\n        ENTRER\n      </button>\n    </div>\n    <!-- <div class=\"contain_btn\">\n      <button class=\"btn btn_confirm\">\n        CONFIRMER\n      </button>\n    </div> -->\n  </div>\n\n  <!-- <div class=\"enter_action\">\n    <button class=\"btn_out btn lighter\">\n      SORTIR\n    </button>\n    <button class=\"btn_in btn lighter\">\n      ENTRER\n    </button>\n  </div> -->\n</div>\n","import { Component, Input, OnInit, OnDestroy, HostListener } from '@angular/core';\r\nimport { NavigationExtras, Router, RouterStateSnapshot, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { LocalStorageService } from 'ngx-localstorage';\r\nimport { ModelService } from '../../../services/model/model.service';\r\nimport { RoomService } from '../../../services/room/room.service';\r\nimport { ChatService } from '../../../services/chat/chat.service';\r\nimport { Chat } from 'src/app/interfaces/chat.interface';\r\nimport { SocketService, ChatSocket } from '../../../services/socket/socket.service';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { ProfilService } from '../../../services/profil/profil.service';\r\nimport { PopupService } from '../../../services/popup/popup.service';\r\nimport { ClientService } from '../../../services/client/client.service';\r\n\r\n@Component({\r\n  selector: 'app-live-free',\r\n  templateUrl: './live-free.component.html',\r\n  styleUrls: ['./live-free.component.scss', './../live.scss']\r\n})\r\nexport class LiveFreeComponent implements OnInit, OnDestroy {\r\n  context: string = \"FREE\";\r\n  imgPoster = \"assets/images/image.png\";\r\n  thrombone = \"assets/icons/paper-clip.svg\";\r\n  send = \"assets/icons/send-button.svg\";\r\n  dot = \"assets/icons/more_purple.svg\";\r\n  close = \"assets/icons/close.svg\";\r\n\r\n  bg = \"assets/logos/dark-light.jpg\";\r\n  modelPseudo = '';\r\n  modelId: number;\r\n  idRoom: number;\r\n  actif: number;\r\n  message: string = '';\r\n  chatColor = \"black\";\r\n  id: number;\r\n\r\n  toggleDot: boolean = false;\r\n  messages: Chat[] = [];\r\n  leaved: boolean = false;\r\n  passedToPrivate: boolean = false;\r\n\r\n  actifSub = new Subscription();\r\n  joinSub = new Subscription();\r\n  leaveSub = new Subscription();\r\n  messageSub = new Subscription();\r\n  modelPassedPrivateSub = new Subscription();\r\n  modelLeavedSub = new Subscription();\r\n\r\n\r\n  @HostListener(\"window:beforeunload\", [\"$event\"]) unloadHandler(event: Event) {\r\n    this.socketService.leave(this.idRoom, 'client');\r\n  }\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private modelService: ModelService,\r\n    private roomService: RoomService,\r\n    private store: LocalStorageService,\r\n    private chatService: ChatService,\r\n    private socketService: SocketService,\r\n    private profilService: ProfilService,\r\n    private popupService: PopupService,\r\n    private clientService: ClientService\r\n    ) {\r\n      const id = this.route.snapshot.paramMap.get('model');\r\n      this.modelId = parseInt(id);\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    if (!this.modelId) return null;\r\n    this.getModel();\r\n    this.getInfoRoom();\r\n    this.initColor();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.roomService.leaveRoom();\r\n    this.socketService.leave(this.idRoom, 'client');\r\n\r\n    this.actifSub.unsubscribe();\r\n    this.joinSub.unsubscribe();\r\n    this.leaveSub.unsubscribe();\r\n    this.messageSub.unsubscribe();\r\n    this.modelPassedPrivateSub.unsubscribe();\r\n    this.modelLeavedSub.unsubscribe();\r\n\r\n  }\r\n\r\n  initSocket() {\r\n    // if (!this.roomService.joinedRoom()) {\r\n    //   this.roomService.joinRoom();\r\n    //   this.socketService.join(this.idRoom, this.modelId);\r\n    // }\r\n    this.socketService.join(this.idRoom, this.modelId);\r\n    this.joinSub = this.socketService.listen(`joined ${this.idRoom}`).subscribe(\r\n      (data: any) => {\r\n        // console.log('Joined ', data);\r\n        this.actif = data < 0 ? 0 : data;\r\n        // console.log('Actif ', this.actif);\r\n      }\r\n    );\r\n\r\n    this.leaveSub = this.socketService.listen(`leaved ${this.idRoom}`).subscribe(\r\n      (data: any) => {\r\n        // console.log('leaved ', data);\r\n        this.actif = data < 0 ? 0 : data;\r\n        // console.log('Actif ', this.actif);\r\n      }\r\n    );\r\n\r\n    this.messageSub = this.socketService.listen(`message ${this.idRoom}`).subscribe(\r\n      (data) => {\r\n        // console.log('Msg to client ', data);\r\n        this.getMessages();\r\n      }\r\n    );\r\n\r\n    this.modelPassedPrivateSub = this.socketService.listen(`Pass to private ${this.idRoom}`).subscribe(\r\n      (data) => {\r\n        // console.log('Pass to private ', data);\r\n        this.passedToPrivate = true;\r\n      }\r\n    );\r\n\r\n    this.modelLeavedSub = this.socketService.listen(`model leaved ${this.idRoom}`).subscribe(\r\n      (data) => {\r\n        this.leaved = true;\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  getModel() {\r\n    this.modelService.getModel(this.modelId).subscribe(\r\n      (data) => {\r\n        if (!data) {\r\n          this.invalideRoom();\r\n          this.clientService.lastRoom(null);\r\n          setTimeout(\r\n            () => {\r\n              this.router.navigateByUrl('/accueil/registered');\r\n            }, 2000\r\n          )\r\n          return null;\r\n        }\r\n        // console.log('Model ', data);\r\n        this.bg = data.path_soft;\r\n        this.modelPseudo = data.pseudo;\r\n        if (data.profile.status === \"En live\") {\r\n          this.passedToPrivate = true;\r\n        } else if (data.profile.status === \"En vip\") {\r\n          this.popupService.info(null,'CHAT INDISPONIBLE',\r\n          `${this.modelPseudo} est en live VIP.`);\r\n        }\r\n        this.getInfo();\r\n      }\r\n    )\r\n  }\r\n\r\n  getInfo() {\r\n    const id: number = parseInt(this.store.get(\"identification//\"));\r\n    this.roomService.getInfo(id).subscribe(\r\n      (data) => {\r\n        this.id = data.id;\r\n      }\r\n    )\r\n  }\r\n\r\n  getInfoRoom() {\r\n    this.roomService.getRoomModel(this.modelId).subscribe(\r\n      (data) => {\r\n        if (!data) return null;\r\n        // console.log('Model room ', data);\r\n        this.idRoom = data.idRoom;\r\n        this.actif = data.actif;\r\n        this.clientService.lastRoom(this.router.url);\r\n        this.getMessages();\r\n        this.initSocket();\r\n      }\r\n    )\r\n  }\r\n\r\n  initColor() {\r\n    if (this.store.get(\"ticket_chat\")) {\r\n      this.chatColor = this.store.get(\"ticket_chat\");\r\n      return true;\r\n    };\r\n    this.roomService.getColor().subscribe(\r\n      (data) => {\r\n        this.chatColor = data.color;\r\n        this.store.set(\"ticket_chat\", data.color);\r\n      }\r\n    )\r\n  }\r\n\r\n  toggleDots() {\r\n    this.toggleDot = !this.toggleDot;\r\n    // console.log(this.toggleDot);\r\n  }\r\n\r\n  sendMessage() {\r\n    if (!this.message) return;\r\n    const data: Chat = {\r\n      idRoom: this.idRoom,\r\n      message: this.message,\r\n      type_source: 'client',\r\n      id_source: this.id,\r\n      code_couleur: this.chatColor\r\n    }\r\n    this.chatService.postMessage(data).subscribe(\r\n      (data) => {\r\n        this.getMessages();\r\n        const msg: ChatSocket = {\r\n          room: this.idRoom + '',\r\n          role: 'client',\r\n          id: this.id,\r\n          message: this.message\r\n        }\r\n        this.socketService.sendMessage(msg);\r\n        this.message = null;\r\n      }\r\n    )\r\n  }\r\n\r\n  getMessages() {\r\n      this.chatService.getMessage(this.idRoom).subscribe(\r\n        (data) => {\r\n          this.messages = data;\r\n          // console.log(this.messages);\r\n        }\r\n      )\r\n  }\r\n\r\n  livePrivate() {\r\n    this.profilService.getSpecificProfil(this.modelId).subscribe(\r\n      (data) => {\r\n        // console.log('To private ', data);\r\n        if (data.status === \"En live\") {\r\n          this.router.navigate(['/live/private', {model: this.modelId}]);\r\n        } else {\r\n          this.popupService.info(null,'LIVE INDISPONIBLE',\r\n          `${this.modelPseudo} n\\'a pas encore lancé le live.`);\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  liveVIP() {\r\n    this.profilService.getSpecificProfil(this.modelId).subscribe(\r\n      (data) => {\r\n        // console.log('To vip ', data);\r\n        if (data.status === \"En vip\") {\r\n          this.router.navigate(['/live/vip', {model: this.modelId}]);\r\n        } else {\r\n          this.popupService.info(null,'LIVE VIP INDISPONIBLE',\r\n          `${this.modelPseudo} n\\'a pas encore lancé le live en VIP.`);\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  liveOut() {\r\n    this.router.navigate(['/accueil/registered']);\r\n  }\r\n\r\n  buy() {\r\n    this.router.navigate(['/achat_de_credit']);\r\n  }\r\n\r\n  invalideRoom() {\r\n    this.popupService.info('/accueil/registered','CHAT INDISPONIBLE',\r\n    `Ce chat est indisponible.`);\r\n  }\r\n}\r\n\r\n","<app-header connected=\"true\"></app-header>\n\n\n<div class=\"main_live\">\n  <img [src]=\"dot\" alt=\"\" id=\"dots\" (click)=\"toggleDots()\">\n  <div class=\"contain_top\">\n    <div class=\"contain_left\">\n      <app-topbar [context]=\"context\" visible=\"false\" minuteur=\"false\" [actif]=\"actif\"></app-topbar>\n      <div class=\"show_live_left\">\n\n        <div class=\"bg_left\"\n        [ngStyle]=\"{'background-image': 'url(' + bg + ')'}\"\n        [ngClass]=\"{'pass_private': passedToPrivate ||leaved}\"></div>\n\n        <div class=\"come_on\" *ngIf=\"passedToPrivate\">\n          Venez me joindre en live privé\n        </div>\n\n      </div>\n    </div>\n    <div class=\"contain_right\">\n      <div class=\"show_live_right\">\n        <div class=\"header_chat\">\n          <p>&gt;</p>\n          <div>\n            Live Chat\n          </div>\n        </div>\n        <app-live-free-chat [modelId]=\"modelId\" [messages]=\"messages\"\n        [pseudoModel]=\"modelPseudo\" [leaved]=\"leaved\" [profil]=\"bg\"\n        [passedToPrivate]=\"passedToPrivate\"></app-live-free-chat>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"contain_bottom\">\n    <div class=\"contain_left\">\n      <div class=\"contain_action contain_action_desktop\">\n        <div class=\"show_private btn_show\">\n          <button class=\"btn btn_private lighter\" (click)=\"livePrivate()\">Passer en Privée</button>\n          <p>5 crédits / mn</p>\n        </div>\n        <div class=\"show_vip btn_show\">\n          <button class=\"btn btn_vip lighter\" (click)=\"liveVIP()\">Passer en show VIP</button>\n          <p>15 crédits / mn</p>\n        </div>\n        <div class=\"buy_credit btn_show\">\n          <button class=\"btn btn_buy lighter\" (click)=\"buy()\">Acheter des crédits</button>\n          <p>15 crédits / mn</p>\n        </div>\n      </div>\n\n      <!-- // mobile -->\n      <div class=\"contain_action contain_action_mobile\" *ngIf=\"toggleDot\">\n        <div class=\"show_private btn_show\">\n          <button class=\"btn btn_private lighter\" (click)=\"livePrivate()\">Passer en Privée</button>\n          <p>5 crédits / mn</p>\n        </div>\n        <div class=\"show_vip btn_show\">\n          <button class=\"btn btn_vip lighter\" (click)=\"liveVIP()\">Passer en show VIP</button>\n          <p>15 crédits / mn</p>\n        </div>\n        <div class=\"buy_credit btn_show\">\n          <button class=\"btn btn_buy lighter\" (click)=\"buy()\">Acheter des crédits</button>\n          <p>15 crédits / mn</p>\n        </div>\n        <!-- <div class=\"contain_close\">\n          <img [src]=\"close\" alt=\"\" id=\"close\" (click)=\"toggleDots()\">\n        </div> -->\n      </div>\n\n    </div>\n    <div class=\"contain_right\">\n      <div class=\"contain_message\">\n        <div class=\"contain_thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n        </div>\n        <form (ngSubmit)=\"sendMessage()\">\n        <div class=\"input_text\">\n            <input type=\"text\" name=\"message\" autocomplete=\"off\"\n            placeholder=\"Entrer votre message ici ...\" [(ngModel)]=\"message\">\n            <button type=\"submit\">\n              <div class=\"p\">\n                <img [src]=\"send\" alt=\"\">\n              </div>\n            </button>\n        </div>\n      </form>\n      </div>\n    </div>\n  </div>\n\n</div>\n","export enum context {\r\n  OFFLINE = 'Hors ligne',\r\n  INLINE = 'En ligne',\r\n  LIVE  = \"En live\"\r\n}\r\n\r\nexport interface GetModel {\r\n  context: context;\r\n  begin: number;\r\n  end: number;\r\n}\r\n","import { LiveVipModelComponent } from './components/modele/live-vip-model/live-vip-model.component';\nimport { InscriptionModelComponent } from './components/modele/inscription-model/inscription-model.component';\nimport { DashboardComponent } from './components/modele/dashboard/dashboard.component';\nimport { ProfilComponent } from './components/client/profil/profil.component';\nimport { SigninComponent } from './components/client/signin/signin.component';\nimport { SignupComponent } from './components/client/signup/signup.component';\nimport { EnterComponent } from './components/client/enter/enter.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AlbumsComponent } from './components/modele/albums/albums.component';\nimport { ProfilModelComponent } from './components/modele/profil-model/profil-model.component';\nimport { HomeClientComponent } from './components/home/home-connected/home-client.component';\nimport { HomeLiveComponent } from './components/home/home-disconnected/home-live.component';\nimport { LiveFreeComponent } from './components/live/live-free/live-free.component';\nimport { LivePrivateComponent } from './components/live/live-private/live-private.component';\nimport { LiveVipComponent } from './components/live/live-vip/live-vip.component';\nimport { OutComponent } from './components/client/out/out.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { BuyCreditComponent } from './components/client/buy-credit/buy-credit.component';\nimport { ConnexionModelComponent } from './components/modele/connexion-model/connexion-model.component';\nimport { LiveChatModelComponent } from './components/modele/live-chat-model/live-chat-model.component';\nimport { LivePrivateModelComponent } from './components/modele/live-private-model/live-private-model.component';\nimport { ConfirmEmailComponent } from './components/client/confirm-email/confirm-email.component';\nimport { SendForgotComponent } from './components/forgot/send-forgot/send-forgot.component';\nimport { NewPasswordComponent } from './components/forgot/new-password/new-password.component';\nimport { SendForgotModelComponent } from './components/forgot/send-forgot-model/send-forgot-model.component';\nimport { ReactivateAccountComponent } from './components/client/reactivate-account/reactivate-account.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EnterComponent\n  },\n  {\n    path: 'bye',\n    component: OutComponent\n  },\n  {\n    path: 'inscription',\n    component: SignupComponent\n  },\n  {\n    path: 'connexion',\n    component: SigninComponent\n  },\n  {\n    path: 'profile',\n    component: ProfilComponent\n  },\n  {\n    path: 'achat_de_credit',\n    component: BuyCreditComponent\n  },\n  {\n    path: 'client/register/confirm',\n    component: ConfirmEmailComponent\n  },\n  {\n    path: 'client/reactivation/account',\n    component: ReactivateAccountComponent\n  },\n  {\n    path: 'motdepasseoublie',\n    component: SendForgotComponent\n  },\n  {\n    path: 'reinitialisation',\n    component: NewPasswordComponent\n  },\n  {\n    path: 'modele/dashboard',\n    component: DashboardComponent\n  },\n  {\n    path: 'modele/motdepasseoublie',\n    component: SendForgotModelComponent\n  },\n  {\n    path: 'modele/connexion',\n    component: ConnexionModelComponent\n  },\n  {\n    path: 'modele/inscription',\n    component: InscriptionModelComponent\n  },\n  {\n    path: 'modele/albums',\n    component: AlbumsComponent\n  },\n  {\n    path: 'modele/profile',\n    component: ProfilModelComponent\n  },\n  {\n    path: 'modele/chat',\n    component: LiveChatModelComponent\n  },\n  {\n    path: 'modele/live-private',\n    component: LivePrivateModelComponent\n  },\n  {\n    path: 'modele/live-vip',\n    component: LiveVipModelComponent\n  },\n  {\n    path: 'accueil/registered',\n    component: HomeClientComponent\n  },\n  {\n    path: 'accueil',\n    component: HomeLiveComponent\n  },\n  {\n    path: 'live/free',\n    component: LiveFreeComponent\n  },\n  {\n    path: 'live/private',\n    component: LivePrivateComponent\n  },\n  {\n    path: 'live/vip',\n    component: LiveVipComponent\n  },\n  {path: '**', component: PageNotFoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { scrollPositionRestoration: 'enabled', relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { DeleteComponent } from './delete/delete.component';\r\nimport { PasswordComponent } from './password/password.component';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ClientService } from '../../../services/client/client.service';\r\nimport { PackModalComponent } from 'src/app/modals/pack-modal/pack-modal.component';\r\nimport { NotificationService } from '../../../services/notification/notification.service';\r\nimport { AuthService } from '../../../services/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-profil',\r\n  templateUrl: './profil.component.html',\r\n  styleUrls: ['./profil.component.scss']\r\n})\r\nexport class ProfilComponent implements OnInit {\r\n  credit: number = 500;\r\n  sound: boolean = false;\r\n  autoRecharge = false;\r\n  coinImg = \"assets/icons/coin-stack.svg\";\r\n  exclamation = \"assets/icons/exclamation-mark.svg\";\r\n  // Switch\r\n  color = \"#FB77FC\";\r\n  disabled = false;\r\n\r\n  // Modification information\r\n  isModifing = false;\r\n  showExclam = false;\r\n\r\n  // Information\r\n  email = \"ohatra@yahoo.fr\";\r\n  pseudo = \"Cactus\";\r\n\r\n  info = {\r\n    clientId: 0,\r\n    clientPseudo: null,\r\n    clientEmail: null,\r\n    clientCredit: 0,\r\n    clientCreditId: 0\r\n  }\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private clientService: ClientService,\r\n    private notificationService: NotificationService,\r\n    private authService: AuthService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getInfo();\r\n  }\r\n\r\n  getInfo() {\r\n    this.clientService.getMyInfos().subscribe(\r\n      (data) => {\r\n        // console.log(\"My info \", data);\r\n        if (!data) return null;\r\n        this.info.clientId = data.id;\r\n        this.info.clientPseudo = data.pseudo;\r\n        this.info.clientEmail = data.email;\r\n        this.info.clientCredit = data.credit.credit;\r\n        this.info.clientCreditId = data.credit.id;\r\n      }\r\n    )\r\n  }\r\n\r\n  recharge() {\r\n    const dialogRef = this.dialog.open(PackModalComponent, {\r\n      width: '100vh',\r\n      data: {}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getInfo();\r\n    });\r\n  }\r\n\r\n\r\n  changeSound() {\r\n    this.sound = !this.sound;\r\n    console.log(this.sound);\r\n  }\r\n\r\n  toogleRecharge(event) {\r\n    console.log(event.checked);\r\n    this.autoRecharge = event.checked;\r\n  }\r\n\r\n  modifing () {\r\n    if (this.isModifing) {\r\n      // console.log(\"New Pseudo \", this.info.clientPseudo);\r\n      const newPseudo = this.info.clientPseudo;\r\n      this.clientService.changePseudo(newPseudo).subscribe(\r\n        (data: any) => {\r\n          // console.log(data);\r\n          if (data.access_token) {\r\n            this.authService.saveToken(data.access_token, data.id).then(\r\n              () => {\r\n                this.notificationService.success(\"Pseudo modifié\", \"\");\r\n              }\r\n            );\r\n          }\r\n        }\r\n      )\r\n    }\r\n    this.isModifing = !this.isModifing;\r\n  }\r\n\r\n  tryChangeEmail() {\r\n    if (this.isModifing) {\r\n      this.showExclam = true;\r\n      setTimeout(() => {\r\n        this.showExclam = false;\r\n      }, 4000);\r\n    }\r\n  }\r\n\r\n  openDialogPassword() {\r\n    const dialogRef = this.dialog.open(PasswordComponent, {\r\n      width: '50vh'\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      // console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n\r\n  deleteAccount(action: string): void {\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      width: '50vh',\r\n      data: {action: action}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      // console.log('The dialog was closed');\r\n    });\r\n  }\r\n}\r\n","<app-header connected=\"true\" actif=\"4\"></app-header>\n\n<div class=\"main_profil\">\n\n  <!-- Credit parameter -->\n  <div class=\"profil profil_1\">\n    <div class=\"profil_header\">\n      Crédits et Payement\n    </div>\n    <div class=\"block_profil\">\n      <div class=\"block_credit content_parameter\">\n        <img [src]=\"coinImg\" alt=\"\" class=\"coinImg\">\n        <div>\n          {{info.clientCredit}} crédit<span *ngIf=\"info.clientCredit > 2\">s</span>\n        </div>\n      </div>\n\n      <div class=\"rechargement marge_paiement\">\n        <div class=\"recharge_content\">\n          <div class=\"recharge_text\">\n            Rechargement automatique\n          </div>\n          <div class=\"sound\" (click)=\"changeSound()\">\n            <i class=\"fa fa-circle\" [ngClass]=\"{'show': sound, 'unshow': !sound}\"></i>\n            <span [ngClass]=\"{'span': !sound}\">Activer</span>  /\n            <span [ngClass]=\"{'span': sound}\">Désactiver</span> les sons de notification\n          </div>\n        </div>\n        <div class=\"switch\">\n          <mat-slide-toggle\n          class=\"toogle\"\n          id=\"toggle\"\n          [color]=\"color\"\n          [checked]=\"autoRecharge\"\n          [disabled]=\"disabled\"\n          (change)=\"toogleRecharge($event)\">\n          </mat-slide-toggle>\n        </div>\n      </div>\n\n      <div class=\"content_btn marge_paiement\">\n        <button class=\"btn btn_recharge lighter\" (click)=\"recharge()\">\n          Recharger\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Information parameter -->\n  <div class=\"profil profil_2\">\n    <div class=\"profil_header\">\n      Informations personnelles\n    </div>\n    <div class=\"block_profil\">\n      <div class=\"content_parameter\">\n        <form action=\"\" class=\"form\">\n          <div class=\"form-group\" (click)=\"tryChangeEmail()\">\n            <label id=\"email\" for=\"email\">Adresse email\n              <img [src]=\"exclamation\" alt=\"\"\n              data-toggle=\"tooltip\" *ngIf=\"showExclam\"\n              data-placement=\"top\" title=\"Impossible à changer\">\n            </label>\n            <input autocomplete=\"off\" type=\"email\" [(ngModel)]=\"info.clientEmail\"\n            name=\"email\" disabled class=\"form-control input\"\n            style=\"opacity: 0.8;\">\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"pseudo\">Pseudo</label>\n            <input autocomplete=\"off\" type=\"text\" name=\"pseudo\"\n            class=\"form-control input\" [(ngModel)]=\"info.clientPseudo\"\n            [ngClass]=\"{'enable': isModifing, 'disable': !isModifing}\"\n            [disabled]=\"!isModifing\">\n          </div>\n        </form>\n      </div>\n\n      <div class=\"content_btn marge_paiement\">\n        <button class=\"btn btn_modif lighter\" (click)=\"modifing()\">\n          <span *ngIf=\"!isModifing\">Modifier</span>\n          <span *ngIf=\"isModifing\">Sauvegarder</span>\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Password parameter -->\n  <div class=\"profil profil_2\">\n    <div class=\"profil_header\">\n      Mot de passe\n    </div>\n    <div class=\"block_profil\">\n      <div class=\"content_btn marge_paiement\">\n        <button class=\"btn btn_password lighter\" (click)=\"openDialogPassword()\">\n          Changer\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Account parameter -->\n  <div class=\"profil profil_2\">\n    <div class=\"block_profil\">\n      <div class=\"content_parameter\">\n        <div class=\"btn_account btn_delete lighter\" (click)=\"deleteAccount('suppression')\">\n          Supprimer compte\n        </div>\n        <div class=\"btn_account btn_delete lighter\" (click)=\"deleteAccount('désactivation')\">\n          Désactiver compte\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n","<div class=\"contain_pass\">\n  <!-- <h2 mat-dialog-title>Confirmation</h2> -->\n  <mat-dialog-content>\n    <div class=\"content_text\">\n      <div class=\"img\">\n        <img [src]=\"exclamation\" alt=\"\" style=\"max-width: 100%;\">\n      </div>\n      <div class=\"text_warning\">\n        Confirmer la <span>{{action}}</span> de votre compte !\n      </div>\n    </div>\n    <form>\n      <label for=\"password\">\n        Mot de passe\n        <img [src]=\"exclamation\" alt=\"\" *ngIf=\"empty\" id=\"imgAlert\">\n      </label>\n      <input type=\"password\" name=\"password\" class=\"form-control input\" [(ngModel)]=\"password\">\n      <p class=\"error\" *ngIf=\"error\">Mot de passe incorrect</p>\n    </form>\n  </mat-dialog-content>\n\n  <mat-dialog-actions>\n    <button class=\"btn_cancel\" mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Annuler</button>\n    <button class=\"btn_valid\" (click)=\"validate()\">Confirmer</button>\n  </mat-dialog-actions>\n</div>\n\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { ClientService } from '../../../../services/client/client.service';\r\nimport { PopupService } from '../../../../services/popup/popup.service';\r\nimport { AuthService } from '../../../../services/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-delete',\r\n  templateUrl: './delete.component.html',\r\n  styleUrls: ['./delete.component.scss']\r\n})\r\nexport class DeleteComponent implements OnInit {\r\n  action: any;\r\n  exclamation = \"assets/icons/exclamation-mark.svg\";\r\n  password: string = \"\";\r\n  error: boolean = false;\r\n  empty: boolean = false;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    private clientService: ClientService,\r\n    private popupService: PopupService,\r\n    private authService: AuthService) {\r\n      this.action = data.action;\r\n    }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // console.log(this.action);\r\n  }\r\n\r\n  async validate(): Promise<void> {\r\n    this.empty = false;\r\n    this.error = false;\r\n    if (this.password == \"\") {\r\n        this.empty = true;\r\n        return null;\r\n    }\r\n    if (this.action === 'suppression') {\r\n      this.clientService.deleteAccount(this.password).subscribe(\r\n        (data: any) => {\r\n          // console.log(data);\r\n          if (data.error) {\r\n            this.error = true;\r\n          } else {\r\n            this.popupService.info('client','Suppression',\r\n            `Un email de confirmation vous est envoyé pour motif :\r\n            <span style=\"font-style: italic; color: var(--pink)\">Suppression de compte</span>`);\r\n            this.onNoClick();\r\n            this.authService.logoutUser('client', '/accueil');\r\n          }\r\n        }\r\n      )\r\n    } else if (this.action === 'désactivation') {\r\n      this.clientService.deactivateAccount(this.password).subscribe(\r\n        (data: any) => {\r\n          // console.log(data);\r\n          if (data.error) {\r\n            this.error = true;\r\n          } else {\r\n            this.popupService.info('client','Désactivation',\r\n            `Un email de confirmation vous est envoyé pour motif :\r\n            <span style=\"font-style: italic; color: var(--pink)\">Désactivation de compte</span>`);\r\n            this.onNoClick();\r\n            this.authService.logoutUser('client', '/accueil');\r\n          }\r\n        }\r\n      )\r\n    }\r\n  }\r\n}\r\n","<div class=\"main_topbar\">\n  <div class=\"top_left\">\n    <div class=\"context_live\">\n      {{context}}\n    </div>\n    <div class=\"minuteur\" *ngIf=\"!minuteur\">\n      <div class=\"minuteur_inside\">\n        <span *ngIf=\"hour > 0\"> <span *ngIf=\"hour < 10\">0</span>{{hour}} : </span>\n        <span *ngIf=\"minute < 10\">0</span>{{minute}} :\n        <span *ngIf=\"second < 10\">0</span>{{second}}\n      </div>\n    </div>\n    <div class=\"user\">\n      <img [src]=\"user\" alt=\"\">\n      <span>\n        <span *ngIf=\"actif < 10 && actif > 0\" class=\"span_zero\">0</span>\n        {{actif}}\n      </span>\n      <span *ngIf=\"actif === undefined\">0</span>\n    </div>\n  </div>\n  <div id=\"img_add\" (click)=\"toggleTools()\" *ngIf=\"!visible\">\n    <i class=\"fa fa-ellipsis-h\"></i>\n    <!-- <i class=\"fa fa-chevron-right\" *ngIf=\"!showTools\"></i>\n    <i class=\"fa fa-chevron-down\" *ngIf=\"showTools\"></i> -->\n  </div>\n\n  <!-- <div class=\"top_right top_right_desktop\" *ngIf=\"!visible\">\n    <div class=\"menu_right\" (click)=\"change('son')\">\n      <img [src]=\"volume\" alt=\"\" *ngIf=\"isSound\">\n      <img [src]=\"mute\" alt=\"\" *ngIf=\"!isSound\">\n      <span class=\"poptext\">Son</span>\n    </div>\n    <div class=\"menu_right\" (click)=\"change('video')\">\n      <img [src]=\"video\" alt=\"\" *ngIf=\"isVideo\">\n      <img [src]=\"noVideo\" alt=\"\" *ngIf=\"!isVideo\">\n      <span class=\"poptext\">Vidéo</span>\n    </div>\n    <div class=\"menu_right\" (click)=\"change('micro')\">\n      <img [src]=\"microOn\" alt=\"\" *ngIf=\"isMicro\">\n      <img [src]=\"microOff\" alt=\"\" *ngIf=\"!isMicro\">\n      <span class=\"poptext\">Micro</span>\n    </div>\n    <div class=\"menu_right\" (click)=\"change('strech')\">\n      <img [src]=\"strech\" alt=\"\">\n      <span class=\"poptext\">Agrandir</span>\n    </div>\n  </div> -->\n\n  <!-- <div class=\"top_right top_right_mobile\" *ngIf=\"showTools\">\n    <div class=\"menu_right\" (click)=\"change('son')\">\n      <img [src]=\"volume\" alt=\"\" *ngIf=\"isSound\">\n      <img [src]=\"mute\" alt=\"\" *ngIf=\"!isSound\">\n      <span class=\"poptext\">Son</span>\n    </div>\n    <div class=\"menu_right\" (click)=\"change('video')\">\n      <img [src]=\"video\" alt=\"\" *ngIf=\"isVideo\">\n      <img [src]=\"noVideo\" alt=\"\" *ngIf=\"!isVideo\">\n      <span class=\"poptext\">Vidéo</span>\n    </div>\n    <div class=\"menu_right\" (click)=\"change('micro')\">\n      <img [src]=\"microOn\" alt=\"\" *ngIf=\"isMicro\">\n      <img [src]=\"microOff\" alt=\"\" *ngIf=\"!isMicro\">\n      <span class=\"poptext\">Micro</span>\n    </div>\n    <div class=\"menu_right\" (click)=\"change('strech')\">\n      <img [src]=\"strech\" alt=\"\">\n      <span class=\"poptext\">Agrandir</span>\n    </div>\n  </div> -->\n\n</div>\n\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { PopupService } from '../../../services/popup/popup.service';\r\n\r\n@Component({\r\n  selector: 'app-topbar',\r\n  templateUrl: './topbar.component.html',\r\n  styleUrls: ['./topbar.component.scss']\r\n})\r\nexport class TopbarComponent implements OnInit {\r\n  @Input()\r\n  context: string;\r\n\r\n  @Input()\r\n  visible: boolean;\r\n\r\n  @Input()\r\n  minuteur: boolean;\r\n\r\n  @Input()\r\n  actif: number = 0;\r\n\r\n  @Input()\r\n  hour: number = 0;\r\n\r\n  @Input()\r\n  minute: number = 0;\r\n\r\n  @Input()\r\n  second: number = 0;\r\n\r\n  @Input()\r\n  reinit: boolean; // reinit to 0\r\n\r\n  @Input()\r\n  leaved: boolean; // Model Quitter\r\n\r\n  user = \"assets/icons/friends_soft.svg\";\r\n  strech = \"assets/icons/full-size.svg\";\r\n  microOn = \"assets/icons/microphone.svg\";\r\n  microOff = \"assets/icons/microphone-off.svg\";\r\n  mute = \"assets/icons/mute.svg\";\r\n  video = \"assets/icons/video-camera.svg\";\r\n  noVideo = \"assets/icons/no-video.svg\";\r\n  volume =\"assets/icons/volume.svg\";\r\n  soundOff = \"assets/icons/sound-off.svg\";\r\n  add = \"assets/icons/add.svg\";\r\n\r\n  isSound: boolean = true;\r\n  isVideo: boolean = true;\r\n  isStreched: boolean = true;\r\n  isMicro: boolean = true;\r\n\r\n  currentMinute: number = 0;\r\n  countUser: string = \"01\";\r\n\r\n  showTools = false;\r\n\r\n  constructor(\r\n    private popupService: PopupService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.startMinuteur();\r\n  }\r\n\r\n  change (material: string) {\r\n    switch (material) {\r\n      case 'son':\r\n        this.isSound = !this.isSound;\r\n        break;\r\n      case 'micro':\r\n        this.isMicro = !this.isMicro;\r\n        break;\r\n      case 'video':\r\n        this.isVideo = !this.isVideo;\r\n        break;\r\n      case 'strech':\r\n        this.isStreched = !this.isStreched;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  toggleTools() {\r\n    this.showTools = !this.showTools;\r\n  }\r\n\r\n  startMinuteur() {\r\n    setInterval(() => {\r\n      if (!this.leaved) {\r\n        if (!this.reinit) {\r\n          this.second++;\r\n          if (this.second > 59) {\r\n            this.second = 0;\r\n            this.minute++;\r\n            if (this.minute > 59) {\r\n              this.minute = 0;\r\n              this.hour++;\r\n            }\r\n          }\r\n        } else {\r\n          this.second = 0;\r\n          this.minute = 0;\r\n          this.hour = 0;\r\n        }\r\n      }\r\n    }, 1000);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pack-or',\n  templateUrl: './pack-or.component.html',\n  styleUrls: ['./pack-or.component.scss']\n})\nexport class PackOrComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>pack-or works!</p>\n","<app-header connected=\"true\" actif=\"1\"></app-header>\n\n<div class=\"main_home_client\">\n\n  <div class=\"section\">\n    <div class=\"bar_title\">\n      <div class=\"context\">\n        En live\n        <p class=\"btn_red\"></p>\n        <p class=\"count\"> ({{totalInLive}}) </p>\n      </div>\n      <div class=\"pagination\">\n        <ul style=\"list-style-type: none;\">\n          <li *ngFor=\"let item of paginationLive\"\n            (click)=\"initPhoto(LIVE, item)\"\n            [ngClass]=\"{'active': indiceLive == item}\">\n            {{item}}\n          </li>\n          <li class=\"dots\" (click)=\"prev(LIVE)\">&lt;&lt;</li>\n          <li class=\"next_link\" (click)=\"next(LIVE)\">>></li>\n        </ul>\n      </div>\n    </div>\n\n    <div class=\"profil_model\">\n          <div class=\"row_model\">\n            <p class=\"empty\" *ngIf=\"photoLive.length == 0\">\n              Aucun modèle n'est disponible pour le moment\n            </p>\n            <div class=\"col_model\" *ngFor=\"let item of photoLive; let i = index\">\n              <div class=\"profil\" (click)=\"livePrivate(item.id)\">\n                <img [src]=\"item.path_soft\" alt=\"\" class=\"img_section\">\n                <div class=\"live_profil\">\n                  LIVE\n                </div>\n                <div class=\"pseudo_profil\">\n                  <p class=\"btn_red\"></p>\n                  <p class=\"pseudo\">{{item.pseudo}}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n    </div>\n  </div>\n\n\n  <div class=\"section\">\n    <div class=\"bar_title\">\n      <div class=\"context\">\n        En Chat\n        <p class=\"count\"> ({{totalInChat}}) </p>\n      </div>\n      <div class=\"pagination\">\n        <ul style=\"list-style-type: none;\">\n          <li *ngFor=\"let item of paginationChat\"\n            (click)=\"initPhoto(INLINE, item)\"\n              [ngClass]=\"{'active': indiceChat == item}\">\n              {{item}}\n          </li>\n          <li class=\"dots\" (click)=\"prev(INLINE)\">&lt;&lt;</li>\n          <li class=\"next_link\" (click)=\"next(INLINE)\">>></li>\n        </ul>\n      </div>\n    </div>\n\n    <div class=\"profil_model\">\n      <div class=\"row_model\">\n        <p class=\"empty\" *ngIf=\"photoChat.length == 0\">\n          Aucun modèle n'est disponible pour le moment\n        </p>\n        <div class=\"col_model\" *ngFor=\"let item of photoChat; let i = index\">\n          <div class=\"profil\" (click)=\"liveFree(item.id)\">\n            <img [src]=\"item.path_soft\" alt=\"\" class=\"img_section\">\n            <div class=\"pseudo_profil\">\n              <p class=\"btn_chat\">\n                <i class=\"fa fa-comment\"></i>\n              </p>\n              <p class=\"pseudo\">{{item.pseudo}}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n  </div>\n\n  <div class=\"section offline\">\n    <div class=\"bar_title\">\n      <div class=\"context\">\n        Hors ligne\n        <p class=\"count\"> ({{totalOffline}}) </p>\n      </div>\n      <div class=\"pagination\">\n        <ul style=\"list-style-type: none;\">\n          <li *ngFor=\"let item of paginationChat\"\n            (click)=\"initPhoto(OFFLINE, item)\"\n            [ngClass]=\"{'active': indiceOffline == item}\">\n            {{item}}\n          </li>\n          <li class=\"dots\" (click)=\"prev(OFFLINE)\">&lt;&lt;</li>\n          <li class=\"next_link\" (click)=\"next(OFFLINE)\">>></li>\n        </ul>\n      </div>\n    </div>\n\n    <div class=\"profil_model\">\n      <div class=\"row_model\">\n        <p class=\"empty\" *ngIf=\"photoOffline.length == 0\">\n          Aucun modèle n'est disponible pour le moment\n        </p>\n        <div class=\"col_model\" *ngFor=\"let item of photoOffline; let i = index\">\n          <div class=\"profil\">\n            <img [src]=\"item.path_soft\" alt=\"\" class=\"img_section\">\n            <div class=\"pseudo_profil\">\n              <p class=\"btn_white\"></p>\n              <p class=\"pseudo\">{{item.pseudo}}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { ModelService } from '../../../services/model/model.service';\r\nimport { Router } from '@angular/router';\r\nimport { context } from 'src/app/interfaces/get-model.interface';\r\nimport { GetModel } from '../../../interfaces/get-model.interface';\r\n\r\n@Component({\r\n  selector: 'app-home-client',\r\n  templateUrl: './home-client.component.html',\r\n  styleUrls: ['./home-client.component.scss']\r\n})\r\nexport class HomeClientComponent implements OnInit {\r\n  image = \"assets/images/image.png\";\r\n  section: number = 8;\r\n\r\n  totalInLive: number = 0;\r\n  paginationLive: number[] = [];\r\n  photoLive: string[] = [];\r\n  indiceLive: number = 1;\r\n\r\n  totalInChat: number = 0;\r\n  paginationChat: number[] = [];\r\n  photoChat: string[] = [];\r\n  indiceChat: number = 1;\r\n\r\n  totalOffline: number = 0;\r\n  paginationOffline: number[] = [];\r\n  photoOffline: string[] = [];\r\n  indiceOffline: number = 1;\r\n\r\n  // count = [0, 1, 2, 3, 4, 5, 6, 7];\r\n\r\n  OFFLINE = 'Hors ligne';\r\n  INLINE = 'En ligne';\r\n  LIVE  = \"En live\";\r\n\r\n  constructor(\r\n    private modelSrv: ModelService,\r\n    private router: Router) {\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.init();\r\n  }\r\n\r\n\r\n  init() {\r\n    this.getTotal().then(\r\n      (data) => {\r\n        this.initPagination();\r\n      }\r\n    );\r\n  }\r\n\r\n  async getTotal() {\r\n    await this.modelSrv.count().subscribe(\r\n      (data) => {\r\n        // console.log(data);\r\n        this.totalOffline = data.offline;\r\n        this.totalInChat = data.chat;\r\n        this.totalInLive = data.live;\r\n      }\r\n    )\r\n  }\r\n\r\n  initPagination() {\r\n    var margeLive = Math.ceil((this.totalInLive / this.section) - 0.1);\r\n    var margeChat = Math.ceil((this.totalInChat / this.section) - 0.1);\r\n    var margeOffline = Math.ceil((this.totalOffline / this.section) - 0.1);\r\n\r\n    margeLive = margeLive < 1 ? 1 : margeLive;\r\n    margeChat = margeChat < 1 ? 1 : margeChat;\r\n    margeOffline = margeOffline < 1 ? 1 : margeOffline;\r\n\r\n    for (let index = 1; index <= margeLive; index++) this.paginationLive.push(index);\r\n    for (let index = 1; index <= margeChat; index++) this.paginationChat.push(index);\r\n    for (let index = 1; index <= margeOffline; index++) this.paginationOffline.push(index);\r\n    this.initPhoto(context.LIVE, 1);\r\n    this.initPhoto(context.INLINE, 1);\r\n    this.initPhoto(context.OFFLINE, 1);\r\n  }\r\n\r\n  async initPhoto(contxt: any, indice: number) {\r\n    var debut = indice - 1;\r\n    debut = debut * this.section;\r\n\r\n    const model: GetModel = {\r\n      context: contxt,\r\n      begin: debut,\r\n      end: debut + this.section\r\n    }\r\n\r\n    switch (contxt) {\r\n      case context.LIVE :\r\n        if (debut > this.totalInLive) {this.indiceLive--; return null;}\r\n        this.indiceLive = indice;\r\n        await this.modelSrv.getList(model).subscribe(\r\n          (data) => {\r\n            // console.log(data);\r\n            this.photoLive = data;\r\n          }\r\n        );\r\n        break;\r\n\r\n      case context.INLINE :\r\n        if (debut > this.totalInChat) {this.indiceChat--; return null;}\r\n        this.indiceChat= indice;\r\n        await this.modelSrv.getList(model).subscribe(\r\n            (data) => {\r\n              // console.log('In chat ', data);\r\n              this.photoChat = data;\r\n            }, (error) => {\r\n              console.log(error)\r\n            }\r\n          );\r\n        break;\r\n\r\n      case context.OFFLINE :\r\n        if (debut > this.totalOffline) {this.indiceOffline--; return null;}\r\n        this.indiceOffline= indice;\r\n        await this.modelSrv.getList(model).subscribe(\r\n          (data) => {\r\n            // console.log(data);\r\n            this.photoOffline = data;\r\n          }\r\n        );\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  prev(contxt: any) {\r\n    switch (contxt) {\r\n      case context.LIVE :\r\n        if (this.indiceLive < 2) return false;\r\n        this.indiceLive--;\r\n        this.initPhoto(contxt, this.indiceLive);\r\n        break;\r\n\r\n      case context.INLINE :\r\n        if (this.indiceChat < 2) return false;\r\n        this.indiceChat--;\r\n        this.initPhoto(contxt, this.indiceChat);\r\n        break;\r\n\r\n      case context.OFFLINE :\r\n        if (this.indiceOffline < 2) return false;\r\n        this.indiceOffline--;\r\n        this.initPhoto(contxt, this.indiceOffline);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  next(contxt: any) {\r\n    switch (contxt) {\r\n      case context.LIVE :\r\n        this.indiceLive++;\r\n        this.initPhoto(contxt, this.indiceLive);\r\n        break;\r\n\r\n      case context.INLINE :\r\n        this.indiceChat++;\r\n        this.initPhoto(contxt, this.indiceChat);\r\n        break;\r\n\r\n      case context.OFFLINE :\r\n        this.indiceOffline++;\r\n        this.initPhoto(contxt, this.indiceOffline);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  liveFree(id: number) {\r\n    this.router.navigate(['/live/free', {model: id}]);\r\n  }\r\n\r\n  livePrivate(id: number) {\r\n    this.router.navigate(['/live/private', {model: id}]);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pack-bienvenue',\n  templateUrl: './pack-bienvenue.component.html',\n  styleUrls: ['./pack-bienvenue.component.scss']\n})\nexport class PackBienvenueComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>pack-bienvenue works!</p>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}