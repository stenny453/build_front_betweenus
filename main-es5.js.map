{"version":3,"sources":["webpack:///src/app/layouts/scrolltop/scrolltop.component.ts","webpack:///src/app/layouts/scrolltop/scrolltop.component.html","webpack:///src/app/modals/confirm-logout/confirm-logout/confirm-logout.component.html","webpack:///src/app/modals/confirm-logout/confirm-logout/confirm-logout.component.ts","webpack:///ws (ignored)","webpack:///src/app/modals/forgot-password/forgot-password.component.ts","webpack:///src/app/modals/forgot-password/forgot-password.component.html","webpack:///src/app/layouts/header/disconnected/disconnected.component.ts","webpack:///src/app/layouts/header/disconnected/disconnected.component.html","webpack:///src/app/components/modele/dashboard/information/information.component.ts","webpack:///src/app/components/modele/dashboard/information/information.component.html","webpack:///src/app/components/forgot/send-forgot-model/send-forgot-model.component.html","webpack:///src/app/components/forgot/send-forgot-model/send-forgot-model.component.ts","webpack:///src/app/animation.ts","webpack:///src/app/components/modele/dashboard/setting/setting.component.ts","webpack:///src/app/components/modele/dashboard/setting/setting.component.html","webpack:///src/app/components/live/album-live/album-live.component.html","webpack:///src/app/components/live/album-live/album-live.component.ts","webpack:///src/app/components/modele/albums/albums.component.html","webpack:///src/app/components/modele/albums/albums.component.ts","webpack:///src/app/modals/pack-modal/pack-modal.component.html","webpack:///src/app/modals/pack-modal/pack-modal.component.ts","webpack:///src/app/services/socket/socket.service.ts","webpack:///src/app/components/modele/dashboard/gain/gain.component.ts","webpack:///src/app/components/modele/dashboard/gain/gain.component.html","webpack:///src/app/components/forgot/send-forgot/send-forgot.component.html","webpack:///src/app/components/forgot/send-forgot/send-forgot.component.ts","webpack:///src/app/components/admin/connected/dashboard-admin/model/detail-model-admin/detail-model-admin.component.ts","webpack:///src/app/components/admin/connected/dashboard-admin/model/detail-model-admin/detail-model-admin.component.html","webpack:///src/app/services/header/header.service.ts","webpack:///src/app/components/admin/connected/dashboard-admin/main-dashboard-admin/main-left-dashboard-admin/main-left-dashboard-admin.component.html","webpack:///src/app/components/admin/connected/dashboard-admin/main-dashboard-admin/main-left-dashboard-admin/main-left-dashboard-admin.component.ts","webpack:///src/app/components/modele/dashboard/dashboard.component.ts","webpack:///src/app/components/modele/dashboard/dashboard.component.html","webpack:///src/app/services/auth/auth.service.ts","webpack:///src/app/interfaces/timer.interface.ts","webpack:///src/app/components/modele/dashboard/connexion/connexion.component.ts","webpack:///src/app/components/modele/dashboard/connexion/connexion.component.html","webpack:///src/app/components/modele/live-vip-model/live-vip-model.component.ts","webpack:///src/app/components/modele/live-vip-model/live-vip-model.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/components/live/live-private/live-private-cam/live-private-cam.component.ts","webpack:///src/app/components/live/live-private/live-private-cam/live-private-cam.component.html","webpack:///src/app/components/modele/dashboard/solde/solde.component.html","webpack:///src/app/components/modele/dashboard/solde/solde.component.ts","webpack:///src/app/components/forgot/new-password/new-password.component.html","webpack:///src/app/components/forgot/new-password/new-password.component.ts","webpack:///src/app/components/client/out/out.component.ts","webpack:///src/app/components/client/out/out.component.html","webpack:///src/app/components/admin/connected/dashboard-admin/main-dashboard-admin/main-right-dashboard-admin/main-right-dashboard-admin.component.ts","webpack:///src/app/components/admin/connected/dashboard-admin/main-dashboard-admin/main-right-dashboard-admin/main-right-dashboard-admin.component.html","webpack:///src/app/components/modele/profil-model/profil-model.component.html","webpack:///src/app/components/modele/profil-model/profil-model.component.ts","webpack:///src/app/components/live/live-vip/live-vip-stat/live-vip-stat.component.html","webpack:///src/app/components/live/live-vip/live-vip-stat/live-vip-stat.component.ts","webpack:///src/app/components/home/home-disconnected/home-live.component.ts","webpack:///src/app/components/home/home-disconnected/home-live.component.html","webpack:///src/app/utils/slide.ts","webpack:///src/app/modals/popup-info/popup-info.component.ts","webpack:///src/app/modals/popup-info/popup-info.component.html","webpack:///src/app/components/page-not-found/page-not-found.component.ts","webpack:///src/app/components/page-not-found/page-not-found.component.html","webpack:///src/app/components/admin/connected/infobar-admin/infobar-admin.component.html","webpack:///src/app/components/admin/connected/infobar-admin/infobar-admin.component.ts","webpack:///src/app/components/live/live-vip/live-vip.component.ts","webpack:///src/app/components/live/live-vip/live-vip.component.html","webpack:///src/app/components/admin/connected/dashboard-admin/demande-clients-admin/demande-clients-admin.component.html","webpack:///src/app/components/admin/connected/dashboard-admin/demande-clients-admin/demande-clients-admin.component.ts","webpack:///src/app/services/timer/timer.service.ts","webpack:///src/app/layouts/header/connected-model/connected-model.component.ts","webpack:///src/app/layouts/header/connected-model/connected-model.component.html","webpack:///src/app/components/admin/connected/dashboard-admin/model/list-models-admin/list-models-admin.component.html","webpack:///src/app/components/admin/connected/dashboard-admin/model/list-models-admin/list-models-admin.component.ts","webpack:///src/app/layouts/header/header.component.html","webpack:///src/app/layouts/header/header.component.ts","webpack:///src/app/components/client/profil/password/password.component.html","webpack:///src/app/components/client/profil/password/password.component.ts","webpack:///src/app/components/client/buy-credit/buy-credit.component.html","webpack:///src/app/components/client/buy-credit/buy-credit.component.ts","webpack:///src/app/components/admin/connected/dashboard-admin/dashboard-admin.component.ts","webpack:///src/app/components/admin/connected/dashboard-admin/dashboard-admin.component.html","webpack:///src/app/components/modele/dashboard/password-modele/password-modele.component.html","webpack:///src/app/components/modele/dashboard/password-modele/password-modele.component.ts","webpack:///src/app/components/admin/connected/dashboard-admin/administration/paiement-admin/paiement-admin.component.html","webpack:///src/app/components/admin/connected/dashboard-admin/administration/paiement-admin/paiement-admin.component.ts","webpack:///src/app/components/admin/connected/dashboard-admin/model/ask-models-admin/ask-models-admin.component.html","webpack:///src/app/components/admin/connected/dashboard-admin/model/ask-models-admin/ask-models-admin.component.ts","webpack:///src/app/components/modele/live-private-model/live-private-model.component.ts","webpack:///src/app/components/modele/live-private-model/live-private-model.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/services/encryption/encryption.service.ts","webpack:///src/app/components/admin/connected/dashboard-admin/model/bloquer-models-admin/bloquer-models-admin.component.html","webpack:///src/app/components/admin/connected/dashboard-admin/model/bloquer-models-admin/bloquer-models-admin.component.ts","webpack:///src/app/components/live/live-free/live-free-chat/live-free-chat.component.ts","webpack:///src/app/components/live/live-free/live-free-chat/live-free-chat.component.html","webpack:///src/app/components/modele/inscription-model/inscription-model.component.html","webpack:///src/app/components/modele/inscription-model/inscription-model.component.ts","webpack:///src/app/services/roomVip/room-vip.service.ts","webpack:///src/app/services/admin/admin.service.ts","webpack:///src/app/components/admin/connected/dashboard-admin/model/statistique-models-admin/statistique-models-admin.component.ts","webpack:///src/app/components/admin/connected/dashboard-admin/model/statistique-models-admin/statistique-models-admin.component.html","webpack:///src/app/components/modele/shim.js","webpack:///src/app/components/client/reactivate-account/reactivate-account.component.ts","webpack:///src/app/components/client/reactivate-account/reactivate-account.component.html","webpack:///src/app/components/client/signin/signin.component.html","webpack:///src/app/components/client/signin/signin.component.ts","webpack:///node_modules/peerjs/dist sync","webpack:///src/app/services/profil/profil.service.ts","webpack:///src/app/services/model/model.service.ts","webpack:///src/app/components/paiement/paiement.component.ts","webpack:///src/app/services/auth/auth.interceptor.ts","webpack:///src/app/components/admin/connected/dashboard-admin/administration/message-admin/message-admin.component.ts","webpack:///src/app/components/admin/connected/dashboard-admin/administration/message-admin/message-admin.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/admin/connected/dashboard-admin/list-clients-admin/list-clients-admin.component.html","webpack:///src/app/components/admin/connected/dashboard-admin/list-clients-admin/list-clients-admin.component.ts","webpack:///src/app/services/client/client.service.ts","webpack:///src/app/components/admin/connected/dashboard-admin/model/detail-model-admin/motif-reject/motif-reject.component.html","webpack:///src/app/components/admin/connected/dashboard-admin/model/detail-model-admin/motif-reject/motif-reject.component.ts","webpack:///src/app/pipes/sanitize/sanitize.pipe.ts","webpack:///src/app/services/roomPrivate/room-private.service.ts","webpack:///src/app/services/popup/popup.service.ts","webpack:///src/app/layouts/header/connected/connected.component.ts","webpack:///src/app/layouts/header/connected/connected.component.html","webpack:///src/app/services/chat/chat.service.ts","webpack:///src/app/services/room/room.service.ts","webpack:///src/app/components/modele/dashboard/credit/pack-bronze/pack-bronze.component.ts","webpack:///src/app/components/modele/dashboard/credit/pack-bronze/pack-bronze.component.html","webpack:///src/app/components/admin/connected/dashboard-admin/administration/list-paiement-admin/list-paiement-admin.component.html","webpack:///src/app/components/admin/connected/dashboard-admin/administration/list-paiement-admin/list-paiement-admin.component.ts","webpack:///src/app/components/client/signup/signup.component.html","webpack:///src/app/components/client/signup/signup.component.ts","webpack:///src/app/components/admin/connected/leftbar-admin/leftbar-admin.component.ts","webpack:///src/app/components/admin/connected/leftbar-admin/leftbar-admin.component.html","webpack:///src/app/components/admin/connected/dashboard-admin/statistique-clients-admin/statistique-clients-admin.component.ts","webpack:///src/app/components/admin/connected/dashboard-admin/statistique-clients-admin/statistique-clients-admin.component.html","webpack:///src/app/components/modele/live-chat-model/live-chat-model.component.html","webpack:///src/app/components/modele/live-chat-model/live-chat-model.component.ts","webpack:///src/app/components/modele/dashboard/credit/pack-argent/pack-argent.component.ts","webpack:///src/app/components/modele/dashboard/credit/pack-argent/pack-argent.component.html","webpack:///src/app/services/album/album.service.ts","webpack:///src/app/services/credit/credit.service.ts","webpack:///src/app/services/notification/notification.service.ts","webpack:///src/app/components/modele/connexion-model/connexion-model.component.html","webpack:///src/app/components/modele/connexion-model/connexion-model.component.ts","webpack:///src/app/components/admin/connected/dashboard-admin/main-dashboard-admin/main-dashboard-admin.component.html","webpack:///src/app/components/admin/connected/dashboard-admin/main-dashboard-admin/main-dashboard-admin.component.ts","webpack:///src/app/components/admin/connected/topbar-admin/topbar-admin.component.html","webpack:///src/app/components/admin/connected/topbar-admin/topbar-admin.component.ts","webpack:///src/app/modals/popup-image/popup-image.component.ts","webpack:///src/app/modals/popup-image/popup-image.component.html","webpack:///src/app/components/client/confirm-email/confirm-email.component.ts","webpack:///src/app/components/client/confirm-email/confirm-email.component.html","webpack:///src/app/components/modele/dashboard/credit/credit.component.html","webpack:///src/app/components/modele/dashboard/credit/credit.component.ts","webpack:///src/app/services/log/log.service.ts","webpack:///src/app/components/live/live-private/live-private.component.ts","webpack:///src/app/components/live/live-private/live-private.component.html","webpack:///src/app/components/client/enter/enter.component.ts","webpack:///src/app/components/client/enter/enter.component.html","webpack:///src/app/components/live/live-free/live-free.component.html","webpack:///src/app/components/live/live-free/live-free.component.ts","webpack:///src/app/interfaces/get-model.interface.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/components/client/profil/profil.component.ts","webpack:///src/app/components/client/profil/profil.component.html","webpack:///src/app/components/client/profil/delete/delete.component.html","webpack:///src/app/components/client/profil/delete/delete.component.ts","webpack:///src/app/components/admin/connected/dashboard-admin/bloquer-clients-admin/bloquer-clients-admin.component.html","webpack:///src/app/components/admin/connected/dashboard-admin/bloquer-clients-admin/bloquer-clients-admin.component.ts","webpack:///src/app/services/paiement/paiement.service.ts","webpack:///src/app/components/live/topbar/topbar.component.html","webpack:///src/app/components/live/topbar/topbar.component.ts","webpack:///src/app/components/modele/dashboard/credit/pack-or/pack-or.component.ts","webpack:///src/app/components/modele/dashboard/credit/pack-or/pack-or.component.html","webpack:///src/app/components/home/home-connected/home-client.component.html","webpack:///src/app/components/home/home-connected/home-client.component.ts","webpack:///src/app/components/admin/connected/dashboard-admin/administration/setting-admin/setting-admin.component.html","webpack:///src/app/components/admin/connected/dashboard-admin/administration/setting-admin/setting-admin.component.ts","webpack:///src/app/components/admin/connexion-admin/connexion-admin.component.html","webpack:///src/app/components/admin/connexion-admin/connexion-admin.component.ts","webpack:///src/app/components/modele/dashboard/credit/pack-bienvenue/pack-bienvenue.component.ts","webpack:///src/app/components/modele/dashboard/credit/pack-bienvenue/pack-bienvenue.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["ScrolltopComponent","hide","window","scroll","event","scrollTop","show","body","animate","console","log","ConfirmLogoutComponent","dialogRef","authService","socketService","store","roomService","logService","clientService","data","exclamation","password","error","empty","loading","action","close","createLog","subscribe","room","get","leave","parseInt","remove","leaveRoom","logoutUser","lastRoom","validate","ForgotPasswordComponent","DisconnectedComponent","headerSrv","animationState","connect","active","actif","divName","toggleShowDiv","InformationComponent","profilService","notificationService","information","id","like","dislike","social_network","sex_orientation","description","getInfo","updateProfil","success","getProfil","oldInfo","restoreInfo","saveInfo","SendForgotModelComponent","modelService","email","forgot","infoMsg","message","errorMsg","send","SlideInOutAnimation","SettingComponent","profileService","colorSwitch","checkedSound","checkedMail","checkedMessage","setting","sound_message","sound_notification","mail_notification","formData","FormData","info","pseudo","path_soft","cin","date_birth","photoImg","originalInfo","originalSetting","fileInput","file","target","files","mimeType","reader","FileReader","type","readAsDataURL","onload","result","append","name","updatePhoto","events","UploadProgress","Response","path","updateSetting","updateInfo","switchSound","switchMail","switchMessage","restoreSetting","saveSetting","AlbumLiveComponent","albums","showed","setTimeout","AlbumsComponent","route","albumService","dialog","defaultImage","bg","profil","photoAdd","bannier","totalAlbum","sectionAlbum","page","contextAlbum","currentAlbum","fileData","count","param","snapshot","queryParamMap","initAlbum","countAlbum","getCount","vip","free","debut","getAlbums","context","verified","textAlbum","fetchAlbum","marge","Math","floor","mime","document","querySelector","scrollIntoView","index","length","verifyMimeType","failure","fileUploadProgress","uploadAlbumModel","round","loaded","total","paths","push","addAlbums","url","open","width","afterClosed","ngOnInit","take","fileChoose","profilChoose","PackModalComponent","creditService","paiementService","currentOnglet","currentSelected","montantSelected","creditSelected","currentPack","clientId","credit","creditId","listPack","packBienvenue","packBronze","packArgent","packOr","getMyCredit","getMyInfos","montant","buyPack","buyCreditClient","then","SocketService","socket","roomPrivateService","eventName","subscriber","on","next","emit","idRoom","modelId","role","clientPseudo","clientPeer","updateActif","roomId","modelPseudo","GainComponent","roomVIPService","updating","gain","date","gainVIP","gainPrivate","useDefaultGridStyle","options","gridStyle","stroke","lineDash","axes","update","getData","startUpdates","setInterval","autoSize","series","xKey","yKey","yName","marker","size","fill","color","position","nice","tick","label","format","background","visible","tooltip","enabled","navigator","title","text","legend","item","getInfoModel","getGainVip","getGainPrivate","getGain","forEach","gainTmp","getDate","createdAt","insertGainVIP","insertGainPrivate","year","substring","month","day","exist","i","SendForgotComponent","DetailModelAdminComponent","router","adminService","idClient","client","firstname","lastname","path_recto","path_verso","path_cin","state","params","navigate","getInfos","getInfosModel","accepted","acceptInscriptionModel","HeaderService","hidded","unselected","MainLeftDashboardAdminComponent","demandes","value","clients","modeles","countModelInscription","countModelDesactivation","countModelSuppression","countClientActif","countModelActif","countNewLastClients","countNewLastModels","countRoomPrivate","countRoomVIP","getChiffreAffaire","countModelState","newLastClients","newLastModels","countRoom","DashboardComponent","pageId","menu","slided","activate","addClass","removeClass","load","httpOptions","headers","AuthService","http","endpoint","authentified","paying","who","set","authentication","user","post","reportProgress","observe","token","newPassword","put","authToken","removeToken","TypeTimer","ConnexionComponent","history","lundi","mardi","mercredi","jeudi","vendredi","samedi","dimanche","yKeys","yNames","grouped","fills","strokeWidth","formatter","keys","LiveVipModelComponent","_platform","chatService","roomVipService","timerService","imgPoster","thrombone","dot","toggleDot","img","chatColor","creditModel","idCreditModel","winCredit","timer","hour","minute","second","fail","reinit","stat","id_show","type_show","tarif_show","time_show","time_passed","hour_passed","minute_passed","second_passed","actualCredit","totalCredit","messages","leaved","joinSub","leaveSub","messageSub","peerSub","showEmojiPicker","sets","peerList","getPeerId","peer","peerId","newPeerIdModel","call","onStop","mediaDevices","getUserMedia","video","audio","stream","lazyStream","_video","nativeElement","srcObject","play","answer","remoteStream","includes","streamRemoteVideo","currentPeer","peerConnection","err","initLiveVideo","unsubscribe","profile","status","getInfoRoom","getCredit","getRoomModel","getMessages","initSocket","getInfoClient","initTimer","getCostShow","joinedRoom","joinRoom","joinVip","listen","peerIdShare","connectWithPeer","type_source","id_source","type_chat","code_couleur","postMessage","msg","sendMessage","getMessage","leaveTimer","clearTimer","leaveVip","updateStatus","beginTimerModel","VIP","created","updated","updatedAt","convertTime","toString","toUpperCase","beginTimer","delay","Date","updateTimer","onStart","ms","pause","getVideoTracks","stop","callPeer","remote_video","emoji","toggleDots","liveOut","focus","toggleEmojiPicker","environment","production","CRYPT_PSEUDO","CRYPT_PASS","CRYPT_PSEUDO_MODEL","CRYPT_PASS_MODEL","LivePrivateCamComponent","clientSelected","idSelected","canSelect","SoldeComponent","coinImg","solde","NewPasswordComponent","activatedRoute","confirmPassword","errorToken","queryParams","verifyToken","getCredential","reinitPassword","access_token","saveToken","saveLog","createRoom","OutComponent","MainRightDashboardAdminComponent","years","currentSelect","clientsOrig","modelesOrig","isIntegral","currentYear","getFullYear","currentMonth","labelsShow","valueUser","labelUser","initYears","getInscriptionsClient","getInscriptionsModel","getAverageClient","initial","getStatInscriptionModel","tmp","inscrit","formatDate","getStatInscriptionClient","search","filter","element","val","duree","convertToTime","countLoop","rang","selectMonth","selectYear","integral","changeSelection","ProfilModelComponent","camera","totalAlbumPrivate","pagePrivate","currentAlbumPrivate","totalAlbumVIP","pageVIP","currentAlbumVIP","totalAlbumFree","pageFree","currentAlbumFree","model","age","date_last_connection","horaire","arrowLeft","arrowRight","init","getStatus","year_birth","full","section","toLeft","toRight","LiveVipStatComponent","stats1","stats2","startMinuteur","lightbox","path_album","HomeLiveComponent","modelSrv","gallery","mainModel","allLive","other","imageData","getLive","items","map","src","thumb","lightboxRef","ref","setConfig","imageSize","Cover","thumbPosition","Top","random","getNoLive","type_album","getModelAlbums","ANIMATION_SPEED","routeTransitionAnimations","optional","transform","PopupInfoComponent","PageNotFoundComponent","InfobarAdminComponent","icon","help","helps","LiveVipComponent","popupService","clientCredit","indisponible","modelLeaveSub","modelPassedVipSub","invitationVipSub","newPeerSub","paramMap","errorRoom","getModel","initColor","creditTimer","getMyInfo","obsolete","sendClientPeerId","relaunchPeerId","getColor","getTimer","aucunCredit","creditInsuffisant","undefined","timerId","showCredit","showSecond","showType","buy","DemandeClientsAdminComponent","four","deactivate","bloqued","debloquer","etat","askTxt","TimerService","step","hourCreated","hourUpdated","minCreated","minUpdated","secCreated","secUpdated","time","inFloat","inInteger","ConnectedModelComponent","authSrv","chat","settings","goToChat","logout","ListModelsAdminComponent","range","selected","selectedStatus","topPage","thirdlyPage","list_pagination","countClient","listClients","res","countModels","initPagination","getModels","deleteModel","reverse","blockModel","deactivateModel","activateModel","listStatusClients","getStatusModel","select","selectStatus","input_search","HeaderComponent","isConnected","isClickable","isModel","isVisible","isActif","connected","clickable","PasswordComponent","formBuilder","submitted","errorPassword","mustMatch","controlName","matchControlName","formGroup","control","controls","matchingControl","errors","setErrors","passwordForm","group","oldPassword","required","validators","preventDefault","invalid","passwords","changePassword","BuyCreditComponent","promo","DashboardAdminComponent","PasswordModeleComponent","old","confirm","changeForm","reset","PaiementAdminComponent","creditSent","list","getModelsActif","isNaN","payModel","savePay","AskModelsAdminComponent","countRequestsModel","getRequestsModel","acceptRequestModel","LivePrivateModelComponent","clientStream","inviteVIPSub","listInvitation","showVideo","showAudio","ready","initSettingVideoModel","getActif","getActifs","ansModelPeerId","addInvitationToVIP","indexOf","splice","closeInvitation","liveVIP","responseNegativeInvitationModelToVIP","roomVIP","askLeave","responsePositiveInvitationModelToVIP","leavePrivate","PRIVATE","beginCountCredit","nbSecond","toggleVideo","toggleAudio","chooseClient","AppComponent","unselect","EncryptionService","key","Utf8","parse","iv","enString","encrypted","encrypt","JSON","stringify","keySize","mode","CBC","padding","Pkcs7","decString","decrypted","decrypt","BloquerModelsAdminComponent","countModelsBlocked","getModelsBlocked","prevPage","nextPage","LiveFreeChatComponent","iterableDiffers","listColor","currentPseudo","iterableDiffer","find","create","top","changes","diff","prop","getClient","InscriptionModelComponent","emailExist","pseudoExist","fileRecto","errorRecto","fileVerso","errorVerso","filePhoto","errorPhoto","fileSoft","errorSoft","signForm","day_birth","month_birth","passwordConfirm","initDay","initYear","click","ok","preview","previewRecto","nameRecto","previewVerso","nameVerso","previewPhoto","namePhoto","previewSoft","nameSoft","uploadImagesModel","registerModel","createSetting","createCredit","createProfil","selectPhoto","register","RoomVipService","AdminService","motif","flux","idPay","idModel","pseudoModel","emailModel","objet","idTaboo","word","StatistiqueModelsAdminComponent","models","original","originModels","getInscriptions","inscription","suppression","getSuppression","getStatSuppressionModel","resume","parcelRequire","ReactivateAccountComponent","errorMessageToken","successMessageToken","confirmToken","reactivateAccount","SigninComponent","encryptionService","checked","pseudoStorage","passStorage","errorAuth","loginForm","isRemembered","localStorage","setItem","pseudoCrypted","encryptUsingAES256","passCrypted","getItem","decryptUsingAES256","replace","setValue","loginClient","isRemember","remember","login","webpackEmptyContext","req","e","Error","code","resolve","module","exports","ProfilService","patch","ModelService","live","offline","slice","userId","PaiementComponent","AuthInterceptor","getToken","credentialPay","header","clone","setHeaders","Authorization","handle","pipe","statusCode","navigateByUrl","MessageAdminComponent","messageForm","sendMail","config","customNotifierOptions","horizontal","distance","vertical","gap","theme","behaviour","autoHide","onClick","onMouseover","showDismissButton","stacking","animations","preset","speed","easing","offset","shift","overlap","AppModule","provide","useClass","multi","useValue","withConfig","warnOnNgModelWithFormControl","forRoot","ListClientsAdminComponent","countClients","getClients","deleteClient","blockClient","deactivateClient","activateClient","ClientService","linkRoom","MotifRejectComponent","SanitizePipe","_sanitizer","bypassSecurityTrustHtml","RoomPrivateService","joined","type_room","PopupService","ConnectedComponent","lastChat","ChatService","RoomService","PackBronzeComponent","ListPaiementAdminComponent","paiements","countPay","listPay","getListPaiement","deletePaiement","newPay","SignupComponent","registerClient","createCreditClient","LeftbarAdminComponent","dashboard","under","out","StatistiqueClientsAdminComponent","inscriptions","LiveChatModelComponent","invitePrivateSub","join","invitationPrivate","responseInvitationModelToPrivate","launchLive","askLeaveVIP","PackArgentComponent","AlbumService","albumPrivate","albumVIP","albumFree","album","begin","end","CreditService","cout","affaire","NotificationService","_snackbar","ngxNotificationMsgService","SUCCESS","displayIcon","closeable","direction","TOP_RIGHT","displayProgressBar","INFO","FAILURE","NONE","duration","horizontalPosition","verticalPosition","panelClass","BOTTOM_RIGHT","ConnexionModelComponent","loginModel","MainDashboardAdminComponent","lastShowPrivate","lastShowVIP","valueShow","topModels","currentShowLabel","labelShow","getLastShowPrivate","getLastShowVIP","getTopModels","get10LastShowPrivate","getDuree","get10LastShowVIP","getTop10Model","showCreated","privateRooms","vipRooms","lastShow","hourStr","minStr","secStr","changeSelectionShow","TopbarAdminComponent","icon_notification","value_notification","getInfosAdmin","PopupImageComponent","deleteAlbum","ConfirmEmailComponent","CreditComponent","LogService","LivePrivateComponent","invitedVIP","passedVIP","actifSub","responsePositiveInvitationVIPSub","responseNegativeInvitationVIPSub","callPeerClient","removeStream","askModelPeerId","joinPrivate","clientInviteModelToVIP","getSpecificProfil","getInfoRoomVIP","addOtherClientstreamRemoteVideo","findIndex","invitationToVIP","EnterComponent","logoDark","alert","LiveFreeComponent","passedToPrivate","modelPassedPrivateSub","modelLeavedSub","responseInvitationPrivateSub","acceptedInvitationToPrivate","costShowPrivate","costShowVip","acceptedVIP","livePrivate","acceptedInvitation","invalideRoom","clientInviteModelToPrivate","routes","component","loadChildren","m","ClientRoutingModule","ModelRoutingModule","AdminRoutingModule","AppRoutingModule","scrollPositionRestoration","relativeLinkResolution","ProfilComponent","sound","autoRecharge","disabled","isModifing","showExclam","clientEmail","clientCreditId","newPseudo","changePseudo","changeSound","toogleRecharge","recharge","tryChangeEmail","modifing","openDialogPassword","deleteAccount","DeleteComponent","onNoClick","deactivateAccount","BloquerClientsAdminComponent","countClientsBlocked","getClientsBlocked","PaiementService","amount","breakdown","TopbarComponent","strech","microOn","microOff","mute","noVideo","volume","soundOff","add","isSound","isVideo","isStreched","isMicro","currentMinute","countUser","showTools","material","PackOrComponent","HomeClientComponent","image","totalInLive","paginationLive","photoLive","indiceLive","totalInChat","paginationChat","photoChat","indiceChat","totalOffline","paginationOffline","photoOffline","indiceOffline","OFFLINE","INLINE","LIVE","getTotal","margeLive","ceil","margeChat","margeOffline","initPhoto","contxt","indice","getList","prev","SettingAdminComponent","imgDelete","changedProfil","getTaboos","getTaboo","listTaboo","deleteTaboo","addTaboo","updateInfoAdmin","changePasswordAdmin","uploadProfil","ConnexionAdminComponent","PackBienvenueComponent","bootstrapModule","webpackEmptyAsyncContext","Promise"],"mappings":"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AAAA;ADPjC;;AACE;;AAAI;;AACJ;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AAEF;;AACF;;AACA;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACA;;AAAyC;;AACzC;;AAAyC;;AAC3C;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;AAOF;;;;AA/HY;;AAAA;;AAkBA;;AAAA;;AAkBA;;AAAA;;AA0BA;;AAAA;;AAiBO;;AAAA;;AACA;;AAAA;;AAAkC;;AAAA;;AAClC;;AAAA;;AAAkC;;AAAA;;AAiBzC;;AAAA;;AAiBA;;AAAA;;;;;;;;;;;;;;;;;;;;;AEtIZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AA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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE/BV;;AAA8B;;AAAC;;;;;;;;AA4BvD;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;AACF;;;;;;AAvBU;;AAAA;;AASA;;AAAA;;AAUF;;AAAA;;;;;;AAzBV;;AACE;;AA6BF;;;;;;AA7BoC;;AAAA;;;;;;;;AAiChC;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;;;;;AAtBQ;;AAAA;;AASA;;AAAA;;AAUF;;AAAA;;;;;;AAzBV;;AACE;;AACE;;AA2BF;;AACF;;;;;;AA5BkD;;AAAA;;;;;;;;AAgC9C;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;;;;;AAtBQ;;AAAA;;AASA;;AAAA;;AAUF;;AAAA;;;;;;AAzBV;;AACE;;AACE;;AA2BF;;AACF;;;;;;AA5BkD;;AAAA;;;;;;AAkC1C;;AACE;;AACF;;;;;;;;;;;;;;AAJJ;;AACE;;AACE;;AAGA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;;;;;AA5BoB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;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;A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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'app-scrolltop',\n  templateUrl: './scrolltop.component.html',\n  styleUrls: ['./scrolltop.component.scss']\n})\nexport class ScrolltopComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    $(\"#pulse\").hide();\n    $(window).scroll(function (event) {\n      var scroll = $(window).scrollTop();\n      if (scroll && scroll > 200) {\n        $(\"#pulse\").show();\n      } else {\n        $(\"#pulse\").hide();\n      }\n  });\n  }\n\n  scroll() {\n    var body = $(\"html, body\");\n    body.animate({scrollTop:0},'swing', function() {\n    console.log(\"Finished animating\");\n    });\n  }\n\n}\n","<div class=\"contain_scroll\">\n  <div id=\"pulse\" (click)=\"scroll()\">\n    <i class=\"fa fa-arrow-up\"></i>\n  </div>\n</div>\n","<div class=\"contain_pass\">\n  <h2 mat-dialog-title>Déconnexion</h2>\n  <mat-dialog-content>\n    <div class=\"content_text\">\n      <!-- <div class=\"img\">\n        <img [src]=\"exclamation\" alt=\"\" style=\"max-width: 100%;\">\n      </div> -->\n      <div class=\"text_warning\">\n        Souhaitez-vous vous déconnecter de votre compte ?\n      </div>\n    </div>\n  </mat-dialog-content>\n\n  <mat-dialog-actions>\n    <button class=\"btn_cancel\" mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Annuler</button>\n    <button class=\"btn_valid\" (click)=\"validate()\">Confirmer</button>\n  </mat-dialog-actions>\n</div>\n\n<div class=\"lds-spinner\" *ngIf=\"loading\">\n  <div></div><div></div><div></div><div></div>\n  <div></div><div></div><div></div><div></div>\n  <div></div><div></div><div></div><div></div>\n  </div>\n","import { AuthService } from 'src/app/services/auth/auth.service';\r\nimport {Component, Inject, OnInit} from '@angular/core';\r\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { LogService } from '../../../services/log/log.service';\r\nimport { RoomService } from '../../../services/room/room.service';\r\nimport { LocalStorageService } from 'ngx-localstorage';\r\nimport { SocketService } from '../../../services/socket/socket.service';\r\nimport { ClientService } from '../../../services/client/client.service';\r\n\r\n@Component({\r\n  selector: 'app-confirm-logout',\r\n  templateUrl: './confirm-logout.component.html',\r\n  styleUrls: ['./confirm-logout.component.scss']\r\n})\r\nexport class ConfirmLogoutComponent implements OnInit {\r\n  action: string;\r\n  exclamation = \"assets/icons/exclamation-mark.svg\";\r\n  password: string = \"\";\r\n  error: boolean = false;\r\n  empty: boolean = false;\r\n  loading: boolean = false;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ConfirmLogoutComponent>,\r\n    private authService:AuthService,\r\n    private socketService: SocketService,\r\n    private store: LocalStorageService,\r\n    private roomService: RoomService,\r\n    private logService: LogService,\r\n    private clientService: ClientService,\r\n    @Inject(MAT_DIALOG_DATA) public data) {\r\n      this.action = data.action;\r\n      // console.log(\"Logout modal \" + this.action);\r\n    }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  async validate(): Promise<void> {\r\n    this.loading = true;\r\n    if (this.action == 'model') {\r\n      await this.logService.createLog('deconnection').subscribe(\r\n        (data) => {\r\n          const room = this.store.get('room');\r\n          this.socketService.leave(parseInt(room), 'model');\r\n          this.store.remove('room');\r\n          this.roomService.leaveRoom();\r\n          this.loading = false;\r\n          this.authService.logoutUser('model', '/modele/connexion');\r\n        }, (error) => {\r\n          this.loading = false;\r\n        }\r\n      )\r\n    } else if (this.action === 'admin') {\r\n      this.authService.logoutUser('admin', '/authentification-admin');\r\n    }\r\n    else {\r\n      this.clientService.lastRoom(null);\r\n      this.loading = false;\r\n      this.authService.logoutUser('client', '/accueil');\r\n    }\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","/* (ignored) */","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>forgot-password works!</p>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { SlideInOutAnimation } from 'src/app/animation';\nimport { HeaderService } from '../../../services/header/header.service';\n@Component({\n  selector: 'app-disconnected',\n  templateUrl: './disconnected.component.html',\n  styleUrls: ['./disconnected.component.scss'],\n  animations: [SlideInOutAnimation]\n})\nexport class DisconnectedComponent implements OnInit {\n  animationState = 'out';\n  connect: boolean = false;\n\n  @Input()\n  actif: string;\n  active: number = 0;\n\n  constructor(private headerSrv: HeaderService) { }\n\n  ngOnInit(): void {\n    if (this.actif) this.active = parseInt(this.actif);\n  }\n\n  toggleShowDiv(divName: string) {\n    if (divName === 'contain_disconnected') {\n      console.log(this.animationState);\n      this.animationState = this.animationState === 'out' ? 'in' : 'out';\n      console.log(this.animationState);\n    }\n  }\n\n}\n","\n<div class=\"bars\">\n  <i class=\"fa fa-bars\" (click)=\"toggleShowDiv('contain_disconnected')\"></i>\n</div>\n\n<div class=\"contain_disconnected\" [@slideInOut]=\"animationState\">\n  <div class=\"list one\" [ngClass]=\"{'active': active == 1}\" routerLink=\"/accueil\">\n    Tous les modèles\n    <span></span>\n  </div>\n  <div class=\"list two\" routerLink=\"/client/connexion\" [ngClass]=\"{'active': active == 2}\">\n    Connexion\n    <span></span>\n  </div>\n  <div class=\"list three lighter\" routerLink=\"/client/inscription\">\n    Inscription\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Information } from 'src/app/interfaces/model-information.interface';\nimport { ProfilService } from '../../../../services/profil/profil.service';\nimport { NotificationService } from '../../../../services/notification/notification.service';\n\n\n@Component({\n  selector: 'app-information',\n  templateUrl: './information.component.html',\n  styleUrls: ['./information.component.scss']\n})\nexport class InformationComponent implements OnInit {\n  information: Information = {\n    id: 0,\n    like: '',\n    dislike: '',\n    social_network: '',\n    sex_orientation: '',\n    description: ''\n  };\n\n  oldInfo: Information;\n\n  constructor(\n    private profilService: ProfilService,\n    private notificationService: NotificationService\n  ) {}\n\n  ngOnInit(): void {\n    this.getInfo();\n  }\n\n  saveInfo() {\n    this.profilService.updateProfil(this.information).subscribe(\n      (data: any) => {\n        this.notificationService.success(\"Modification\", \"Terminé avec succès\")\n        this.getInfo();\n      }, (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  getInfo() {\n    this.profilService.getProfil().subscribe(\n      (data) => {\n        this.information = data;\n        this.oldInfo = {...this.information};\n        // console.log(this.information);\n      }\n    )\n  }\n\n  restoreInfo() {\n    console.log(this.oldInfo.description);\n    this.information.description = this.oldInfo.description;\n    this.information.like = this.oldInfo.like;\n    this.information.dislike = this.oldInfo.dislike;\n    this.information.social_network = this.oldInfo.social_network;\n    this.information.sex_orientation = this.oldInfo.sex_orientation;\n  }\n\n\n}\n","<div class=\"main_info\">\n<div class=\"title_info\">\n  INFORMATION PERSONNELLE\n</div>\n<div class=\"line\"></div>\n<div class=\"container-fluid contain_info\">\n  <div class=\"row\">\n    <div class=\"col-lg-6\">\n      <div class=\"content_field\">\n        <label for=\"like\">J'aime :</label>\n        <input type=\"text\" class=\"input_field\" placeholder=\"J'aime\"\n        [(ngModel)]=\"information.like\">\n      </div>\n    </div>\n    <div class=\"col-lg-6\">\n      <div class=\"content_field\">\n        <label for=\"dislike\">Je n'aime pas : </label>\n        <input type=\"text\" class=\"input_field\" placeholder=\"J'aime pas\"\n        [(ngModel)]=\"information.dislike\">\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-lg-6\">\n      <div class=\"content_field\">\n        <label for=\"social_network\">Réseaux sociaux :</label>\n        <input type=\"text\" class=\"input_field\" placeholder=\"Réseaux sociaux\"\n        [(ngModel)]=\"information.social_network\">\n      </div>\n    </div>\n    <div class=\"col-lg-6\">\n      <div class=\"content_field\">\n        <label for=\"sex_orientation\">Orientation Sexuelle :</label>\n        <input type=\"text\" class=\"input_field\" placeholder=\"Orientation sexuelle\"\n        [(ngModel)]=\"information.sex_orientation\">\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-lg-12\">\n      <div class=\"content_field\">\n        <label for=\"description\">Description :</label>\n        <textarea name=\"description\" id=\"description\" cols=\"30\" rows=\"40\" class=\"input_field\"\n        placeholder=\"Description .....\"\n        [(ngModel)]=\"information.description\"></textarea>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-lg-4 offset-lg-1\">\n      <div class=\"contain_button\">\n        <button class=\"btn_cancel lighter\" (click)=\"restoreInfo()\">\n          ANNULER\n        </button>\n      </div>\n    </div>\n    <div class=\"col-lg-4 offset-lg-2\">\n      <div class=\"contain_button\">\n        <button class=\"btn_save lighter\" (click)=\"saveInfo()\">\n          ENREGISTRER\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n\n</div>\n","<app-header></app-header>\n\n<div class=\"contain_signup_one\">\n  <div class=\"inside_sign part_one\">\n    <h2>RECUPERATION <br> DU MOT DE PASSE</h2>\n    <div class=\"blank\"></div>\n  </div>\n</div>\n\n<div class=\"contain_signup_two inside_sign\">\n  <h3 class=\"title\">\n    Récupération  <br>\n    du mot de passe oublié\n  </h3>\n\n  <div class=\"descr\">\n      BETWEEN<span class=\"under_bold\">US</span>.LIVE <br>\n      Vous avez oublié le mot de passe ? <br>\n      Veuillez soumettre votre email. <br>\n      Un email de reinitialisation sera envoyé pour confirmation.\n  </div>\n\n  <form autocomplete=\"off\" (ngSubmit)=\"send()\">\n    <div class=\"form-group\">\n      <label for=\"pseudo\">Email *</label>\n      <input type=\"email\" name=\"email\" class=\"form-control input lighter\" [(ngModel)]=\"email\" required>\n      <div *ngIf=\"error\">\n        <small class=\"form-text error-text\">Veuillez compléter</small>\n      </div>\n    </div>\n\n    <div class=\"notif\">\n      * Champ obligatoire\n    </div>\n\n    <div class=\"action\">\n      <button class=\"btn btn_signup lighter\" type=\"submit\">\n        <div class=\"loader\" *ngIf=\"loading\"></div>\n        <span *ngIf=\"!loading\">ENVOYER</span>\n      </button>\n    </div>\n  </form>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ClientService } from '../../../services/client/client.service';\nimport { NotificationService } from '../../../services/notification/notification.service';\nimport { ModelService } from '../../../services/model/model.service';\n\n@Component({\n  selector: 'app-send-forgot-model',\n  templateUrl: './send-forgot-model.component.html',\n  styleUrls: ['./send-forgot-model.component.scss']\n})\nexport class SendForgotModelComponent implements OnInit {\n  loading: boolean = false;\n  email: string = null;\n  error: boolean = false;\n  constructor(\n    private modelService: ModelService,\n    private notificationService: NotificationService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  send() {\n    if (!this.email) {\n      this.error = true;\n      return null;\n    }\n    this.error = false;\n    this.loading = true;\n    this.modelService.forgot(this.email).subscribe(\n      (data: {success: boolean, message: string}) => {\n        this.loading = false;\n        // console.log(data);\n        if (data.success) {\n          this.notificationService.infoMsg(data.message);\n          this.email = null;\n        } else {\n          this.notificationService.errorMsg(data.message);\n        }\n      }, (error) => {\n        console.log(error);\n        this.loading = false;\n      }\n    )\n  }\n\n}\n","import { trigger, state, style, transition,\r\n  animate, group, query, stagger, keyframes\r\n} from '@angular/animations';\r\n\r\nexport const SlideInOutAnimation = [\r\n  trigger('slideInOut', [\r\n      state('in', style({\r\n          'max-height': '500px', 'opacity': '1', 'visibility': 'visible'\r\n      })),\r\n      state('out', style({\r\n          'max-height': '0px', 'opacity': '0', 'visibility': 'hidden'\r\n      })),\r\n      transition('in => out', [group([\r\n          animate('400ms ease-in-out', style({\r\n              'opacity': '0'\r\n          })),\r\n          animate('600ms ease-in-out', style({\r\n              'max-height': '0px'\r\n          })),\r\n          animate('700ms ease-in-out', style({\r\n              'visibility': 'hidden'\r\n          }))\r\n      ]\r\n      )]),\r\n      transition('out => in', [group([\r\n          animate('1ms ease-in-out', style({\r\n              'visibility': 'visible'\r\n          })),\r\n          animate('600ms ease-in-out', style({\r\n              'max-height': '500px'\r\n          })),\r\n          animate('800ms ease-in-out', style({\r\n              'opacity': '1'\r\n          }))\r\n      ]\r\n      )])\r\n  ]),\r\n]\r\n","import { HttpEventType } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Setting } from '../../../../interfaces/setting.interface';\r\nimport { ProfilService } from '../../../../services/profil/profil.service';\r\nimport { NotificationService } from '../../../../services/notification/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-setting',\r\n  templateUrl: './setting.component.html',\r\n  styleUrls: ['./setting.component.scss']\r\n})\r\nexport class SettingComponent implements OnInit {\r\n  colorSwitch = \"#FB77FC\";\r\n  checkedSound: boolean = true;\r\n  checkedMail: boolean = true;\r\n  checkedMessage: boolean = true;\r\n\r\n  originalSetting: Setting;\r\n  setting: Setting = {\r\n    id: 0,\r\n    sound_message: 0,\r\n    sound_notification: 0,\r\n    mail_notification: 0\r\n  }\r\n\r\n  file: File;\r\n  formData = new FormData();\r\n\r\n  originalInfo: any;\r\n  info = {\r\n    pseudo: '',\r\n    email: '',\r\n    path_soft: null,\r\n    cin: '',\r\n    date_birth: ''\r\n  }\r\n\r\n  photoImg = \"assets/icons/photoAdd.svg\";\r\n  constructor(\r\n    private profileService: ProfilService,\r\n    private notificationService: NotificationService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getInfo();\r\n  }\r\n\r\n  getInfo() {\r\n    this.profileService.getInfo().subscribe(\r\n      (data: any) => {\r\n        // console.log(data);\r\n        this.info = data;\r\n        this.originalInfo = {...this.info};\r\n        this.setting = data.setting;\r\n        this.originalSetting = {...this.setting};\r\n      }\r\n    )\r\n  }\r\n\r\n  switchSound(event) {\r\n    this.checkedSound = !this.checkedSound;\r\n    // console.log(this.checkedSound);\r\n    if (this.checkedSound)\r\n      this.setting.sound_notification = 1;\r\n    else\r\n      this.setting.sound_notification = 0;\r\n  }\r\n\r\n  switchMail(event) {\r\n    this.checkedMail = !this.checkedMail;\r\n    // console.log(this.checkedMail);\r\n    if (this.checkedMail)\r\n      this.setting.mail_notification = 1;\r\n    else\r\n      this.setting.mail_notification = 0;\r\n  }\r\n\r\n  switchMessage(event) {\r\n    this.checkedMessage = !this.checkedMessage;\r\n    // console.log(this.checkedMessage);\r\n    if (this.checkedMessage)\r\n      this.setting.sound_message = 1;\r\n    else\r\n      this.setting.sound_message = 0;\r\n  }\r\n\r\n  profilChoose(fileInput) {\r\n    this.file =  fileInput.target.files[0];\r\n    var mimeType: any;\r\n    var reader = new FileReader();\r\n    mimeType = this.file.type;\r\n    if (!(mimeType === \"image/png\" || mimeType === \"image/jpeg\")) return false;\r\n    reader = new FileReader();\r\n    reader.readAsDataURL(this.file);\r\n    reader.onload = (event) => {\r\n      this.info.path_soft = reader.result;\r\n      // this.nameRecto = this.fileRecto.name;\r\n    };\r\n\r\n    this.formData.delete('file');\r\n    this.formData.append('file', this.file, this.file.name);\r\n    this.profileService.updatePhoto(this.formData).subscribe(\r\n      (events) => {\r\n        if (events.type === HttpEventType.UploadProgress) {\r\n          // this.fileUploadProgress = Math.round(events.loaded / events.total * 100) + '%';\r\n        }\r\n        else if (events.type === HttpEventType.Response) {\r\n          const path  = events.body.path;\r\n          this.info.path_soft = path;\r\n        }\r\n      }, (error) => {\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  async saveSetting() {\r\n    this.profileService.updateSetting(this.setting).subscribe(\r\n      (data) => {\r\n        this.profileService.updateInfo(this.info).subscribe(\r\n          (data) => {\r\n              this.notificationService.success(\"Modification\", \"Terminé avec succès\")\r\n          }\r\n        )\r\n      }\r\n    );\r\n  }\r\n\r\n  restoreSetting() {\r\n    this.info.path_soft = this.originalInfo.path_soft;\r\n    this.setting.sound_notification = this.originalSetting.sound_notification;\r\n    this.setting.sound_message = this.originalSetting.sound_message;\r\n    this.setting.mail_notification = this.originalSetting.mail_notification;\r\n  }\r\n\r\n}\r\n","<div class=\"main_info\">\n  <div class=\"title_info\">\n    PARAMETRE DU COMPTE\n  </div>\n  <div class=\"line\"></div>\n\n  <div class=\"container-fluid contain_info\">\n\n    <!-- <div class=\"contain_photo\">\n      <img [src]=\"info.path_soft\" alt=\"\" class=\"photo_soft\">\n      <button (click)=\"fileInput.click()\" class=\"camera\" >\n        <img [src]=\"photoImg\" alt=\"\">\n      </button>\n    </div>\n    <input type=\"file\" #fileInput style=\"visibility: hidden;\"\n    accept=\"image/x-png,image/gif,image/jpeg\" (change)=\"profilChoose($event)\"> -->\n\n    <div class=\"row\">\n      <div class=\"col-lg-6\">\n        <div class=\"content_field\">\n          <label for=\"pseudo\">Pseudo</label>\n          <input type=\"text\" class=\"input_field\" placeholder=\"Mon pseudo\"\n          [(ngModel)]=\"info.pseudo\" disabled>\n        </div>\n      </div>\n      <div class=\"col-lg-6\">\n        <div class=\"content_field\">\n          <label for=\"email\">Email</label>\n          <input type=\"text\" class=\"input_field\" placeholder=\"Mon adresse email\"\n          [(ngModel)]=\"info.email\" disabled style=\"cursor: no-drop;\">\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-lg-6\">\n        <div class=\"content_field\">\n          <label for=\"cin\">CIN</label>\n          <input type=\"text\" class=\"input_field\" placeholder=\"CIN\"\n          [(ngModel)]=\"info.cin\" disabled>\n        </div>\n      </div>\n      <div class=\"col-lg-6\">\n        <div class=\"content_field\">\n          <label for=\"naissance\">Date de naissance</label>\n          <input type=\"text\" class=\"input_field\" placeholder=\"Date de naissance\"\n          [(ngModel)]=\"info.date_birth\" disabled>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row contain_setting\">\n      <div class=\"col-lg-6\">\n        <div class=\"contain_param\">\n          <div>\n            son des notifications\n          </div>\n          <p>\n            Activer / Désactiver les sons de notification\n          </p>\n        </div>\n      </div>\n      <div class=\"col-lg-6\">\n        <div class=\"contain_switch\">\n          <mat-slide-toggle\n          class=\"toogle toggleActivate\"\n          [color]=\"colorSwitch\"\n          [checked]=\"setting.sound_notification === 1\"\n          [disabled]=\"setting.sound_notification == 0\"\n          (change)=\"switchSound($event)\">\n          </mat-slide-toggle>\n          <mat-slide-toggle\n          class=\"toogle toggleDeactivate\"\n          [color]=\"colorSwitch\"\n          [checked]=\"setting.sound_notification === 0\"\n          [disabled]=\"setting.sound_notification == 1\"\n          (change)=\"switchSound($event)\">\n          </mat-slide-toggle>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row contain_setting\">\n      <div class=\"col-lg-6\">\n        <div class=\"contain_param\">\n          <div>\n            notification par mail\n          </div>\n          <p>\n            Activer / Désactiver les sons par mail\n          </p>\n        </div>\n      </div>\n      <div class=\"col-lg-6\">\n        <div class=\"contain_switch\">\n          <mat-slide-toggle\n          class=\"toogle toggleActivate\"\n          [color]=\"colorSwitch\"\n          [checked]=\"setting.mail_notification == 1\"\n          [disabled]=\"setting.mail_notification == 0\"\n          (change)=\"switchMail($event)\">\n          </mat-slide-toggle>\n          <mat-slide-toggle\n          class=\"toogle toggleDeactivate\"\n          [color]=\"colorSwitch\"\n          [checked]=\"setting.mail_notification == 0\"\n          [disabled]=\"setting.mail_notification == 1\"\n          (change)=\"switchMail($event)\">\n          </mat-slide-toggle>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row contain_setting\">\n      <div class=\"col-lg-6\">\n        <div class=\"contain_param\">\n          <div>\n            son des messages\n          </div>\n          <p>\n            Activer / Désactiver les sons de messages\n          </p>\n        </div>\n      </div>\n      <div class=\"col-lg-6\">\n        <div class=\"contain_switch\">\n          <mat-slide-toggle\n          class=\"toogle toggleActivate\"\n          [color]=\"colorSwitch\"\n          [checked]=\"setting.sound_message == 1\"\n          [disabled]=\"setting.sound_message == 0\"\n          (change)=\"switchMessage($event)\">\n          </mat-slide-toggle>\n          <mat-slide-toggle\n          class=\"toogle toggleDeactivate\"\n          [color]=\"colorSwitch\"\n          [checked]=\"setting.sound_message == 0\"\n          [disabled]=\"setting.sound_message == 1\"\n          (change)=\"switchMessage($event)\">\n          </mat-slide-toggle>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-lg-4 offset-lg-1\">\n        <div class=\"contain_button\">\n          <button class=\"btn_cancel\" (click)=\"restoreSetting()\">\n            ANNULER\n          </button>\n        </div>\n      </div>\n      <div class=\"col-lg-4 offset-lg-2\">\n        <div class=\"contain_button\">\n          <button class=\"btn_save\" (click)=\"saveSetting()\">\n            ENREGISTRER\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","<div class=\"text_album\" (click)=\"show()\">\n  <p class=\"para1\">Albums </p>\n  <p class=\"para2\"></p>\n  <p class=\"para3\"></p>\n</div>\n\n<div class=\"contain_album\" *ngIf=\"showed\">\n  <div class=\"list_album\" *ngFor=\"let album of albums\">\n    <img [src]=\"album.url\" alt=\"\">\n  </div>\n</div>\n\n<div style=\"position: relative;\">\n  <div class=\"lds-spinner\" *ngIf=\"loading\">\n    <div></div><div></div><div></div><div></div>\n    <div></div><div></div><div></div><div></div>\n    <div></div><div></div><div></div><div></div>\n  </div>\n</div>\n\n\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-album-live',\n  templateUrl: './album-live.component.html',\n  styleUrls: ['./album-live.component.scss']\n})\nexport class AlbumLiveComponent implements OnInit {\n  @Input()\n  albums: any[] = [];\n\n  showed: boolean = false;\n  loading: boolean = false;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  show() {\n    this.showed = !this.showed;\n    if (this.showed) {\n      this.loading = true;\n      setTimeout(() => {\n        this.loading = false\n      }, 500);\n    }\n  }\n\n}\n","<app-header actif=\"2\" connected=\"true\" model=\"true\"></app-header>\n\n<div class=\"main_album\">\n    <div class=\"head_album\"\n    [ngStyle]=\"{'background-image': 'linear-gradient(90deg, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0)),url(' + bannier + ')'}\">\n    <div class=\"profil\">\n        <img [defaultImage]=\"defaultImage\" alt=\"\"\n        [lazyLoad]=\"info.path_soft\" id=\"profil\"/>\n\n        <div class=\"content_camera\" (click)=\"fileInput.click()\">\n          <img [src]=\"photoAdd\" alt=\"\" id=\"photoAdd\">\n        </div>\n      </div>\n    </div>\n\n    <div class=\"under_head_album\" id=\"scrolled_point\">\n      <div class=\"info_model info_mobile\">\n        <div class=\"name_model\">\n          {{info.pseudo}}\n        </div>\n        <!-- <div class=\"status_model\">\n          Les albums de votre carrière\n        </div> -->\n      </div>\n      <div class=\"menu_album\">\n        <div class=\"text_menu\" (click)=\"initAlbum('private')\" [ngClass]=\"{'active': contextAlbum === 'private'}\">Photos privées</div>\n        <div class=\"text_menu\" (click)=\"initAlbum('vip')\" [ngClass]=\"{'active': contextAlbum === 'vip'}\">Albums VIP</div>\n        <div class=\"text_menu menu_shadow\" style=\"opacity: 0;\">album vide</div>\n        <div class=\"text_menu\" (click)=\"initAlbum('free')\" [ngClass]=\"{'active': contextAlbum === 'free'}\">Albums Free</div>\n        <div class=\"text_menu\">Vidéos</div>\n      </div>\n      <div class=\"info_model info_desktop\">\n        <div class=\"name_model\">\n          {{info.pseudo}}\n        </div>\n        <!-- <div class=\"status_model\">\n          Les albums de votre carrière\n        </div> -->\n      </div>\n    </div>\n\n    <div class=\"title_album\">\n      {{textAlbum}}\n      <span *ngIf=\"totalAlbum == 0\">( 0 )</span>\n      <span *ngIf=\"totalAlbum != 0\">(<span *ngIf=\"totalAlbum < 10\">0</span>{{totalAlbum}} ) </span>\n    </div>\n\n    <div class=\"contain_btn_add\">\n      <button class=\"btn_add_album lighter\" (click)=\"fileUpload.click()\">\n          <img [src]=\"photoAdd\" alt=\"\">\n          AJOUTER PHOTO\n      </button>\n    </div>\n\n    <div class=\"container-fluid list_album\">\n      <div class=\"row\" *ngIf=\"currentAlbum.length === 0\">\n        <div class=\"col-lg-12 no_photo\">\n          Aucune photo\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-lg-4\" *ngFor=\"let item of currentAlbum\">\n          <!-- [ngStyle]=\"{'background-image': 'url('+ item +')'}\" -->\n          <div class=\"album\">\n            <img [defaultImage]=\"defaultImage\" alt=\"\"\n            [lazyLoad]=\"item.path_album\"\n            class=\"album_item img-responsive\"\n            (click)=\"openImage(item.id, item.path_album)\"/>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-lg-6\">\n          <button class=\"btn_prev btn_action lighter\" (click)=\"take('prev')\">\n            <span class=\"arrow\">&lt;</span> &nbsp;précédent\n          </button>\n        </div>\n        <div class=\"col-lg-6\">\n          <button class=\"btn_prev btn_action lighter\" (click)=\"take('next')\">\n            suivant&nbsp; <span class=\"arrow\">&gt;</span>\n          </button>\n        </div>\n      </div>\n    </div>\n\n</div>\n\n<input type=\"file\" id=\"btn_add_photo\" multiple #fileUpload\nstyle=\"visibility: hidden;\" accept=\"image/x-png,image/gif,image/jpeg\"\n(change)=\"fileChoose($event)\">\n\n\n<input type=\"file\" #fileInput style=\"visibility: hidden;\"\naccept=\"image/x-png,image/gif,image/jpeg\" (change)=\"profilChoose($event)\">\n\n<div class=\"lds-spinner\" *ngIf=\"loading\">\n  <div></div><div></div><div></div><div></div>\n  <div></div><div></div><div></div><div></div>\n  <div></div><div></div><div></div><div></div>\n  </div>\n","import { AuthService } from 'src/app/services/auth/auth.service';\r\nimport { HeaderService } from './../../../services/header/header.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport * as $ from 'jquery';\r\nimport { AlbumService } from '../../../services/album/album.service';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NotificationService } from '../../../services/notification/notification.service';\r\nimport { HttpEventType } from '@angular/common/http';\r\nimport { addAlbum } from '../../../interfaces/add-album.interface';\r\nimport { ProfilService } from '../../../services/profil/profil.service';\r\nimport { PopupImageComponent } from '../../../modals/popup-image/popup-image.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-albums',\r\n  templateUrl: './albums.component.html',\r\n  styleUrls: ['./albums.component.scss']\r\n})\r\nexport class AlbumsComponent implements OnInit {\r\n  defaultImage = 'assets/images/blured.jpg';\r\n\r\n  bg = \"assets/images/bg.jpg\";\r\n  profil = \"assets/images/image.png\";\r\n  photoAdd = \"assets/icons/photoAdd.svg\";\r\n  bannier = \"assets/logos/dark-light.jpg\";\r\n\r\n\r\n  totalAlbum: number  = 0;\r\n  sectionAlbum: number = 9;\r\n  page: number = 0;\r\n\r\n  contextAlbum = \"private\";\r\n  currentAlbum: addAlbum[] = [];\r\n  textAlbum: any;\r\n  fileData: File = null;\r\n  previewData: any;\r\n  nameData: any;\r\n\r\n  albums: File[] = [];\r\n  file: File;\r\n  fileUploadProgress: string;\r\n\r\n  count = {\r\n    \"vip\": 0,\r\n    \"private\": 0,\r\n    \"free\": 0\r\n  }\r\n\r\n  info = {\r\n    pseudo: '',\r\n    email: '',\r\n    path_soft: null\r\n  }\r\n\r\n  formData = new FormData();\r\n\r\n  loading: boolean = false;\r\n\r\n  constructor(\r\n    private profileService: ProfilService,\r\n    private route: ActivatedRoute ,\r\n    private notificationService: NotificationService,\r\n    private albumService: AlbumService,\r\n    private dialog: MatDialog){\r\n    let param = this.route.snapshot.queryParamMap.get('context');\r\n    if (param != null) {this.contextAlbum = param;}\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initAlbum(this.contextAlbum);\r\n    this.countAlbum();\r\n    this.getInfo();\r\n  }\r\n\r\n  getInfo() {\r\n    this.profileService.getInfo().subscribe(\r\n      (data: any) => {\r\n        // console.log('album ', data);\r\n        this.info = data;\r\n      }\r\n    )\r\n  }\r\n\r\n  async countAlbum() {\r\n    this.albumService.getCount().subscribe(\r\n      (data) => {\r\n        this.count = data;\r\n        if (this.contextAlbum == 'private')\r\n          this.totalAlbum = this.count.private; // Default onglet\r\n        else if (this.contextAlbum == 'vip')\r\n          this.totalAlbum = this.count.vip; // Default onglet\r\n        else if (this.contextAlbum == 'free')\r\n          this.totalAlbum = this.count.free; // Default onglet\r\n      }\r\n    )\r\n  }\r\n\r\n  async fetchAlbum(debut: number) {\r\n    this.loading = true;\r\n    this.currentAlbum = [];\r\n    await (await this.albumService.getAlbums(this.contextAlbum, debut, 9)).subscribe(\r\n      (data) => {\r\n        this.currentAlbum = data;\r\n        // console.log(this.currentAlbum);\r\n        this.loading = false;\r\n      }, (error) => {\r\n        this.loading = false;\r\n      }\r\n    )\r\n  }\r\n\r\n  // context : private |vip | free\r\n  initAlbum(context: string) {\r\n    this.contextAlbum = context;\r\n    var verified  = false;\r\n    switch (context) {\r\n      case 'private':\r\n        verified = true;\r\n        this.totalAlbum = this.count.private;\r\n        this.textAlbum = \"Contenu Privés\";\r\n        break;\r\n      case 'vip':\r\n        verified = true;\r\n        this.totalAlbum = this.count.vip;\r\n        this.textAlbum = \"Album VIP\";\r\n        break;\r\n      case 'free':\r\n        verified = true;\r\n        this.totalAlbum = this.count.free;\r\n        this.textAlbum = \"Album Free\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    if (verified) {\r\n      this.fetchAlbum(0);\r\n    }\r\n  }\r\n\r\n\r\n  // action: prev | next\r\n  take(action: string) {\r\n    if (action === \"next\") {\r\n      this.page =  this.page + 1;\r\n      var marge = Math.floor((this.totalAlbum/this.sectionAlbum) - 0.1); // - 0.1 avoid just division result\r\n      if (this.page <= marge) {\r\n        this.fetchAlbum(this.page * this.sectionAlbum);\r\n        this.scroll();\r\n      } else { this.page = this.page -1;}\r\n    } else if (action === \"prev\" && this.page > 0) {\r\n      this.page = this.page - 1;\r\n      this.fetchAlbum(this.page * this.sectionAlbum);\r\n      this.scroll();\r\n    }\r\n  }\r\n\r\n  verifyMimeType(mime: string) {\r\n    return (mime === \"image/png\" || mime === \"image/jpeg\" || mime === \"image/gif\");\r\n  }\r\n\r\n  scroll() {\r\n    document.querySelector('#scrolled_point').scrollIntoView();\r\n  }\r\n\r\n  async fileChoose(fileInput) {\r\n    const formData = new FormData();\r\n    let file: File;\r\n    for (let index = 0; index < fileInput.target.files.length; index++) {\r\n      file = fileInput.target.files[index];\r\n      const mimeType = file.type;\r\n      if (!this.verifyMimeType(mimeType)) {\r\n        this.notificationService.failure('Format invalide', 'Extension au format JPEG/PNG');\r\n        return false;\r\n      }\r\n      console.log(file)\r\n      formData.append('files', file, file.name);\r\n    }\r\n\r\n    this.fileUploadProgress = '0%';\r\n    this.loading = true;\r\n    return await this.albumService.uploadAlbumModel(formData).subscribe(\r\n      (events) => {\r\n        if (events.type === HttpEventType.UploadProgress) {\r\n          this.fileUploadProgress = Math.round(events.loaded / events.total * 100) + '%';\r\n        }\r\n        else if (events.type === HttpEventType.Response) {\r\n          const paths  = events.body.paths;\r\n          const albums: addAlbum[] = [];\r\n          for (let index = 0; index < paths.length; index++) {\r\n            albums.push({\r\n                \"type_album\": this.contextAlbum,\r\n                \"path_album\": paths[index]\r\n              })\r\n          }\r\n          this.albumService.addAlbums(albums).subscribe(\r\n            (data) => {\r\n              this.loading = false;\r\n              // this.notificationService.success(`Photo ${this.contextAlbum}`, \"Ajoutée\");\r\n              this.countAlbum();\r\n              this.fetchAlbum(this.page * this.sectionAlbum);\r\n            }, (error) => {\r\n              this.loading = false;\r\n              console.log(error);\r\n            }\r\n          )\r\n        }\r\n      }, (error) => {\r\n        console.log(error);\r\n        this.loading = false;\r\n      }\r\n    )\r\n  }\r\n\r\n  async profilChoose(fileInput) {\r\n    this.file =  fileInput.target.files[0];\r\n    var mimeType: any;\r\n    var reader = new FileReader();\r\n    mimeType = this.file.type;\r\n    if (!(mimeType === \"image/png\" || mimeType === \"image/jpeg\")) return false;\r\n    reader = new FileReader();\r\n    reader.readAsDataURL(this.file);\r\n    reader.onload = (event) => {\r\n      this.info.path_soft = reader.result;\r\n      // this.nameRecto = this.fileRecto.name;\r\n    };\r\n\r\n    this.formData.delete('file');\r\n    this.formData.append('file', this.file, this.file.name);\r\n    this.loading = true;\r\n    this.profileService.updatePhoto(this.formData).subscribe(\r\n      async (events) => {\r\n        if (events.type === HttpEventType.UploadProgress) {\r\n          // this.fileUploadProgress = Math.round(events.loaded / events.total * 100) + '%';\r\n        }\r\n        else if (events.type === HttpEventType.Response) {\r\n          const path  = events.body.path;\r\n          this.info.path_soft = path;\r\n          await this.saveSetting();\r\n          this.loading = false;\r\n        }\r\n      }, (error) => {\r\n        console.log(error);\r\n        this.loading = false;\r\n      }\r\n    )\r\n  }\r\n\r\n  async saveSetting() {\r\n        this.loading = true;\r\n        this.profileService.updateInfo(this.info).subscribe(\r\n          (data) => {\r\n              // this.notificationService.success(\"Modification\", \"Terminé avec succès\")\r\n              this.loading = false;\r\n          }, (error) => {\r\n            this.loading = false;\r\n          }\r\n        )\r\n  }\r\n\r\n  openImage(id: number, url: string) {\r\n    let dialogRef = this.dialog.open(PopupImageComponent, {\r\n      width: '100vh',\r\n      data: {\r\n        id,\r\n        url,\r\n        type: this.contextAlbum\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe((data) => {\r\n      if (data === 'success') this.ngOnInit();\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"contain\">\n  <h2 mat-dialog-title>Pack de crédit</h2>\n  <mat-dialog-content>\n    <div class=\"container-fluid main_pack\">\n      <div class=\"row\">\n      </div>\n      <div class=\"row\">\n        <div class=\"col-lg-6\">\n          <div class=\"list_pack\">\n            <div class=\"pack\" *ngFor=\"let item of listPack; let i = index\"\n            (click)=\"choosePack(i)\" [ngClass]=\"{'selected': currentOnglet === i}\">\n              &nbsp;&nbsp;&nbsp; Pack {{item}}\n            </div>\n          </div>\n        </div>\n        <div class=\"col-lg-6\">\n          <div class=\"list_pack\">\n            <div class=\"pack\" *ngFor=\"let pack of currentPack; let i = index\"\n            [ngClass]=\"{'selected': currentSelected === i}\">\n              <div class=\"pack_item\">\n                <div class=\"pack_value\"\n                (click)=\"chooseMontant(i ,pack.montant, pack.credit)\">\n                  <div>{{pack.credit}} crédit</div>\n                  <div>-</div>\n                  <div>{{pack.montant}} $</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"contain_credit\">\n        Solde : {{credit}} crédit<span *ngIf=\"credit > 2\">s</span>\n      </div>\n\n    </div>\n  </mat-dialog-content>\n\n  <mat-dialog-actions>\n    <button class=\"btn_cancel\" mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Annuler</button>\n    <button class=\"btn_valid\" (click)=\"validate()\">Confirmer</button>\n  </mat-dialog-actions>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Pack } from 'src/app/interfaces/pack-credit.interface';\nimport { ClientService } from 'src/app/services/client/client.service';\nimport { CreditService } from '../../services/credit/credit.service';\nimport { LocalStorageService } from 'ngx-localstorage';\nimport { NotificationService } from '../../services/notification/notification.service';\nimport { PaiementService } from '../../services/paiement/paiement.service';\n\n@Component({\n  selector: 'app-pack-modal',\n  templateUrl: './pack-modal.component.html',\n  styleUrls: ['./pack-modal.component.scss']\n})\nexport class PackModalComponent implements OnInit {\n  currentOnglet = null;\n  currentSelected = null;\n  montantSelected: number = null;\n  creditSelected: number = null;\n\n  currentPack: Pack[] = [];\n\n  clientId: number = null;\n  credit: number = 0;\n  creditId: number = 0;\n\n  listPack: string [] = this.creditService.listPack;\n\n  packBienvenue: Pack[] = this.creditService.packBienvenue;\n\n  packBronze: Pack[] = this.creditService.packBronze;\n\n  packArgent: Pack[] = this.creditService.packArgent;\n\n  packOr: Pack[] = this.creditService.packOr;\n\n  constructor(\n    private creditService: CreditService,\n    private clientService: ClientService,\n    private paiementService: PaiementService,\n    private store: LocalStorageService,\n    private notificationService: NotificationService,\n    public dialogRef: MatDialogRef<PackModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.getMyCredit();\n    // this.currentPack = this.packBienvenue;\n  }\n\n  // Get client credit\n  async getMyCredit() {\n      const id = parseInt(this.store.get('identification//'));\n      await this.clientService.getMyInfos().subscribe(\n        (data) => {\n          // console.log('Mon credit ', data);\n          this.credit = data.credit ? data.credit.credit : 0;\n          this.creditId = data.credit ? data.credit.id : 0;\n          this.clientId = data.id;\n        }\n      )\n  }\n\n  choosePack(id: number) {\n    this.currentOnglet = id;\n    this.currentSelected = null;\n    this.montantSelected = null;\n    this.creditSelected = null;\n\n    switch (id) {\n      case 0:\n        this.currentPack = this.packBienvenue;\n        break;\n\n      case 1:\n        this.currentPack = this.packBronze;\n        break;\n\n      case 2:\n        this.currentPack = this.packArgent;\n        break;\n\n      case 3:\n        this.currentPack = this.packOr;\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  chooseMontant(index: number, montant: number, credit: number) {\n    this.currentSelected = index;\n    this.montantSelected = montant;\n    this.creditSelected = credit;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  async validate(): Promise<void> {\n    if ((this.currentSelected == null) || (this.montantSelected == null) || (this.creditSelected == null)) return null;\n    await this.buyPack(this.montantSelected, this.creditSelected);\n  }\n\n  async buyPack(montant: number, credit: number) {\n    if (this.creditId === 0) return false;\n    this.creditService.buyCreditClient(montant, credit, this.creditId, this.clientId).subscribe(\n      async (data) => {\n        await this.getMyCredit().then(\n          (data) => {\n            this.paiementService.buyPack(credit).subscribe(\n              (data) => {\n                this.notificationService.success(`Pack ${this.listPack[this.currentOnglet]}`,\n                `Vous avez obtenu ${credit} crédits de plus.`);\n              }, (error) => {\n                console.log(error)\n              }\n            )\n            this.dialogRef.close();\n          }\n        );\n      }\n    )\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Socket } from 'ngx-socket-io';\nimport { RoomPrivateService } from '../roomPrivate/room-private.service';\n\nexport interface ChatSocket {\n  room: string;\n  role: string;\n  id: number;\n  message: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n\n  messages: Observable<any>;\n  constructor(\n    private socket: Socket,\n    private roomPrivateService: RoomPrivateService) {}\n\n  listen(eventName: string) {\n    return new Observable((subscriber: any) => {\n      this.socket.on(eventName, (data) => {\n        subscriber.next(data);\n      })\n    })\n  }\n\n  async emit(eventName, data) {\n    return await this.socket.emit(eventName, data);\n  }\n\n  sendMessage(data: ChatSocket) {\n    this.socket.emit('message', data);\n  }\n\n\n  join(idRoom: number, modelId: number) {\n    const data = {\n      room: idRoom + '',\n      modelId: modelId,\n      show: 'free'\n    }\n    this.socket.emit('join', data)\n  }\n\n  leave(idRoom: number, role: string) {\n    const data = {\n      room: idRoom + '',\n      role: role,\n      show: 'free'\n    }\n    this.socket.emit('leave', data)\n  }\n\n  async joinPrivate(idRoom: number, modelId: number, clientId?: number, clientPseudo?: string, clientPeer?: string) {\n    const data = {\n      room: idRoom + 'P',\n      modelId: modelId,\n      show: 'private',\n      clientId,\n      clientPseudo,\n      clientPeer\n    }\n    this.socket.emit('join', data)\n  }\n\n  async leavePrivate(idRoom: number, role: string, clientId: number) {\n    const data = {\n      room: idRoom + 'P',\n      role: role,\n      show: 'private',\n      clientId\n    }\n    this.socket.emit('leave', data)\n    return await this.roomPrivateService.updateActif(idRoom, false, 'private');\n  }\n\n  async joinVip(idRoom: number, modelId: number) {\n    const data = {\n      room: idRoom + 'V',\n      modelId: modelId,\n      show: 'vip'\n    }\n    this.socket.emit('join', data)\n  }\n\n  async leaveVip(idRoom: number, role: string) {\n    const data = {\n      room: idRoom + 'V',\n      role: role,\n      show: 'vip'\n    }\n    return await this.socket.emit('leave', data)\n  }\n\n  async sendClientPeerId(data: {peerId: any, room: string}) {\n    return await this.socket.emit('peerId', data)\n  }\n\n  async askModelPeerId(data: {peerId: any, room: string, clientId: number}) {\n    return await this.socket.emit('ask peerId', data)\n  }\n\n  async ansModelPeerId(data: {peerId: any, room: string, clientId: number}) {\n    console.log(\"Answer \", data);\n    return await this.socket.emit('ans peerId', data)\n  }\n\n  async newPeerIdModel(data: {role: string, modelId: number, room: string, peerId: string}) {\n    return await this.socket.emit('new model peerId', data)\n  }\n\n  async clientInviteModelToPrivate(roomId: number, clientId: number, clientPseudo: string, modelId: number) {\n    const data = {\n      roomId,\n      clientId,\n      clientPseudo,\n      modelId\n    }\n    return await this.socket.emit('invite model to private', data)\n  }\n\n  async responseInvitationModelToPrivate(roomId: number, clientId: number, modelId: number, modelPseudo: string) {\n    const data = {\n      roomId,\n      clientId,\n      modelId,\n      modelPseudo\n    }\n    return await this.socket.emit('response invitation to private', data)\n  }\n\n  async clientInviteModelToVIP(roomId: any, clientId: number, clientPseudo: string, modelId: number) {\n    const data = {\n      roomId,\n      clientId,\n      clientPseudo,\n      modelId\n    }\n    return await this.socket.emit('invite model to vip', data)\n  }\n\n\n  async responsePositiveInvitationModelToVIP(roomId: any, clientId: number, modelId: number, modelPseudo: string) {\n    const data = {\n      roomId,\n      clientId,\n      modelId,\n      modelPseudo\n    }\n    return await this.socket.emit('response positive invitation model to vip', data)\n  }\n\n  async responseNegativeInvitationModelToVIP(roomId: any, clientId: number, modelId: number, modelPseudo: string) {\n    const data = {\n      roomId,\n      clientId,\n      modelId,\n      modelPseudo\n    }\n    return await this.socket.emit('response negative invitation model to vip', data)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { cloneDeep } from 'lodash';\nimport { ModelService } from '../../../../services/model/model.service';\nimport { RoomVipService } from '../../../../services/roomVip/room-vip.service';\nimport { RoomPrivateService } from '../../../../services/roomPrivate/room-private.service';\n\ninterface Gain {\n  date: string,\n  gainVIP: number,\n  gainPrivate: number\n}\n\n@Component({\n  selector: 'app-gain',\n  templateUrl: './gain.component.html',\n  styleUrls: ['./gain.component.scss']\n})\nexport class GainComponent implements OnInit {\n  options: any;\n  updating: boolean = false;\n  gain: Gain[] = [\n    {date:  \"01/01/2020\", gainVIP: 50, gainPrivate: 50},\n    {date:  \"02/01/2020\", gainVIP: 70, gainPrivate: 10},\n    {date:  \"03/01/2020\", gainVIP: 30, gainPrivate: 120},\n    {date:  \"04/01/2020\", gainVIP: 100, gainPrivate: 100},\n    {date:  \"05/01/2020\", gainVIP: 120, gainPrivate: 50},\n    {date:  \"06/01/2020\", gainVIP: 50, gainPrivate: 90},\n    {date:  \"07/01/2020\", gainVIP: 80, gainPrivate: 150},\n  ];\n\n  info = {\n    modelId: 0,\n    modelPseudo: null\n  }\n\n  constructor(\n    private modelService: ModelService,\n    private roomVIPService: RoomVipService,\n    private roomPrivateService: RoomPrivateService\n  ) {\n    this.options = {\n      autoSize: true,\n      data: this.getData(),\n      series: [\n        {\n          xKey: 'date',\n          yKey: 'gainVIP',\n          yName: 'Gain VIP',\n          stroke: '#FB77FC',\n          marker: {\n            size: 2,\n            fill: '#FB77FC',\n            stroke: '#FB77FC',\n          },\n        },\n        {\n          xKey: 'date',\n          yKey: 'gainPrivate',\n          yName: 'Gain Privée',\n          stroke: '#4E009F',\n          marker: {\n            size: 2,\n            fill: '#4E009F',\n            stroke: '#4E009F',\n            color: '#fff'\n          },\n        }\n      ],\n      axes: [\n        {\n          type: 'category',\n          position: 'bottom',\n          nice: false,\n          // tick: { count: agCharts.time.second.every(3), color:  \"rgb(255, 255, 255)\"},\n          tick: { count: 0,color:  \"rgb(255, 255, 255)\"},\n          label: { format: '%m/%d/%Y', color:  \"rgb(255, 255, 255)\" },\n        },\n        {\n          type: 'number',\n          position: 'left',\n          label: { format: '#{.0f}', color:  \"#fff\"}\n        }\n      ],\n      background: {\n        fill: \"#FFF\",\n        visible: false\n      },\n      tooltip: {\n        enabled: true\n      },\n      navigator: {\n        enabled: true\n      },\n      title: { text: '' },\n      legend: {\n        position: 'bottom',\n        enabled: true,\n        item: {\n          label: {\n            color: 'white'\n          }\n        }\n      }\n    };\n  }\n\n  ngOnInit(): void {\n    this.getInfoModel();\n    this.startUpdates();\n    this.useDefaultGridStyle();\n  }\n\n  useDefaultGridStyle = () => {\n    const options = cloneDeep(this.options);\n\n    var gridStyle = [\n      {\n        stroke: 'white',\n        lineDash: [2, 1],\n      },\n    ];\n    options.axes[0].gridStyle = gridStyle;\n    options.axes[1].gridStyle = gridStyle;\n\n    this.options = options;\n  };\n\n  update = () => {\n    const options = cloneDeep(this.options);\n\n    options.data = this.getData();\n\n    this.options = options;\n  };\n\n  startUpdates = () => {\n    if (this.updating) {\n      return;\n    }\n    this.updating = true;\n    this.update();\n    setInterval(this.update, 1000);\n  };\n\n  getData() {\n    this.updating = false;\n    return this.gain;\n  }\n\n  getInfoModel() {\n    this.modelService.getInfo().subscribe(\n      (data) => {\n        // console.log(data);\n        this.info.modelId = data.id;\n        this.info.modelPseudo = data.pseudo;\n        this.gain = [];\n        this.getGainVip(data.id);\n        this.getGainPrivate(data.id);\n      }\n    )\n  }\n\n  getGainVip(id: number) {\n    this.roomVIPService.getGain(id).subscribe(\n      (data: [{createdAt: any, gain: number}]) => {\n        // console.log(\"Gain VIP \", data);\n        const result = data;\n        result.forEach(\n          (gain) => {\n            const gainTmp: Gain = {\n              date: this.getDate(gain.createdAt),\n              gainVIP: gain.gain,\n              gainPrivate: 0\n            }\n\n            this.insertGainVIP(gainTmp);\n          }\n        )\n        console.log(this.gain);\n      }\n    )\n  }\n\n  getGainPrivate(id: number) {\n    this.roomPrivateService.getGain(id).subscribe(\n      (data: [{createdAt: any, gain: number}]) => {\n        // console.log(\"Gain Private \", data);\n        const result = data;\n        result.forEach(\n          (gain) => {\n            const gainTmp: Gain = {\n              date: this.getDate(gain.createdAt),\n              gainVIP: 0,\n              gainPrivate: gain.gain\n            }\n            this.insertGainPrivate(gainTmp);\n          }\n        )\n        console.log(this.gain);\n      }\n    )\n  }\n\n  getDate(date: string) {\n    let year = date.substring(0, 4);\n    let month = date.substring(5, 7);\n    let day = date.substring(8, 10);\n    const result = day+'/'+month+'/'+year;\n    return result;\n  }\n\n  insertGainPrivate(gain: Gain) {\n    let exist = false;\n    for(let i = 0; i < this.gain.length; i++) {\n      if (this.gain[i].date === gain.date) {\n        this.gain[i].gainPrivate = this.gain[i].gainPrivate + gain.gainPrivate\n        exist = true\n        return true\n      }\n    }\n    if (!exist) this.gain.push(gain)\n  }\n\n  insertGainVIP(gain: Gain) {\n    let exist = false;\n    for(let i = 0; i < this.gain.length; i++) {\n      if (this.gain[i].date === gain.date) {\n        this.gain[i].gainVIP = this.gain[i].gainVIP + gain.gainVIP\n        exist = true\n        return true\n      }\n    }\n    if (!exist) this.gain.push(gain)\n  }\n}\n\n","<div class=\"main_content\">\n  <div class=\"title_gain\">\n    HISTORIQUE DES GAINS\n  </div>\n\n  <div class=\"contain_line\">\n    <div class=\"wrapper\">\n      <ag-charts-angular\n        style=\"height: 70vh; width: 100%; overflow: hidden\"\n        [options]=\"options\"\n      ></ag-charts-angular>\n    </div>\n  </div>\n</div>\n","<app-header></app-header>\n\n<div class=\"contain_signup_one\">\n  <div class=\"inside_sign part_one\">\n    <h2>RECUPERATION <br> DU MOT DE PASSE</h2>\n    <div class=\"blank\"></div>\n  </div>\n</div>\n\n<div class=\"contain_signup_two inside_sign\">\n  <h3 class=\"title\">\n    Récupération  <br>\n    du mot de passe oublié\n  </h3>\n\n  <div class=\"descr\">\n      BETWEEN<span class=\"under_bold\">US</span>.LIVE <br>\n      Vous avez oublié le mot de passe ? <br>\n      Veuillez soumettre votre email. <br>\n      Un email de reinitialisation sera envoyé pour confirmation.\n  </div>\n\n  <form autocomplete=\"off\" (ngSubmit)=\"send()\">\n    <div class=\"form-group\">\n      <label for=\"pseudo\">Email *</label>\n      <input type=\"email\" name=\"email\" class=\"form-control input lighter\" [(ngModel)]=\"email\" required>\n      <div *ngIf=\"error\">\n        <small class=\"form-text error-text\">Veuillez compléter</small>\n      </div>\n    </div>\n\n    <div class=\"notif\">\n      * Champ obligatoire\n    </div>\n\n    <div class=\"action\">\n      <button class=\"btn btn_signup lighter\" type=\"submit\">\n        <div class=\"loader\" *ngIf=\"loading\"></div>\n        <span *ngIf=\"!loading\">ENVOYER</span>\n      </button>\n    </div>\n  </form>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ClientService } from '../../../services/client/client.service';\nimport { NotificationService } from '../../../services/notification/notification.service';\n\n@Component({\n  selector: 'app-send-forgot',\n  templateUrl: './send-forgot.component.html',\n  styleUrls: ['./send-forgot.component.scss']\n})\nexport class SendForgotComponent implements OnInit {\n  loading: boolean = false;\n  email: string = null;\n  error: boolean = false;\n  constructor(\n    private clientService: ClientService,\n    private notificationService: NotificationService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  send() {\n    if (!this.email) {\n      this.error = true;\n      return null;\n    }\n    this.error = false;\n    this.loading = true;\n    this.clientService.forgot(this.email).subscribe(\n      (data: {success: boolean, message: string}) => {\n        this.loading = false;\n        // console.log(data);\n        if (data.success) {\n          this.notificationService.infoMsg(data.message);\n          this.email = null;\n        } else {\n          this.notificationService.errorMsg(data.message);\n        }\n      }, (error) => {\n        console.log(error);\n        this.loading = false;\n      }\n    )\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AdminService } from '../../../../../../services/admin/admin.service';\nimport { NotificationService } from '../../../../../../services/notification/notification.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MotifRejectComponent } from './motif-reject/motif-reject.component';\nimport { isBoolean } from 'util';\n\n@Component({\n  selector: 'app-detail-model-admin',\n  templateUrl: './detail-model-admin.component.html',\n  styleUrls: ['./detail-model-admin.component.scss']\n})\nexport class DetailModelAdminComponent implements OnInit {\n  defaultImage = './../../../../../../../assets/images/blured.jpg';\n\n  idClient: number  = null\n  client: any = {\n    firstname : '',\n    lastname : '',\n    date_birth : '',\n    path_recto : './../../../../../../../assets/images/blured.jpg',\n    path_verso : './../../../../../../../assets/images/blured.jpg',\n    path_soft : './../../../../../../../assets/images/blured.jpg',\n    path_cin : './../../../../../../../assets/images/blured.jpg',\n    state : ''\n  }\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private adminService: AdminService,\n    private notificationService: NotificationService,\n    private dialog: MatDialog\n  ) {\n    const idClient = this.route.snapshot.params.idClient\n    this.idClient = parseInt(idClient)\n    // console.log(this.idClient)\n  }\n\n  ngOnInit() {\n    if (!this.idClient) {\n      this.router.navigate(['/admin/les-demandes-modeles'])\n      return false\n    }\n    this.getInfos()\n  }\n\n  getInfos() {\n    this.adminService.getInfosModel(this.idClient).subscribe(\n      (data) => {\n        // console.log(data)\n        this.client = data\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  accept(accepted: boolean) {\n    if (accepted) {\n      this.adminService.acceptInscriptionModel(this.idClient, true, 'validé').subscribe(\n        (data) => {\n          this.notificationService.info('Inscription', 'Inscription validé')\n          this.router.navigate(['/admin/les-demandes-modeles'])\n        }, (error) => {\n          console.log(error)\n        }\n      )\n    } else {\n      const dialogRef = this.dialog.open(MotifRejectComponent, {\n        width: '50vh',\n      });\n\n      dialogRef.afterClosed().subscribe(result => {\n        // console.log(result);\n        if (isBoolean(result)) {\n          // console.log('Boolean iz io')\n        } else {\n          this.adminService.acceptInscriptionModel(this.idClient, false, result).subscribe(\n            (data) => {\n              this.notificationService.success('Inscription', 'Inscription rejeté')\n              this.router.navigate(['/admin/les-demandes-modeles'])\n            }, (error) => {\n              console.log(error)\n            }\n          )\n        }\n      });\n    }\n  }\n\n}\n","\n<app-infobar-admin title=\"Modèles\" subTitle=\"Modèles\"></app-infobar-admin>\n\n<div class=\"admin_container\">\n  <div class=\"admin_bottom_bar\">\n    DETAILS\n  </div>\n\n  <div class=\"contain_detail container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-lg-6\">\n        <div class=\"detail_left\">\n          <div class=\"title\">\n            information personnelle\n          </div>\n\n          <div class=\"contain_info\">\n            <div class=\"label_info\">NOM : </div>\n            <div class=\"value_info\">{{client.firstname}}</div>\n          </div>\n\n          <div class=\"contain_info\">\n            <div class=\"label_info\">PRENOM : </div>\n            <div class=\"value_info\">{{client.lastname}}</div>\n          </div>\n\n          <div class=\"contain_info\">\n            <div class=\"label_info\">DATE DE NAISSANCE : </div>\n            <div class=\"value_info\">{{client.date_birth}}</div>\n          </div>\n\n          <div class=\"contain_info\">\n            <div class=\"label_info\">PHOTO CIN : </div>\n            <div class=\"value_info\"></div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-lg-6\">\n              <div class=\"contain_img\">\n                <img [src]=\"client.path_recto\" alt=\"\" class=\"img_show\">\n              </div>\n            </div>\n            <div class=\"col-lg-6\">\n              <div class=\"contain_img\">\n                <img [src]=\"client.path_verso\" alt=\"\" class=\"img_show\">\n              </div>\n            </div>\n          </div>\n\n          <div class=\"contain_info\">\n            <div class=\"label_info\">PHOTO SOFT : </div>\n            <div class=\"value_info\"> </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-lg-12\">\n              <div class=\"contain_img\">\n                <img [src]=\"client.path_soft\" alt=\"\" class=\"img_show\">\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n      <div class=\"col-lg-6\">\n        <div class=\"detail_right\">\n          <div class=\"title_right\">\n            APERCU DE LA PHOTO AVEC LA CARTE D' IDENTITE\n          </div>\n\n          <div class=\"contain_cin\">\n            <img [src]=\"client.path_cin\" alt=\"\" class=\"img_show\">\n          </div>\n\n          <div class=\"contain_action\" *ngIf=\"client.state === 'En attente'\">\n            <button class=\"btn_action btn_cancel\" (click)=\"accept(false)\">\n              REJETER\n            </button>\n            <button class=\"btn_action btn_confirm\" (click)=\"accept(true)\">\n              CONFIRMER\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { LocalStorageService } from 'ngx-localstorage';\nimport { nextTick } from 'process';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeaderService {\n  hidded = new Subject<boolean>();\n  unselected = new Subject<boolean>();\n  active = new Subject<number>();\n  connect  = new Subject<boolean>();\n\n  constructor() { }\n\n  hideHeader(data: boolean) {\n    this.hidded.next(data);\n  }\n\n  unselect(data: boolean) {\n    this.unselected.next(data);\n  }\n\n  activate(data: number) {\n    this.active.next(data);\n  }\n\n  connexion(data: boolean) {\n    this.connect.next(data);\n  }\n}\n","<div class=\"main_left\">\n  <div class=\"title_main_left\">\n    APERCU DE L'ACTIVITE\n  </div>\n\n  <div class=\"block_1\">\n    <div class=\"title_block\">\n      Actuellement en attente\n    </div>\n    <div class=\"contain_block\">\n      <div class=\"descr_block\" *ngFor=\"let item of demandes\">\n        <div class=\"text_block\">\n          {{item.title}}\n        </div>\n        <div class=\"value_block\">\n          <!-- <span *ngIf=\"item.value < 10 && item.value > 0\">0</span> -->\n          {{item.value}}\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- <div class=\"block_1\">\n    <div class=\"title_block\">\n      Notifications\n    </div>\n    <div class=\"contain_block_notif\">\n      <div class=\"descr_block_notif\" *ngFor=\"let item of notifications\">\n        <div class=\"text_block_notif\">\n          {{item.title}}\n        </div>\n        <div class=\"value_block_notif\">\n          <span *ngIf=\"item.value < 10 && item.value > 0\">0</span>{{item.value}}\n        </div>\n      </div>\n    </div>\n  </div> -->\n\n  <div class=\"block_1\">\n    <div class=\"title_block\">\n      Statistique des clients\n    </div>\n    <div class=\"contain_block\">\n      <div class=\"descr_block\" *ngFor=\"let item of clients\">\n        <div class=\"text_block\">\n          {{item.title}}\n        </div>\n        <div class=\"value_block\">\n          <!-- <span *ngIf=\"item.value < 10 && item.value > 0\">0</span> -->\n          {{item.value}}\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"block_1\">\n    <div class=\"title_block\">\n      Statistique des modèles\n    </div>\n    <div class=\"contain_block\">\n      <div class=\"descr_block\" *ngFor=\"let item of modeles\">\n        <div class=\"text_block\">\n          {{item.title}}\n        </div>\n        <div class=\"value_block\">\n          <!-- <span *ngIf=\"item.value < 10 && item.value > 0\">0</span> -->\n          {{item.value}}\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"block_1\">\n    <div class=\"title_block\">\n      Statistique des Show\n    </div>\n    <div class=\"contain_block\">\n      <div class=\"descr_block descr_show\" *ngFor=\"let item of show\">\n        <div class=\"text_block\">\n          {{item.title}}\n        </div>\n        <div class=\"value_block\">\n          <!-- <span *ngIf=\"item.value < 10 && item.value > 0\">0</span> -->\n          {{item.value}}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { Component, OnInit } from '@angular/core';\nimport { AdminService } from '../../../../../../services/admin/admin.service';\n\n@Component({\n  selector: 'app-main-left-dashboard-admin',\n  templateUrl: './main-left-dashboard-admin.component.html',\n  styleUrls: ['./main-left-dashboard-admin.component.scss']\n})\nexport class MainLeftDashboardAdminComponent implements OnInit {\n  demandes = [\n    {\n      title : 'Demande Inscription',\n      value: 0\n    },\n    {\n      title : 'Demande de désactivation',\n      value: 0\n    },\n    {\n      title : 'Demande de suppression',\n      value: 0\n    },\n  ]\n\n  // notifications = [\n  //   {\n  //     title : 'Nouveaux Messages',\n  //     value: 15\n  //   },\n  //   {\n  //     title : 'Nouveaux Demandes',\n  //     value: 5\n  //   }\n  // ]\n\n  clients = [\n    {\n      title : 'Nouveaux clients',\n      value: 0\n    },\n    {\n      title : 'Nombre total des clients',\n      value: 0\n    }\n  ]\n\n  modeles = [\n    {\n      title : 'Nouveaux modèles',\n      value: 0\n    },\n    {\n      title : 'Nombre total des modèles',\n      value: 0\n    }\n  ]\n\n  show = [\n    {\n      title: 'Show Privé',\n      value: 150\n    },\n    {\n      title: 'Show VIP',\n      value: 75\n    },\n    {\n      title: 'Chiffre d\\'affaire',\n      value: '750,00 $'\n    }\n  ]\n\n  constructor(\n    private adminService: AdminService\n  ) { }\n\n  ngOnInit(): void {\n    this.countModelInscription()\n    this.countModelDesactivation()\n    this.countModelSuppression()\n    this.countClientActif()\n    this.countModelActif()\n    this.countNewLastClients()\n    this.countNewLastModels()\n    this.countRoomPrivate()\n    this.countRoomVIP()\n    this.getChiffreAffaire()\n  }\n\n  countModelInscription() {\n    this.adminService.countModelState('En attente').subscribe(\n      (data: any) => {\n        this.demandes[0].value = data ? data : 0\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  countModelDesactivation() {\n    this.adminService.countModelState('Desactivation').subscribe(\n      (data: any) => {\n        this.demandes[1].value = data ? data : 0\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  countModelSuppression() {\n    this.adminService.countModelState('Suppression').subscribe(\n      (data: any) => {\n        this.demandes[2].value = data ? data : 0\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  countModelActif() {\n    this.adminService.countModelActif().subscribe(\n      (data: any) => {\n        this.modeles[1].value = data ? data : 0\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  countClientActif() {\n    this.adminService.countClientActif().subscribe(\n      (data: any) => {\n          this.clients[1].value = data ? data : 0\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  countNewLastClients() {\n    this.adminService.newLastClients().subscribe(\n      (data: any) => {\n          this.clients[0].value = data ? data : 0\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  countNewLastModels() {\n    this.adminService.newLastModels().subscribe(\n      (data: any) => {\n          this.modeles[0].value = data ? data : 0\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  countRoomPrivate() {\n    this.adminService.countRoom('private').subscribe(\n      (data: any) => {\n        this.show[0].value = data ? data : 0\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  countRoomVIP() {\n    this.adminService.countRoom('vip').subscribe(\n      (data: any) => {\n        this.show[1].value = data ? data : 0\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  getChiffreAffaire() {\n    this.adminService.getChiffreAffaire().subscribe(\n      (data : {credit: number, montant: string}) => {\n        // console.log(data)\n        this.show[2].value = data.montant\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n}\n","import { HeaderService } from './../../../services/header/header.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport * as $ from 'jquery';\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  pageId: number = 1;\r\n  menu = \"assets/icons/menu-dot.svg\";\r\n  close = \"assets/icons/close.svg\";\r\n  slided = false;\r\n  loaded: number = 1;\r\n  constructor(\r\n    private headerSrv: HeaderService\r\n  ) {\r\n    this.headerSrv.activate(3);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  load(position: number) {\r\n    this.loaded = position;\r\n  }\r\n\r\n  link(id: number) {\r\n    this.pageId = id;\r\n    if (this.slided) {\r\n      $(\"#left_side\").addClass(\"slideHide\");\r\n      this.slided = false;\r\n    }\r\n\r\n  }\r\n\r\n  slideMenu() {\r\n    $(\"#left_side\").removeClass(\"slideShow\");\r\n    $(\"#left_side\").removeClass(\"slideHide\");\r\n    this.slided = !this.slided;\r\n    if (this.slided) {\r\n      $(\"#left_side\").addClass(\"slideShow\");\r\n    } else {\r\n      $(\"#left_side\").addClass(\"slideHide\");\r\n    }\r\n  }\r\n\r\n}\r\n","<app-header actif=\"3\" connected=\"true\" model=\"true\"></app-header>\n\n\n<div class=\"main_dashboard\">\n  <div class=\"dashboard_header_1\">\n    <div class=\"text_param\" (click)=\"load(1)\" [ngClass]=\"{'active': loaded == 1}\">\n      Paramètres de mon compte\n    </div>\n    <!-- <div class=\"text_credit\" (click)=\"load(2)\" [ngClass]=\"{'active': loaded == 2}\">\n      Mes crédits\n    </div> -->\n  </div>\n\n  <div class=\"account_parameter\" *ngIf=\"loaded == 1\">\n\n    <div class=\"dashboard_header_2\">\n      Your Account Dashboard\n    </div>\n\n    <div class=\"mobile_menu\" (click)=\"slideMenu()\"  [ngClass]=\"{'open': slided}\">\n      <img [src]=\"menu\" alt=\"\">\n      <span>Menu</span>\n    </div>\n    <div class=\"content_dashboard\">\n      <div class=\"left_side\" id=\"left_side\">\n        <div class=\"block_left_1\">\n          <div class=\"menu\">MON PROFIL</div>\n          <div class=\"line\"></div>\n          <div class=\"menu\">PARAMETRE DU PROFIL</div>\n          <div class=\"line\"></div>\n          <div class=\"menu link\" [ngClass]=\"{'activated': pageId == 1}\" (click)=\"link(1)\">Information personnelle</div>\n          <div class=\"menu link\" [ngClass]=\"{'activated': pageId == 2}\" (click)=\"link(2)\">Paramètre du compte</div>\n          <div class=\"menu link\" [ngClass]=\"{'activated': pageId == 3}\" (click)=\"link(3)\">Changer mot de passe</div>\n        </div>\n        <div class=\"block_left_2\">\n          <div class=\"line\"></div>\n          <div class=\"menu link\" [ngClass]=\"{'activated': pageId == 4}\" (click)=\"link(4)\">SOLDE DE MON COMPTE</div>\n          <div class=\"line\"></div>\n          <div class=\"menu link\" [ngClass]=\"{'activated': pageId == 5}\" (click)=\"link(5)\">HISTORIQUES DES GAINS</div>\n          <!-- <div class=\"line\"></div>\n          <div class=\"menu link\" [ngClass]=\"{'activated': pageId == 6}\" (click)=\"link(6)\">STATISTIQUES DE CONNEXION</div> -->\n        </div>\n      </div>\n\n      <div class=\"right_side\">\n        <app-information *ngIf=\"pageId === 1\"></app-information>\n        <app-setting  *ngIf=\"pageId === 2\"></app-setting>\n        <app-password-modele  *ngIf=\"pageId === 3\"></app-password-modele>\n        <app-solde  *ngIf=\"pageId === 4\"></app-solde>\n        <app-gain *ngIf=\"pageId === 5\"></app-gain>\n        <app-connexion *ngIf=\"pageId === 6\"></app-connexion>\n      </div>\n\n    </div>\n  </div>\n\n  <div class=\"account_credit\" *ngIf=\"loaded == 2\">\n    <app-solde></app-solde>\n  </div>\n</div>\n<br><br>\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LocalStorageService } from 'ngx-localstorage';\nimport { Observable, Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { loginUser } from 'src/app/interfaces/login.interface';\nimport { registerClient, registerModel } from '../../interfaces/register.interface';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  endpoint = environment.endpoint\n\n  authentified  = new Subject<boolean>();\n\n  public paying = false;\n\n  constructor(\n    private store: LocalStorageService,\n    private http : HttpClient,\n    public router : Router\n  ) { }\n\n  login(who: string) {\n    if (who == 'model') {\n      console.log(\"connexion model\");\n      this.store.set(\"model\", true);\n    }\n    this.authentication(true);\n  }\n\n  logout(who: string) {\n    if (who == 'model') {\n      console.log(\"deconnexion model\");\n      this.store.set(\"model\", false);\n    }\n    this.authentication(false);\n  }\n\n  authentication(data: boolean) {\n    this.authentified.next(data);\n    this.store.set(\"auth\", data);\n  }\n\n  loginClient(user : loginUser) : Observable<any>{\n    return this.http.post(`${this.endpoint}/client/login`,user, httpOptions)\n  }\n\n  loginModel(user : loginUser) : Observable<any>{\n    return this.http.post(`${this.endpoint}/model/login`,user, httpOptions)\n  }\n\n  registerClient(user : registerClient) : Observable<any>{\n    return this.http.post(`${this.endpoint}/client/register`,user,httpOptions)\n  }\n\n  registerModel(user : registerModel) : Observable<any>{\n    return this.http.post(`${this.endpoint}/model/register`,user,httpOptions)\n  }\n\n  uploadImagesModel(formData: FormData): Observable<any> {\n    return this.http.post(`${this.endpoint}/modelsary`,formData,{\n        reportProgress: true,\n        observe: 'events'\n    });\n  }\n\n  // Not\n  // confirm(email : string , password : string, codeConfirmUser : string) : Observable<any>{\n  //   return this.http.put(`${this.endpoint}/confirmation`,{email,password, codeConfirmUser}, httpOptions)\n  // }\n\n  // Not\n  // resendConfirm(email : string) : Observable<any>{\n  //   return this.http.post(`${this.endpoint}/resend`,{email}, httpOptions)\n  // }\n\n  // Not\n  forgot(email : string) : Observable<any>{\n    const options = {\n      email : email\n    }\n    return this.http.post(`${this.endpoint}/forgot`, options, httpOptions)\n  }\n\n  checkTokenValidation(token : string) : Observable<any>{\n    return this.http.get(`${this.endpoint}/forgot?token=${token}`)\n  }\n\n  changePassowrd(password : string,newPassword : string) : Observable<any>{\n    return this.http.put(`${this.endpoint}/password`,{password : password, newPassword : newPassword},httpOptions)\n  }\n\n  updatePassword(token : string,password : string) : Observable<any>{\n    return this.http.put(`${this.endpoint}/forgot`,{token,password},httpOptions)\n  }\n\n  getToken(){\n    let token = this.store.get(\"token\");\n    if (token === null) {\n      return false;\n    }\n    return token;\n  }\n\n  get isConnected() : boolean{\n    let authToken = this.store.get(\"token\");\n    return authToken != null\n  }\n\n  logoutUser(who: string, route: string){\n    let removeToken =  this.store.set(\"token\", null);\n        if (removeToken == null) {\n            // this.router.navigate(['connexion']);\n            this.router.navigate([route]);\n        }\n  }\n\n  async saveToken(token, id?: number) {\n    if (id) await this.store.set(\"identification//\", id);\n    await this.store.set(\"token\", token);\n  }\n\n  verifyToken(token: string) : Observable<any>{\n    return this.http.post(`${this.endpoint}/verify_token`, {token} ,httpOptions)\n  }\n\n  verifyAdminToken(token: string) : Observable<any>{\n    return this.http.post(`${this.endpoint}/verify_admin_token`, {token} ,httpOptions)\n  }\n\n}\n","export enum TypeTimer {\r\n  PRIVATE = 'private',\r\n  FREE = 'free',\r\n  VIP = 'vip'\r\n}\r\n\r\nexport interface CreditTimer {\r\n  clientId: number;\r\n  modelId: number;\r\n  timerId: number;\r\n  showCredit: number;\r\n  showSecond: number;\r\n  showType: TypeTimer;\r\n  roomId: number;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { cloneDeep } from 'lodash';\nimport * as agCharts from 'ag-charts-community';\nimport { log } from './connexion';\n@Component({\n  selector: 'app-connexion',\n  templateUrl: './connexion.component.html',\n  styleUrls: ['./connexion.component.scss']\n})\nexport class ConnexionComponent implements OnInit {\n  options: any;\n  updating: boolean = false;\n  history = [\n    // { year: '', lundi: 0, mardi: 0, mercredi: 0, jeudi: 0, vendredi: 0, samedi: 0, dimanche: 0},\n    { year: '2014', lundi: 18, mardi: 20, mercredi: 10, jeudi: 10, vendredi: 8, samedi: 10, dimanche: 6}\n  ];\n\n  constructor() {\n    this.options = {\n      autoSize: true,\n      data: this.getData(),\n      series: [\n        {\n          type: 'column',\n          xKey: 'year',\n          yKeys: ['lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi', 'dimanche'],\n          yNames: ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche'],\n          grouped: true,\n          fills: ['#117abe', 'rgb(247, 113, 4)', 'rgb(117, 117, 116)', 'rgb(255, 166, 0)',\n          'rgb(0, 0, 255)', 'rgb(0, 128, 0)', 'rgb(0, 0, 85)'\n          ],\n          strokeWidth: 0,\n          marker: {\n            enabled: false,\n            fill: '#80a0c3',\n          },\n        },\n      ],\n      axes: [\n        {\n          type: 'category',\n          position: 'bottom',\n          title: {\n            enabled: true,\n            text: 'Nombre d\\'heure de connexion',\n            color: 'white'\n          },\n          tick: { color:  \"rgb(255, 255, 255)\"},\n          label: {\n            color:  \"rgb(255, 255, 255)\",\n            formatter: function (params) {\n              return '';\n            },\n          },\n        },\n        {\n          type: 'number',\n          position: 'left',\n          keys: ['lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi', 'dimanche'],\n          title: {\n            enabled: false\n          },\n          label: {\n            color:  \"rgb(255, 255, 255)\",\n            formatter: function (params) {\n              return params.value;\n            },\n          },\n        }\n      ],\n      background: {\n        fill: \"#FFF\",\n        visible: false\n      },\n      tooltip: {\n        enabled: true\n      },\n      navigator: {\n        enabled: true\n      },\n      title: { text: '' },\n      legend: {\n        position: 'bottom',\n        enabled: true,\n        item: {\n          label: {\n            color: 'white'\n          }\n        }\n      }\n    };\n  }\n\n  ngOnInit(): void {\n    this.startUpdates();\n    this.useDefaultGridStyle();\n  }\n\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    console.log(\"destroyed\");\n  }\n\n  useDefaultGridStyle = () => {\n    const options = cloneDeep(this.options);\n\n    var gridStyle = [\n      {\n        stroke: 'white',\n        lineDash: [2, 1],\n      },\n    ];\n    options.axes[0].gridStyle = gridStyle;\n    options.axes[1].gridStyle = gridStyle;\n    this.options = options;\n  };\n\n  update = () => {\n    const options = cloneDeep(this.options);\n    options.data = this.getData();\n    this.options = options;\n  };\n\n  startUpdates = () => {\n    if (this.updating) {\n      return;\n    }\n    this.updating = true;\n    this.update();\n    // setInterval(this.update, 500);\n  };\n\n  getData() {\n    this.updating = false;\n    return this.history;\n  }\n}\n\n","<div class=\"main_content\">\n  <div class=\"title_cnx\">\n    STATISTIQUE DE CONNEXION\n  </div>\n\n  <div class=\"contain_histogramme\">\n    <div class=\"wrapper\">\n      <ag-charts-angular\n        style=\"height: 100%; width: 100%; overflow: hidden\"\n        [options]=\"options\"\n      ></ag-charts-angular>\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit,\r\n  OnDestroy, PLATFORM_ID,\r\n  Inject, ViewChild,\r\n  ElementRef } from '@angular/core';\r\nimport {isPlatformBrowser} from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LocalStorageService } from 'ngx-localstorage';\r\nimport { Chat, ChatSocket } from 'src/app/interfaces/chat.interface';\r\nimport { ChatService } from 'src/app/services/chat/chat.service';\r\nimport { ModelService } from 'src/app/services/model/model.service';\r\nimport { SocketService } from 'src/app/services/socket/socket.service';\r\nimport { RoomPrivateService } from '../../../services/roomPrivate/room-private.service';\r\nimport { PopupService } from '../../../services/popup/popup.service';\r\nimport { ProfilService } from '../../../services/profil/profil.service';\r\nimport { RoomVipService } from '../../../services/roomVip/room-vip.service';\r\nimport { TimerService } from '../../../services/timer/timer.service';\r\nimport { TypeTimer } from 'src/app/interfaces/timer.interface';\r\nimport { CreditService } from '../../../services/credit/credit.service';\r\n\r\n// Peer\r\nimport './../shim';\r\nimport Peer from \"peerjs\"\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-live-vip-model',\r\n  templateUrl: './live-vip-model.component.html',\r\n  styleUrls: ['./live-vip-model.component.scss', './../../live/live.scss']\r\n})\r\nexport class LiveVipModelComponent implements OnInit, OnDestroy {\r\n  context: string = \"LIVE VIP\";\r\n  imgPoster = \"assets/images/image.png\";\r\n  thrombone = \"assets/icons/paper-clip.svg\";\r\n  send = \"assets/icons/send-button.svg\";\r\n  dot = \"assets/icons/more_purple.svg\";\r\n  close = \"assets/icons/close.svg\";\r\n\r\n  toggleDot: boolean = false;\r\n\r\n  client = {\r\n    img: \"assets/images/user_chat.png\",\r\n    pseudo: '',\r\n    id: 0\r\n  }\r\n\r\n  info = {\r\n    bg : \"assets/logos/dark-light.jpg\",\r\n    message : '',\r\n    idRoom: 0,\r\n    pseudo: '',\r\n    chatColor:'#FB77FC',\r\n    modelId: 0,\r\n    actif: 0,\r\n    creditModel: 0,\r\n    idCreditModel: 0,\r\n    winCredit: 0\r\n  }\r\n\r\n  timer = {\r\n    id: 0,\r\n    hour: 0,\r\n    minute: 0,\r\n    second: 0,\r\n    fail: false,\r\n    reinit: false\r\n  };\r\n\r\n  stat = {\r\n    id_show: 0,\r\n    type_show : null,\r\n    tarif_show: 0,\r\n    time_show: 0,\r\n    client: this.client.pseudo,\r\n    time_passed : this.timer.hour + ':' + this.timer.minute + ':' + this.timer.second,\r\n    hour_passed : null,\r\n    minute_passed : null,\r\n    second_passed : null,\r\n    actualCredit: this.info.creditModel,\r\n    winCredit: this.info.winCredit,\r\n    totalCredit: this.info.creditModel +  this.info.winCredit\r\n  }\r\n\r\n  messages: Chat[] = [];\r\n  leaved: boolean = false;\r\n\r\n  joinSub = new Subscription();\r\n  leaveSub = new Subscription();\r\n  messageSub = new Subscription();\r\n  peerSub = new Subscription();\r\n\r\n  loading: boolean = false;\r\n\r\n  showEmojiPicker = false;\r\n  sets = [\r\n    'native',\r\n    'google',\r\n    'twitter',\r\n    'facebook',\r\n    'emojione',\r\n    'apple',\r\n    'messenger'\r\n  ]\r\n  set = 'google';\r\n\r\n  // WEB RTC VIDEO\r\n  @ViewChild('video_live_model', {static: true}) video: ElementRef<HTMLVideoElement>;\r\n  @ViewChild('video_live_client', {static: true}) remote_video: ElementRef<HTMLVideoElement>;\r\n\r\n  private peer: Peer;\r\n  peerIdShare: string;\r\n  peerId: string;\r\n  private lazyStream: any;\r\n  currentPeer: any;\r\n  private peerList: Array<any> = [];\r\n\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private _platform: Object,\r\n    private router: Router,\r\n    private store: LocalStorageService,\r\n    private modelService: ModelService,\r\n    private route: ActivatedRoute,\r\n    private chatService: ChatService,\r\n    private roomVipService: RoomVipService,\r\n    private socketService: SocketService,\r\n    private profilService: ProfilService,\r\n    private timerService: TimerService,\r\n    private creditService: CreditService) {\r\n      this.peer = new Peer();\r\n      // const id = this.route.snapshot.paramMap.get('clientId');\r\n      // this.client.id = parseInt(id);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getInfo();\r\n    this.initLiveVideo();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onStop();\r\n    this.joinSub.unsubscribe();\r\n    this.leaveSub.unsubscribe();\r\n    this.messageSub.unsubscribe();\r\n    this.peerSub.unsubscribe();\r\n  }\r\n\r\n  // Get info Model\r\n  getInfo() {\r\n    this.modelService.getInfo().subscribe(\r\n      (data) => {\r\n        // console.log('Get info ', data);\r\n        if (data.profile.status === 'En live') {\r\n          this.onStop();\r\n          this.router.navigate(['/modele/live-private']);\r\n        }\r\n        if (data.profile.status === 'En ligne') {\r\n          this.onStop();\r\n          this.router.navigate(['/modele/chat']);\r\n        }\r\n        this.info.bg = data.path_soft;\r\n        this.info.modelId = data.id;\r\n        this.info.pseudo = data.pseudo;\r\n        this.getInfoRoom();\r\n        this.getCredit();\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  getInfoRoom() {\r\n    this.roomVipService.getRoomModel(this.info.modelId).subscribe(\r\n      (data) => {\r\n        // console.log('Model room ', data);\r\n        this.info.idRoom = data.idRoom;\r\n        this.info.actif = data.actif;\r\n        this.client.id = data.clientId;\r\n        this.getMessages();\r\n        this.initSocket();\r\n        this.getInfoClient();\r\n      }\r\n    )\r\n  }\r\n\r\n  getCredit() {\r\n    this.creditService.getCredit().subscribe(\r\n      (data) => {\r\n        // console.log(\"Credit \", data);\r\n        this.info.creditModel = data ? data.credit : 0;\r\n        this.info.idCreditModel = data ? data.id : 0;\r\n        this.stat.totalCredit = this.info.creditModel;\r\n        this.getGain();\r\n      }\r\n    );\r\n\r\n    // Launch the timer\r\n    this.initTimer();\r\n    this.getCostShow();\r\n  }\r\n\r\n  initSocket() {\r\n    if (!this.roomVipService.joinedRoom(this.info.idRoom)) {\r\n      this.roomVipService.joinRoom(this.info.idRoom);\r\n      this.socketService.joinVip(this.info.idRoom, this.info.modelId);\r\n    }\r\n\r\n    this.joinSub = this.socketService.listen(`joined ${this.info.idRoom}V`).subscribe(\r\n      (data: any) => {\r\n        console.log('joined ', data);\r\n        // this.info.actif = data < 1 ? 0 : data;\r\n        // this.info.actif = data > 2 ? 2 : data;\r\n        this.info.actif = 2;\r\n        this.leaved = false;\r\n      }\r\n    );\r\n\r\n    this.leaveSub = this.socketService.listen(`leaved ${this.info.idRoom}V`).subscribe(\r\n      (data: any) => {\r\n        console.log('leaved ', data);\r\n        // this.info.actif = data < 1 ? 0 : data;\r\n        // this.info.actif = data > 2 ? 2 : data;\r\n        this.info.actif = 1;\r\n        this.leaved = true;\r\n      }\r\n    );\r\n\r\n    this.messageSub = this.socketService.listen(`message ${this.info.idRoom}V`).subscribe(\r\n      (data) => {\r\n        // console.log('Message from client ', data);\r\n        this.getMessages();\r\n      }\r\n    );\r\n\r\n    this.peerSub = this.socketService.listen(`peerId ${this.info.idRoom}V`).subscribe(\r\n      (data: {peerId: any, idRoom: string}) => {\r\n        console.log('Peer Id received ', data);\r\n        this.peerIdShare = data.peerId;\r\n        this.connectWithPeer();\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  toggleDots() {\r\n    this.toggleDot = !this.toggleDot;\r\n    // console.log(this.toggleDot);\r\n  }\r\n\r\n  sendMessage() {\r\n    if (!this.info.message) return;\r\n\r\n    const data: Chat = {\r\n      idRoom: this.info.idRoom,\r\n      message: this.info.message,\r\n      type_source: 'model',\r\n      id_source: this.info.modelId,\r\n      type_chat: 'vip',\r\n      code_couleur: this.info.chatColor\r\n    }\r\n    this.info.message = null;\r\n    this.chatService.postMessage(data).subscribe(\r\n      (data) => {\r\n        this.getMessages();\r\n        const msg: ChatSocket = {\r\n          room: this.info.idRoom + 'V',\r\n          role: 'model',\r\n          id: this.info.modelId,\r\n          message: this.info.message\r\n        }\r\n        this.socketService.sendMessage(msg);\r\n      }\r\n    )\r\n  }\r\n\r\n  getMessages() {\r\n    this.chatService.getMessage(this.info.idRoom, 'vip').subscribe(\r\n      (data) => {\r\n        // console.log('Messages ', data);\r\n        this.messages = data;\r\n      }\r\n    )\r\n  }\r\n\r\n  getInfoClient() {\r\n    this.roomVipService.getInfo(this.client.id).subscribe( // info client\r\n      (data) => {\r\n        // console.log(\"Info client \", data);\r\n        this.client.pseudo = data.pseudo;\r\n        this.stat.client = data.pseudo;\r\n      }\r\n    )\r\n  }\r\n\r\n  async liveOut() {\r\n    this.loading = true;\r\n    this.onStop();\r\n    await (await this.leaveTimer()).subscribe(\r\n      async (data) => {\r\n        this.timer.reinit = true;\r\n        this.clearTimer(); // set to zero\r\n        return await this.socketService.leaveVip(this.info.idRoom, 'model').then(\r\n          async (data) => {\r\n          this.roomVipService.leaveRoom();\r\n          await this.profilService.updateStatus(this.info.modelId, 'En ligne').subscribe(\r\n          (data) => {\r\n            this.loading = false;\r\n            this.router.navigate(['/modele/chat']);\r\n            }\r\n          )}\r\n        );\r\n      }, (error) => {\r\n        this.loading = false;\r\n      }\r\n    );\r\n  }\r\n\r\n      // Timer\r\n  async initTimer() {\r\n        this.timerService.beginTimerModel(this.info.modelId, TypeTimer.VIP).subscribe(\r\n          async (data) => {\r\n            // console.log('Timer ', data);\r\n            const created: Date = data.createdAt;\r\n            const updated: Date = data.updatedAt;\r\n            this.timer.id = data.id;\r\n            // console.log(created.toString(), \" to \", updated.toString());\r\n            const {hour, minute, second} = this.timerService.convertTime(created.toString(), updated.toString());\r\n            this.timer.hour = hour;\r\n            this.timer.minute = minute;\r\n            this.timer.second = second;\r\n            this.stat.time_passed = this.timer.hour + ' : ' + this.timer.minute + ' : ' +this.timer.second;\r\n            this.stat.hour_passed = this.timer.hour;\r\n            this.stat.minute_passed = this.timer.minute;\r\n            this.stat.second_passed = this.timer.second;\r\n            // console.log(this.timer.hour, ':', this.timer.minute, ':', this.timer.second);\r\n          }\r\n    )\r\n  }\r\n\r\n  async getCostShow() {\r\n    return await this.timerService.getCostShow(TypeTimer.VIP).subscribe(\r\n      (data: any) => {\r\n        // console.log(\"Show Cost \", data);\r\n        this.stat.tarif_show = data.credit;\r\n        this.stat.time_show = data.second;\r\n        this.stat.type_show = (data.type + '').toString().toUpperCase();\r\n        this.stat.id_show = data.id;\r\n        this.beginTimer();\r\n      }\r\n    )\r\n  }\r\n\r\n  beginTimer() {\r\n    // console.log(\"timer second \", this.show.second);\r\n    const delay = this.stat.time_show * 1000;\r\n    // console.log(delay, \" ms \");\r\n    setInterval(\r\n      () => {\r\n        if (this.info.actif > 1) this.getGain();\r\n      }, delay\r\n    )\r\n  }\r\n\r\n  getGain() {\r\n    this.roomVipService.getRoomModel(this.info.modelId).subscribe(\r\n      (data) => {\r\n        // console.log(\"Gain \", data);\r\n        this.stat.winCredit = data.gain;\r\n        this.stat.actualCredit = this.stat.totalCredit - this.stat.winCredit;\r\n        this.info.winCredit = data.gain;\r\n    })\r\n  }\r\n\r\n  // Timer set to 0\r\n  clearTimer() {\r\n    this.timer.reinit = true;\r\n  }\r\n\r\n  async leaveTimer(): Promise<Observable<any>> {\r\n    const data = {\r\n      id: this.timer.id,\r\n      type: TypeTimer.VIP,\r\n      leaved: true,\r\n      push: new Date().toString()\r\n    }\r\n\r\n    return await this.timerService.updateTimer(data);\r\n  }\r\n\r\n\r\n  // WEB RTC - LIVE VIDEO\r\n  initLiveVideo() {\r\n    // console.log(\"Start\");\r\n    this.onStart();\r\n    this.getPeerId();\r\n  }\r\n\r\n  onStart(){\r\n    if(isPlatformBrowser(this._platform) && 'mediaDevices' in navigator) {\r\n      navigator.mediaDevices.getUserMedia({video: true, audio: false}).then((ms: MediaStream) => {\r\n        const _video = this.video.nativeElement;\r\n        _video.srcObject = ms;\r\n        _video.play();\r\n      });\r\n    }\r\n  }\r\n\r\n  onStop() {\r\n    if (this.video && this.video.nativeElement.srcObject) {\r\n      this.video.nativeElement.pause();\r\n      if ((this.video.nativeElement.srcObject as MediaStream).getVideoTracks()[0]) {\r\n        (this.video.nativeElement.srcObject as MediaStream).getVideoTracks()[0].stop();\r\n      }\r\n      this.video.nativeElement.srcObject = null;\r\n    }\r\n  }\r\n\r\n  private getPeerId = () => {\r\n    // console.log(\"Get Peer\");\r\n    this.peer.on('open', (id) => {\r\n      console.log(\"Peer Id \", id);\r\n      this.peerId = id;\r\n      const data = {\r\n        role: 'model',\r\n        modelId: this.info.modelId,\r\n        room : this.info.idRoom+'V',\r\n        peerId: this.peerId\r\n      }\r\n      this.socketService.newPeerIdModel(data);\r\n    });\r\n\r\n    this.peer.on('call', (call) => {\r\n      console.log('On Call');\r\n      this.onStop();\r\n      navigator.mediaDevices.getUserMedia({\r\n        video: true,\r\n        audio: true\r\n      }).then((stream) => {\r\n        this.lazyStream = stream;\r\n        const _video = this.video.nativeElement;\r\n        _video.srcObject = stream;\r\n        _video.play();\r\n        call.answer(stream);\r\n        console.log('Answer stream');\r\n        call.on('stream', (remoteStream) => {\r\n          console.log('Receive stream');\r\n          if (!this.peerList.includes(call.peer)) {\r\n            this.streamRemoteVideo(remoteStream);\r\n            this.currentPeer = call.peerConnection;\r\n            this.peerList.push(call.peer);\r\n          }\r\n        });\r\n      }).catch(err => {\r\n        console.log(err + 'Unable to get media');\r\n      });\r\n    });\r\n  }\r\n\r\n  connectWithPeer(): void {\r\n    this.callPeer(this.peerIdShare);\r\n  }\r\n\r\n  private callPeer(id: string): void {\r\n    console.log('Call peer');\r\n    this.onStop();\r\n    navigator.mediaDevices.getUserMedia({\r\n      video: true,\r\n      audio: true\r\n    }).then((stream) => {\r\n      this.lazyStream = stream;\r\n      const call = this.peer.call(id, stream);\r\n      call.on('stream', (remoteStream) => {\r\n        console.log('Receive stream');\r\n        if (!this.peerList.includes(call.peer)) {\r\n          this.streamRemoteVideo(remoteStream);\r\n          this.currentPeer = call.peerConnection;\r\n          this.peerList.push(call.peer);\r\n        }\r\n      });\r\n    }).catch(err => {\r\n      console.log(err + 'Unable to connect');\r\n    });\r\n  }\r\n\r\n  private streamRemoteVideo(stream: any): void {\r\n    const _video = this.remote_video.nativeElement;\r\n    _video.srcObject = stream;\r\n    _video.play();\r\n    // const video = document.createElement('video');\r\n    // video.classList.add('video');\r\n    // video.srcObject = stream;\r\n    // video.play();\r\n    // document.getElementById('remote-video').append(video);\r\n  }\r\n\r\n    // -------- EMOJI -----------------\r\n\r\n    toggleEmojiPicker() {\r\n      this.showEmojiPicker = !this.showEmojiPicker;\r\n    }\r\n\r\n    addEmoji(event) {\r\n      const {info} = this;\r\n      console.log(this.info.message)\r\n      console.log(`${event.emoji.native}`)\r\n      const text = `${info.message}${event.emoji.native}`;\r\n\r\n      this.info.message = text;\r\n      console.log(this.info.message)\r\n      // this.showEmojiPicker = false;\r\n    }\r\n\r\n    focus() {\r\n      this.showEmojiPicker = false;\r\n    }\r\n\r\n\r\n}\r\n","<app-header connected=\"true\" model=\"true\"></app-header>\n\n\n<div class=\"main_live\">\n  <img [src]=\"dot\" alt=\"\" id=\"dots\" (click)=\"toggleDots()\">\n  <div class=\"contain_top\">\n    <app-topbar [context]=\"context\" [actif]=\"info.actif\"\n    [hour]=\"this.timer.hour\"\n    [minute]=\"this.timer.minute\"\n    [second]=\"this.timer.second\"\n    [reinit]=\"this.timer.reinit\"\n    ></app-topbar>\n    <div class=\"contain_left\">\n      <div class=\"show_live_left\">\n\n        <video autoplay [poster]=\"info.bg\" id=\"video_live_model\" #video_live_model muted=\"muted\"></video>\n\n      </div>\n      <div class=\"client_live\" [ngClass]=\"{'dry_up': leaved}\">\n        <video [poster]=\"client.img\" class=\"client_flow\" id=\"video_live_client\" #video_live_client></video>\n      </div>\n    </div>\n    <div class=\"contain_right\">\n      <div class=\"show_live_right\">\n        <mat-tab-group mat-align-tabs=\"center\">\n          <mat-tab label=\"Live Chat\">\n\n            <app-live-free-chat [modelId]=\"info.modelId\" [messages]=\"messages\"\n            [profil]=\"info.bg\"></app-live-free-chat>\n\n          </mat-tab>\n          <mat-tab label=\"Statistiques\">\n\n            <app-live-vip-stat [type_show]=\"stat.type_show\" [tarif_show]=\"stat.tarif_show\"\n            [time_show]=\"stat.time_show\" [client]=\"stat.client\"\n            [time_passed]=\"stat.time_passed\" [hour_passed]=\"stat.hour_passed\"\n            [minute_passed]=\"stat.minute_passed\" [second_passed]=\"stat.second_passed\"\n            [actualCredit]=\"stat.actualCredit\"\n            [winCredit]=\"stat.winCredit\" [totalCredit]=\"stat.totalCredit\"\n            ></app-live-vip-stat>\n\n          </mat-tab>\n        </mat-tab-group>\n      </div>\n\n      <div class=\"leave\" *ngIf=\"leaved\">\n        Votre client {{this.client.pseudo}} a quitté le room VIP.\n      </div>\n\n    </div>\n  </div>\n\n  <div class=\"contain_bottom\">\n    <div class=\"contain_left\">\n      <div class=\"contain_action contain_action_desktop\">\n        <div class=\"out_show btn_show\">\n          <button class=\"btn btn_out_show lighter\" (click)=\"liveOut()\">Sortir du Show</button>\n          <p></p>\n        </div>\n      </div>\n\n      <!-- // mobile -->\n      <div class=\"contain_action contain_action_mobile\" *ngIf=\"toggleDot\">\n        <div class=\"out_show btn_show\">\n          <button class=\"btn btn_out_show lighter\" (click)=\"liveOut()\">Sortir du Show</button>\n          <p></p>\n        </div>\n      </div>\n\n    </div>\n    <div class=\"contain_right\">\n      <div class=\"contain_message\">\n        <emoji-mart class=\"emoji-mart\" set=\"{{set}}\"\n        *ngIf=\"showEmojiPicker\" (emojiSelect)=\"addEmoji($event)\"\n        searchIcons='./../../../../assets/icons/admin-icons/search.png'\n        title=\"\"\n        ></emoji-mart>\n        <div class=\"contain_thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n        </div>\n        <form (ngSubmit)=\"sendMessage()\">\n          <div class=\"input_text\">\n              <input type=\"text\" name=\"message\" autocomplete=\"off\" (focus)=\"focus()\"\n              placeholder=\"Entrer votre message ici ...\" [(ngModel)]=\"info.message\">\n              <button type=\"button\" (click) =\"toggleEmojiPicker()\">😀</button><br>\n              <button type=\"submit\">\n                <div class=\"p\">\n                  <img [src]=\"send\" alt=\"\">\n                </div>\n              </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n\n</div>\n\n<div class=\"lds-spinner\" *ngIf=\"loading\">\n  <div></div><div></div><div></div><div></div>\n  <div></div><div></div><div></div><div></div>\n  <div></div><div></div><div></div><div></div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  // endpoint: \"http://localhost:3000\",\n  endpoint: \"https://143.198.109.141/api\",\n  CRYPT_PSEUDO: \"storm/betweenus?...\",\n  CRYPT_PASS: \"0@8between.us\",\n  CRYPT_PSEUDO_MODEL: \"storm://betweenus?...\",\n  CRYPT_PASS_MODEL: \"@0@8çççbetween.us\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { ClientCam } from '../../../../interfaces/chat.interface';\r\n\r\ninterface Stream {\r\n  clientId: number,\r\n  stream: MediaStream\r\n}\r\n\r\n@Component({\r\n  selector: 'app-live-private-cam',\r\n  templateUrl: './live-private-cam.component.html',\r\n  styleUrls: ['./live-private-cam.component.scss']\r\n})\r\nexport class LivePrivateCamComponent implements OnInit {\r\n  @Input()\r\n  streams: Stream[];\r\n\r\n  @Input()\r\n  myId: number;\r\n\r\n  @Input()\r\n  clients: ClientCam[];\r\n\r\n  @Input()\r\n  canSelect: boolean;\r\n\r\n  @Input()\r\n  showListUser: boolean;\r\n\r\n  @Output()\r\n  clientSelected = new EventEmitter<number>();\r\n\r\n  idSelected: number = null;\r\n\r\n  img = \"assets/logos/dark-light.jpg\";\r\n  // img = \"assets/images/user_chat.png\";\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  selectClient(id: number) {\r\n    if (this.canSelect) {\r\n      this.idSelected = this.idSelected == id ? null : id;\r\n      this.clientSelected.emit(this.idSelected);\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"main_live_cam\">\n  <div class=\"camera_item\" *ngFor=\"let stream of streams\">\n    <video autoplay class=\"live_cam\" [id]=\"stream.clientId\"\n    [poster]=\"img\" [srcObject]=\"stream.stream\" [muted]=\"stream.clientId === myId\">\n    </video>\n  </div>\n\n  <div class=\"list_user\" *ngIf=\"showListUser\">\n    <p class=\"pClient\"> {{clients.length}} Client <span *ngIf=\"clients.length > 1\">s</span></p>\n    <div class=\"pseudo_user\" *ngFor=\"let item of clients\" (click)=\"selectClient(item.client.id)\"\n    [ngClass]=\"{'selected': idSelected === item.client.id}\">\n        {{item.client.pseudo}}\n    </div>\n  </div>\n\n</div>\n","<div class=\"main_solde\">\n  <img [src]=\"coinImg\" alt=\"\">\n  <div class=\"contain_solde\">\n    {{solde}} crédit<span *ngIf=\"solde > 1\">s</span>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { CreditService } from '../../../../services/credit/credit.service';\r\n\r\n@Component({\r\n  selector: 'app-solde',\r\n  templateUrl: './solde.component.html',\r\n  styleUrls: ['./solde.component.scss']\r\n})\r\nexport class SoldeComponent implements OnInit {\r\n  coinImg = \"assets/icons/coin-stack.svg\";\r\n  solde = 500;\r\n\r\n  constructor(\r\n    private creditService: CreditService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCredit();\r\n  }\r\n\r\n  getCredit() {\r\n    this.creditService.getCredit().subscribe(\r\n      (data) => {\r\n        console.log(data);\r\n        this.solde = data.credit;\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<app-header></app-header>\n\n<div class=\"contain_signup_one\">\n  <div class=\"inside_sign part_one\">\n    <h2>NOUVEAU <br> MOT DE PASSE</h2>\n    <div class=\"blank\"></div>\n  </div>\n</div>\n\n<div class=\"contain_signup_two inside_sign\">\n  <h3 class=\"title\">\n    Réinitialisation  <br>\n    du mot de passe oublié\n  </h3>\n\n  <!-- <div class=\"descr\">\n      BETWEEN<span class=\"under_bold\">US</span>.LIVE <br>\n      Entrer le nouveau mot de passe <br>\n      Et confirmer le mot de passe. <br>\n  </div> -->\n\n  <form autocomplete=\"off\" (ngSubmit)=\"send()\">\n    <div class=\"form-group\">\n      <label for=\"pseudo\">Nouveau mot de passe *</label>\n      <input type=\"password\" name=\"newPassword\" class=\"form-control input lighter\"\n      [(ngModel)]=\"newPassword\" required>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"pseudo\">Confirmer le mot de passe *</label>\n      <input type=\"password\" name=\"confirmPassword\" class=\"form-control input lighter\"\n      [(ngModel)]=\"confirmPassword\" required>\n    </div>\n\n    <div *ngIf=\"errorToken\">\n      <small class=\"form-text error-text\" style=\"font-size: 15px;\">\n        {{errorToken}}\n      </small>\n    </div>\n\n    <div class=\"notif\">\n      * Champ obligatoire\n    </div>\n\n    <div class=\"action\">\n      <button class=\"btn btn_signup lighter\" type=\"submit\">\n        <div class=\"loader\" *ngIf=\"loading\"></div>\n        <span *ngIf=\"!loading\">CONFIRMER</span>\n      </button>\n    </div>\n  </form>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProfilService } from '../../../services/profil/profil.service';\nimport { LocalStorageService } from 'ngx-localstorage';\nimport { ClientService } from '../../../services/client/client.service';\nimport { ModelService } from '../../../services/model/model.service';\nimport { AuthService } from '../../../services/auth/auth.service';\nimport { LogService } from '../../../services/log/log.service';\nimport { RoomService } from '../../../services/room/room.service';\n\n@Component({\n  selector: 'app-new-password',\n  templateUrl: './new-password.component.html',\n  styleUrls: ['./new-password.component.scss']\n})\nexport class NewPasswordComponent implements OnInit {\n  token  = null;\n  newPassword: string = null;\n  confirmPassword: string = null;\n  errorToken: string = null;\n  loading: boolean = false;\n\n  info = {\n    id: 0,\n    role: null\n  }\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private profilService: ProfilService,\n    private store: LocalStorageService,\n    private clientService: ClientService,\n    private modelService: ModelService,\n    private router: Router,\n    private authService: AuthService,\n    private logService: LogService,\n    private roomService: RoomService\n  )\n  {\n    this.activatedRoute.queryParams.subscribe(params => {\n      this.token = params['token'];\n    });\n  }\n\n  ngOnInit(): void {\n    this.verifyToken();\n  }\n\n  verifyToken() {\n    if (!this.token) {\n      this.errorToken = \"Token invalid\";\n      return null;\n    }\n    this.store.set(\"token\", this.token);\n    this.profilService.getCredential().subscribe(\n      (data: {id: number, role: string}) => {\n        if (data.id && data.role) {\n          this.info.id = data.id;\n          this.info.role = data.role;\n        } else {\n          this.errorToken = \"Token invalid\";\n        }\n        console.log(\"Credential \", data);\n      }, (error) => {\n        this.errorToken = \"Token invalid\";\n      }\n    )\n  }\n\n  send() {\n    this.errorToken = null;\n\n    if (this.newPassword !== this.confirmPassword) {\n      this.errorToken = \"Mot de passe ne correspond pas\";\n      return null;\n    }\n\n    if (!this.newPassword || !this.confirmPassword) {\n      this.errorToken = \"Veuillez completer les champs\";\n      return null;\n    }\n\n    this.loading = true;\n\n    if (this.info.role === 'model') {\n      this.modelService.reinitPassword(this.info.id, this.newPassword).subscribe(\n        (data) => {\n          // console.log(\" reinit model \",data);\n          if (data.access_token) {\n            this.authService.saveToken(data.access_token).then(\n              () => {\n                this.saveLog();\n                this.roomService.createRoom().subscribe(\n                    (data) => {\n                      this.loading = false;\n                      this.store.set(\"room\", data.room);\n                      this.router.navigate(['/modele/profile']);\n                    }\n                )\n              }, (error) => {\n                console.log(error);\n                this.loading = false;\n              }\n            );\n          }\n        }\n      )\n    } else if (this.info.role === 'client') {\n      this.clientService.reinitPassword(this.info.id, this.newPassword).subscribe(\n        (data) => {\n          // console.log(\" reinit client \",data);\n          if (data.access_token) {\n            this.authService.saveToken(data.access_token, data.id).then(\n              () => {\n                    this.loading = false;\n                    this.router.navigate(['/client/accueil/registered']);\n              }\n            );\n          }\n        }, (error) => {\n          console.log(error);\n          this.loading = false;\n        }\n      )\n    }\n  }\n\n  saveLog() {\n    this.logService.createLog(\"reinitialisation mot de passe\").subscribe(\n      (data) => {\n        // console.log('Log ', data)\n      }, (error) => {\n        console.log(error);\n      }\n    );\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-out',\n  templateUrl: './out.component.html',\n  styleUrls: ['./out.component.scss']\n})\nexport class OutComponent implements OnInit, OnDestroy {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy() {\n  }\n\n}\n","<div class=\"main_out\">\n</div>\n\n<div class=\"contain_msg\">\n  <span routerLink=\"/\">\n    Revenir à l'accueil\n  </span>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { cloneDeep } from 'lodash';\nimport { AdminService } from '../../../../../../services/admin/admin.service';\nimport { TimerService } from '../../../../../../services/timer/timer.service';\n\n@Component({\n  selector: 'app-main-right-dashboard-admin',\n  templateUrl: './main-right-dashboard-admin.component.html',\n  styleUrls: ['./main-right-dashboard-admin.component.scss']\n})\nexport class MainRightDashboardAdminComponent implements OnInit {\n  years : number[] = []\n\n  options: any;\n  updating: boolean = false;\n\n  currentSelect = 'client'\n\n  clients = []\n\n  clientsOrig = []\n\n  modeles = []\n\n  modelesOrig = []\n\n  isIntegral: boolean = false\n  currentYear: number = new Date().getFullYear()\n  currentMonth: string = '01'\n\n  labelsShow = [\n    {\n      title: '10 DERNIERS SHOW',\n      label : [\n        'Modèle', 'Type', 'Durée',\n        'Vues', 'Gains', 'Etat'\n      ]\n    },\n    {\n      title: 'TOP 10 MODELES',\n      label : [\n        'Modèle', 'Show crée', 'Durée moyenne',\n        'Gains', 'Rang'\n      ]\n    },\n    {\n      title: 'TOP 3 DES CLIENTS LES PLUS ACTIFS',\n      label : [\n        'Pseudo', 'Show regardé', 'Durée moyenne',\n        'Rang'\n      ]\n    }\n  ]\n\n  valueUser = []\n\n  labelUser = this.labelsShow[2]\n\n  constructor(\n    private adminService: AdminService,\n    private timerService: TimerService\n  ) {\n    this.options = {\n      autoSize: true,\n      data: this.getData(),\n      series: [\n        {\n          xKey: 'date',\n          yKey: 'count',\n          yName: 'Nombre',\n          stroke: '#FFF',\n          marker: {\n            size: 2,\n            fill: '#FFF',\n            stroke: '#FFF',\n          },\n        }\n      ],\n      axes: [\n        {\n          type: 'category',\n          position: 'bottom',\n          nice: false,\n          tick: { count: 0,color:  \"rgb(0, 0, 0)\"},\n          label: { format: 'hello', color:  \"rgb(255, 255, 255)\" },\n        },\n        {\n          type: 'number',\n          position: 'left',\n          tick: { count: 1,color:  \"rgb(0, 0, 0)\"},\n          label: { format: '#{.0f}', color:  \"#fff\"}\n        }\n      ],\n      background: {\n        fill: \"#FFF\",\n        visible: false\n      },\n      tooltip: {\n        enabled: false\n      },\n      navigator: {\n        enabled: true\n      },\n      title: { text: '' },\n      legend: { enabled: false },\n    };\n   }\n\n  ngOnInit(): void {\n    this.startUpdates();\n    this.useDefaultGridStyle();\n    this.initYears();\n    this.getInscriptionsClient()\n    this.getInscriptionsModel()\n    this.getAverageClient()\n  }\n\n  initYears() {\n    const initial = 2021;\n    for(let i = 0; i < 100; i++ ) {\n      this.years.push(initial+i)\n    }\n  }\n\n  useDefaultGridStyle = () => {\n    const options = cloneDeep(this.options);\n\n    var gridStyle = [\n      {\n        stroke: 'white',\n        lineDash: [2, 1],\n      },\n    ];\n    options.axes[0].gridStyle = gridStyle;\n    options.axes[1].gridStyle = gridStyle;\n\n    this.options = options;\n  };\n\n  update = () => {\n    const options = cloneDeep(this.options);\n\n    options.data = this.getData();\n\n    this.options = options;\n  };\n\n  startUpdates = () => {\n    if (this.updating) {\n      return;\n    }\n    this.updating = true;\n    this.update();\n    setInterval(this.update, 1000);\n  };\n\n  getData() {\n    this.updating = false;\n    if (this.currentSelect === 'client') return this.clients\n    if (this.currentSelect === 'model') return this.modeles\n    return this.clients;\n  }\n\n  changeSelection(text) {\n    this.currentSelect = text\n    this.update()\n  }\n\n  getInscriptionsModel() {\n    this.adminService.getStatInscriptionModel().subscribe(\n      (data: any) => {\n        let tmp = data\n        tmp.forEach(inscrit => {\n          inscrit.date = this.adminService.formatDate(inscrit.date)\n          inscrit.count = parseInt(inscrit.count)\n        })\n        this.modelesOrig = tmp\n        this.modeles = tmp\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  getInscriptionsClient() {\n    this.adminService.getStatInscriptionClient().subscribe(\n      (data: any) => {\n        // console.log(data)\n        let tmp = data\n        tmp.forEach(inscrit => {\n          inscrit.date = this.adminService.formatDate(inscrit.date)\n          inscrit.count = parseInt(inscrit.count)\n        })\n        this.clientsOrig = tmp\n        this.clients = tmp\n        // console.log(this.clients)\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  selectMonth(event) {\n    this.isIntegral = false\n    const value = event.target.value;\n    this.currentMonth = value\n    const search = this.currentMonth+'/'+this.currentYear\n    if (this.currentSelect === 'client') {\n      this.clients =  this.clientsOrig.filter(element => {\n        const year = element.date.substring(3, 10)\n        if (year === search) return true\n        return false\n      })\n    } else if (this.currentSelect === 'model') {\n      this.modeles =  this.modelesOrig.filter(element => {\n        const year = element.date.substring(3, 10)\n        if (year === search) return true\n        return false\n      })\n    }\n\n  }\n\n  selectYear(event) {\n    this.isIntegral = false\n    const value = event.target.value;\n    this.currentYear = value\n    if (this.currentSelect === 'client') {\n      this.clients =  this.clientsOrig.filter(element => {\n        const year = element.date.substring(6, 10)\n        if (year === this.currentYear) return true\n        return false\n      })\n    } else if (this.currentSelect === 'model') {\n      this.modeles =  this.modelesOrig.filter(element => {\n        const year = element.date.substring(6, 10)\n        if (year === this.currentYear) return true\n        return false\n      })\n    }\n\n  }\n\n  integral() {\n    this.isIntegral = !this.isIntegral\n    if (this.isIntegral) {\n      if (this.currentSelect === 'client') {\n        this.clients = this.clientsOrig\n      } else if (this.currentSelect === 'model') {\n        this.modeles = this.modelesOrig\n      }\n\n    } else {\n        const search = this.currentMonth+'/'+this.currentYear\n        if (this.currentSelect === 'client') {\n          this.clients =  this.clientsOrig.filter(element => {\n            const year = element.date.substring(3, 10)\n            if (year === search) return true\n            return false\n          })\n        } else if (this.currentSelect === 'model') {\n          this.modeles =  this.modeles.filter(element => {\n            const year = element.date.substring(3, 10)\n            if (year === search) return true\n            return false\n          })\n        }\n    }\n  }\n\n  getAverageClient() {\n    this.adminService.getAverageClient().subscribe(\n      (data: any[]) => {\n        this.valueUser = []\n        // console.log(data)\n        let tmp: any[] = data\n        tmp.forEach(val => {\n          val.duree = this.timerService.convertToTime(val.duree)\n          // console.log(val.duree)\n        })\n        let countLoop = 0\n        for (let i = tmp.length; i > tmp.length - 3; i--) {\n          const index = i - 1\n          tmp[index].rang = countLoop + 1\n          this.valueUser.push(tmp[index])\n          countLoop++\n        }\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n}\n\n\n","<div class=\"main_right\">\n\n  <div class=\"block_right\">\n    <div class=\"title_right\">\n      <select name=\"month\" id=\"month\" (change)=\"selectMonth($event)\">\n        <option value=\"01\">Janvier</option>\n        <option value=\"02\">Février</option>\n        <option value=\"03\">Mars</option>\n        <option value=\"04\">Avril</option>\n        <option value=\"05\">Mai</option>\n        <option value=\"06\">Juin</option>\n        <option value=\"07\">Juillet</option>\n        <option value=\"08\">Août</option>\n        <option value=\"09\">Septembre</option>\n        <option value=\"10\">Octobre</option>\n        <option value=\"11\">Novembre</option>\n        <option value=\"12\">Decembre</option>\n      </select>\n\n      <select name=\"year\" id=\"year\" (change)=\"selectYear($event)\">\n        <option [value]=\"year\" *ngFor=\"let year of years\">{{year}}</option>\n      </select>\n\n      <button class=\"btn btn_integrale\" (click)=\"integral()\"\n      [ngClass]=\"{'integral' : isIntegral}\">\n        Afficher l'intégrale\n      </button>\n    </div>\n\n    <div class=\"under_right\">\n      <div class=\"list_action_right\">\n        <button class=\"btn btn_list\" (click)=\"changeSelection('client')\"\n        [ngClass]=\"{'selected': currentSelect === 'client'}\">\n          Nombre de clients\n        </button>\n        <!-- <button class=\"btn btn_list\" (click)=\"changeSelection('abonner')\"\n        [ngClass]=\"{'selected': currentSelect === 'abonner'}\">\n          Nombre des abonnés\n        </button> -->\n        <button class=\"btn btn_list\" (click)=\"changeSelection('model')\"\n        [ngClass]=\"{'selected': currentSelect === 'model'}\">\n          Nombre des modèles\n        </button>\n      </div>\n\n      <div class=\"graph_right\">\n        <div class=\"wrapper\">\n          <ag-charts-angular\n            style=\"height: 70vh; width: 100%; overflow: hidden\"\n            [options]=\"options\"\n          ></ag-charts-angular>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"block_right second\">\n    <div class=\"title_right\">\n      Statistique des clients\n    </div>\n\n    <div class=\"under_right\">\n      <div class=\"show_right\">\n        <div class=\"title_show\">\n          {{labelUser.title}}\n        </div>\n        <table class=\"table table_contain\">\n          <tr class=\"table_row\">\n            <td *ngFor=\"let item of labelUser.label\">\n              {{item}}\n            </td>\n          </tr>\n          <tr *ngFor=\"let item of valueUser\" class=\"table_row\">\n            <td class=\"name_modele\">{{item.pseudo}}</td>\n            <td >{{item.vue}}</td>\n            <td >{{item.duree}}</td>\n            <td >0{{item.rang}}</td>\n          </tr>\n        </table>\n      </div>\n    </div>\n\n  </div>\n\n</div>\n","<app-header actif=\"1\" connected=\"true\" model=\"true\"></app-header>\n\n<div class=\"main_album\">\n  <div class=\"head_album\"\n  [ngStyle]=\"{'background-image': 'linear-gradient(90deg, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0)),url(' + bannier + ')'}\">\n    <div class=\"profil\">\n      <!-- <img [src]=\"model.path_soft\" alt=\"\" id=\"profil\" *ngIf=\"model.path_soft != null\"> -->\n      <img [defaultImage]=\"defaultImage\" alt=\"\"\n      [lazyLoad]=\"model.path_soft\" id=\"profil\"/>\n    </div>\n  </div>\n\n  <div class=\"under_head_album\" id=\"scrolled_point\">\n    <div class=\"info_model info_mobile\">\n      <div class=\"name_model\">\n        {{model.pseudo}}\n      </div>\n      <div class=\"status_model\">\n        <span *ngIf=\"model.status === 'Hors ligne'\">\n          {{model.pseudo}} n'est pas en ligne pour le moment <br>\n          Merci de consulter ses horaires de connexion\n        </span>\n        <span *ngIf=\"model.status === 'En ligne' || model.status === 'En live'\">\n          {{model.pseudo}} est actuellement en ligne\n        </span>\n      </div>\n    </div>\n    <div class=\"menu_album\">\n      <div class=\"text_menu\" [routerLink]=\"['/modele/albums']\" [queryParams]=\"{context: 'private'}\">\n        Photos privées</div>\n      <div class=\"text_menu\" [routerLink]=\"['/modele/albums']\" [queryParams]=\"{context: 'vip'}\">\n        Albums VIP</div>\n      <div class=\"text_menu menu_shadow\" style=\"opacity: 0;\">album vide</div>\n      <div class=\"text_menu\" [routerLink]=\"['/modele/albums']\" [queryParams]=\"{context: 'free'}\">\n        Albums Free</div>\n      <div class=\"text_menu\">\n        Vidéos</div>\n    </div>\n    <div class=\"info_model info_desktop\">\n      <div class=\"name_model\">\n        {{model.pseudo}}\n      </div>\n      <div class=\"status_model\">\n        <span *ngIf=\"model.status === 'Hors ligne'\">\n          {{model.pseudo}} n'est pas en ligne pour le moment <br>\n          Merci de consulter ses horaires de connexion\n        </span>\n        <span *ngIf=\"model.status === 'En ligne' || model.status === 'En live'\">\n          {{model.pseudo}} est actuellement en ligne\n        </span>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"description_model\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-lg-4\">\n          <div class=\"description description_1\">\n            <div class=\"title_description\">\n              A PROPOS\n            </div>\n            <div class=\"line\"></div>\n            <div class=\"contain_description\">\n              <div class=\"text_description\">\n                <span *ngIf=\"!model.description\">...</span>\n                {{model.description}}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-lg-4\">\n          <div class=\"description description_1\">\n            <div class=\"title_description\">\n              Profil Intro\n            </div>\n            <div class=\"line\"></div>\n            <div class=\"contain_description\">\n              <div class=\"label_description\">\n                Dernière connexion :\n                <span class=\"value_description\" *ngIf=\"model.date_last_connection\">Le {{model.date_last_connection}}</span>\n              </div>\n\n              <div class=\"label_description\">\n                Age :\n                <span class=\"value_description\">{{model.age}} ans</span>\n              </div>\n\n              <div class=\"label_description\">\n                Orientation sexuelle :\n                <span class=\"value_description\">{{model.sex_orientation}}</span>\n              </div>\n\n              <div class=\"label_description\">\n                J'aime :\n                <span class=\"value_description\">{{model.like}}</span>\n              </div>\n\n              <div class=\"label_description\">\n                Je n'aime pas :\n                <span class=\"value_description\">{{model.dislike}}</span>\n              </div>\n\n              <div class=\"label_description\">\n                Status :\n                <span class=\"value_description\">{{model.status}}</span>\n              </div>\n\n              <div class=\"label_description\">\n                Réseaux sociaux :\n                <span class=\"value_description\">{{model.social_network}}</span>\n              </div>\n\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-lg-4\">\n          <div class=\"description description_1\">\n            <div class=\"title_description\">\n              Horaire de connexion\n            </div>\n            <div class=\"line\"></div>\n            <div class=\"contain_description blank\">\n              <!-- <div class=\"label_description\" *ngFor=\"let item of horaire\">\n                {{item.day}} :\n                <span class=\"value_description\">{{item.value}}</span>\n              </div> -->\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"private\">\n    <div class=\"title_album\">\n      Contenus Privés\n      <span>( {{totalAlbumPrivate}} ) </span>\n      <!-- <img [src]=\"camera\" alt=\"\" class=\"photoDetail\" routerLink=\"/modele/albums\"> -->\n    </div>\n\n    <div class=\"none\" *ngIf=\"currentAlbumPrivate.length === 0\">\n      Aucun album\n    </div>\n\n    <div class=\"contain_album\">\n      <div class=\"to_left direction\" (click)=\"toLeft('private')\">\n        <i class=\"fa fa-chevron-left\"></i>\n      </div>\n      <div class=\"image\">\n        <div class=\"container-fluid list_album\">\n          <div class=\"row\">\n            <div class=\"col-4\" *ngFor=\"let item of currentAlbumPrivate\">\n              <div class=\"album\">\n                <!-- <img [src]=\"item.path_album\" alt=\"\" class=\"album_item img-responsive\"> -->\n                <img [defaultImage]=\"defaultImage\" alt=\"\"\n                [lazyLoad]=\"item.path_album\" class=\"album_item img-responsive\"/>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"to_right direction\" (click)=\"toRight('private')\">\n        <i class=\"fa fa-chevron-right\"></i>\n      </div>\n    </div>\n  </div>\n\n\n  <div class=\"vip\">\n    <div class=\"title_album\">\n      Album VIP\n      <span>( {{totalAlbumVIP}} ) </span>\n      <!-- <img [src]=\"camera\" alt=\"\" class=\"photoDetail\" routerLink=\"/modele/albums\"> -->\n    </div>\n\n    <div class=\"none\" *ngIf=\"currentAlbumVIP.length === 0\">\n      Aucun album\n    </div>\n\n    <div class=\"contain_album\">\n      <div class=\"to_left direction\" (click)=\"toLeft('vip')\">\n        <i class=\"fa fa-chevron-left\"></i>\n      </div>\n      <div>\n        <div class=\"container-fluid list_album\">\n          <div class=\"row\">\n            <div class=\"col-4\" *ngFor=\"let item of currentAlbumVIP\">\n              <div class=\"album\">\n                <img [defaultImage]=\"defaultImage\" alt=\"\"\n                [lazyLoad]=\"item.path_album\" class=\"album_item img-responsive\"/>\n                <!-- <img [src]=\"item.path_album\" alt=\"\" class=\"album_item img-responsive\"> -->\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"to_right direction\" (click)=\"toRight('vip')\">\n        <i class=\"fa fa-chevron-right\"></i>\n      </div>\n    </div>\n\n  </div>\n\n\n  <div class=\"free\">\n    <div class=\"title_album\">\n      Album Free\n      <span>( {{totalAlbumFree}} ) </span>\n      <!-- <img [src]=\"camera\" alt=\"\" class=\"photoDetail\" routerLink=\"/modele/albums\"> -->\n    </div>\n\n    <div class=\"none\" *ngIf=\"currentAlbumFree.length === 0\">\n      Aucun album\n    </div>\n\n    <div class=\"contain_album\">\n      <div class=\"to_left direction\" (click)=\"toLeft('free')\">\n        <i class=\"fa fa-chevron-left\"></i>\n      </div>\n      <div>\n        <div class=\"container-fluid list_album\">\n          <div class=\"row\">\n            <div class=\"col-4\" *ngFor=\"let item of currentAlbumFree\">\n              <div class=\"album\">\n                <img [defaultImage]=\"defaultImage\" alt=\"\"\n                [lazyLoad]=\"item.path_album\" class=\"album_item img-responsive\"/>\n                <!-- <img [src]=\"item.path_album\" alt=\"\" class=\"album_item img-responsive\"> -->\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"to_right direction\" (click)=\"toRight('free')\">\n        <i class=\"fa fa-chevron-right\"></i>\n      </div>\n    </div>\n\n  </div>\n\n</div>\n\n\n<div class=\"lds-spinner\" *ngIf=\"loading\">\n  <div></div><div></div><div></div><div></div>\n  <div></div><div></div><div></div><div></div>\n  <div></div><div></div><div></div><div></div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { albumFree, albumPrivate, albumVIP } from '../albums/list-album';\r\nimport { AlbumService } from '../../../services/album/album.service';\r\nimport { Router } from '@angular/router';\r\nimport { addAlbum } from 'src/app/interfaces/add-album.interface';\r\nimport { ProfilService } from '../../../services/profil/profil.service';\r\n\r\ninterface Profil {\r\n  pseudo: string,\r\n  path_soft: string | null,\r\n  age: number,\r\n  sex_orientation: string,\r\n  like: string,\r\n  dislike: string,\r\n  status: string,\r\n  social_network: string,\r\n  description: string,\r\n  date_last_connection: string\r\n}\r\n\r\n@Component({\r\n  selector: 'app-profil-model',\r\n  templateUrl: './profil-model.component.html',\r\n  styleUrls: ['./profil-model.component.scss']\r\n})\r\nexport class ProfilModelComponent implements OnInit {\r\n  defaultImage = 'assets/images/blured.jpg';\r\n  bg = \"assets/images/bg.jpg\";\r\n  camera = \"assets/icons/photoAdd.svg\";\r\n  profil = \"assets/images/image.png\";\r\n  sectionAlbum: number = 3;\r\n  bannier = \"assets/logos/dark-light.jpg\";\r\n\r\n  totalAlbumPrivate: number  = 0;\r\n  pagePrivate: number = 0;\r\n  currentAlbumPrivate: addAlbum[] = [];\r\n\r\n  totalAlbumVIP: number  = 0;\r\n  pageVIP: number = 0;\r\n  currentAlbumVIP: addAlbum[] = [];\r\n\r\n\r\n  totalAlbumFree: number  = 0;\r\n  pageFree: number = 0;\r\n  currentAlbumFree: addAlbum[] = [];\r\n\r\n  model: Profil =  {\r\n    pseudo: '',\r\n    path_soft: null,\r\n    age: 0,\r\n    sex_orientation: '',\r\n    like: '',\r\n    dislike: '',\r\n    status: '',\r\n    social_network: '',\r\n    description: '',\r\n    date_last_connection: ''\r\n  }\r\n\r\n  horaire = [\r\n    {day: 'LUNDI', value: '08h à 10h / 18h à 21h'},\r\n    {day: 'MARDI', value: '08h à 10h / 18h à 21h'},\r\n    {day: 'MERCREDI', value: '08h à 10h / 18h à 21h'},\r\n    {day: 'JEUDI', value: '08h à 10h / 18h à 21h'},\r\n    {day: 'VENDREDI', value: '08h à 10h / 18h à 21h'},\r\n    {day: 'SAMEDI', value: '08h à 10h / 18h à 21h'},\r\n    {day: 'DIMANCHE', value: '08h à 10h / 18h à 21h'}\r\n  ];\r\n\r\n  arrowLeft = \"assets/icons/exclamation-mark.svg\";\r\n  arrowRight = \"assets/icons/exclamation-mark.svg\";\r\n\r\n  count = {\r\n    \"vip\": 0,\r\n    \"private\": 0,\r\n    \"free\": 0\r\n  }\r\n\r\n  loading: boolean = false;\r\n  constructor(\r\n    private albumService: AlbumService,\r\n    private router: Router,\r\n    private profileService: ProfilService\r\n  ) {\r\n   }\r\n\r\n  async ngOnInit() {\r\n    this.init();\r\n    this.getStatus()\r\n    await this.getInfo();\r\n  }\r\n\r\n  async getInfo() {\r\n    this.loading = true;\r\n    return await this.profileService.getProfil().subscribe(\r\n      async (data) => {\r\n        this.model = data;\r\n        return await this.profileService.getInfo().subscribe(\r\n          (data) => {\r\n            // console.log(data);\r\n            const date = new Date().getFullYear();\r\n            this.model.age = date - data.year_birth;\r\n            this.model.pseudo = data.pseudo;\r\n            this.model.path_soft = data.path_soft;\r\n            this.model.date_last_connection = this.getDate(this.model.date_last_connection);\r\n            this.loading = false;\r\n          }, (error) => {\r\n            this.loading = false;\r\n          }\r\n        )\r\n      }\r\n    );\r\n  }\r\n\r\n  getStatus() {\r\n    this.profileService.getProfil().subscribe(\r\n      (data) => {\r\n        this.model.status = data.status;\r\n      }\r\n    )\r\n  }\r\n\r\n  getDate(date: string) {\r\n    if (!date) return null;\r\n    const year = date.substring(0, 4);\r\n    const month = date.substring(5, 7);\r\n    const day = date.substring(8, 10);\r\n    const hour = date.substring(11, 16);\r\n    const full = day + '/' + month + '/' + year + ' à ' + hour;\r\n    return full;\r\n  }\r\n\r\n  async countAlbum() {\r\n    this.albumService.getCount().subscribe(\r\n      (data) => {\r\n        this.count = data;\r\n          this.totalAlbumPrivate = this.count.private;\r\n          this.totalAlbumVIP = this.count.vip;\r\n          this.totalAlbumFree = this.count.free;\r\n      }\r\n    )\r\n  }\r\n\r\n  async init() {\r\n    await this.countAlbum();\r\n    await (await this.albumService.getAlbums('private', 0, 3)).subscribe(\r\n      (data) => {\r\n        this.currentAlbumPrivate = data;\r\n      }\r\n    );\r\n\r\n    await (await this.albumService.getAlbums('free', 0, 3)).subscribe(\r\n      (data) => {\r\n        this.currentAlbumFree = data;\r\n      }\r\n    );\r\n\r\n    await (await this.albumService.getAlbums('vip', 0, 3)).subscribe(\r\n      (data) => {\r\n        this.currentAlbumVIP = data;\r\n      }\r\n    );\r\n  }\r\n\r\n  scrollTo(section: string) {\r\n    document.querySelector(`#${section}`).scrollIntoView();\r\n  }\r\n\r\n  toLeft(context: string) {\r\n    switch (context) {\r\n      case 'private':\r\n        if (this.pagePrivate > 0) {\r\n          this.pagePrivate = this.pagePrivate - 1;\r\n          this.fetchAlbum(context, this.pagePrivate * this.sectionAlbum)\r\n        }\r\n        break;\r\n\r\n      case 'vip':\r\n        if (this.pageVIP > 0) {\r\n          this.pageVIP = this.pageVIP - 1;\r\n          this.fetchAlbum(context, this.pageVIP * this.sectionAlbum)\r\n        }\r\n        break;\r\n\r\n      case 'free':\r\n        if (this.pageFree > 0) {\r\n          this.pageFree = this.pageFree - 1;\r\n          this.fetchAlbum(context, this.pageFree * this.sectionAlbum)\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  toRight(context: string) {\r\n    switch (context) {\r\n      case 'private':\r\n        this.pagePrivate =  this.pagePrivate + 1;\r\n        var marge = Math.floor((this.totalAlbumPrivate/this.sectionAlbum) - 0.1); // - 0.1 avoid just division result\r\n        if (this.pagePrivate <= marge) {\r\n          this.fetchAlbum(context, this.pagePrivate * this.sectionAlbum);\r\n        } else { this.pagePrivate = this.pagePrivate -1;}\r\n        break;\r\n\r\n      case 'vip':\r\n        this.pageVIP =  this.pageVIP + 1;\r\n        var marge = Math.floor((this.totalAlbumVIP/this.sectionAlbum) - 0.1); // - 0.1 avoid just division result\r\n        if (this.pageVIP <= marge) {\r\n          this.fetchAlbum(context, this.pageVIP * this.sectionAlbum);\r\n        } else { this.pageVIP = this.pageVIP -1;}\r\n        break;\r\n\r\n      case 'free':\r\n        this.pageFree =  this.pageFree + 1;\r\n        var marge = Math.floor((this.totalAlbumFree/this.sectionAlbum) - 0.1); // - 0.1 avoid just division result\r\n        if (this.pageFree <= marge) {\r\n          this.fetchAlbum(context, this.pageFree * this.sectionAlbum);\r\n        } else { this.pageFree = this.pageFree -1;}\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  async fetchAlbum(context: string, debut: number) {\r\n    this.loading = true;\r\n    switch (context) {\r\n      case 'private':\r\n        await (await this.albumService.getAlbums(context, debut, this.sectionAlbum)).subscribe(\r\n          (data) => {\r\n            this.currentAlbumPrivate = data;\r\n            this.loading = false;\r\n          }, (error) => {\r\n            this.loading = false;\r\n          }\r\n        );\r\n        break;\r\n      case 'vip':\r\n        await (await this.albumService.getAlbums(context, debut, this.sectionAlbum)).subscribe(\r\n          (data) => {\r\n            this.currentAlbumVIP = data;\r\n            this.loading = false;\r\n          }, (error) => {\r\n            this.loading = false;\r\n          }\r\n        );\r\n        break;\r\n      case 'free':\r\n        await (await this.albumService.getAlbums(context, debut, this.sectionAlbum)).subscribe(\r\n          (data) => {\r\n            this.currentAlbumFree = data;\r\n            this.loading = false;\r\n          }, (error) => {\r\n            this.loading = false;\r\n          }\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  goToDashboard() {\r\n    this.router.navigate(['/modele/dashboard']);\r\n  }\r\n\r\n}\r\n","<div class=\"main_stats\">\r\n  <br><br>\r\n  <div class=\"contain_info_show\">\r\n    <div class=\"info_show\">\r\n      INFO SHOW\r\n    </div>\r\n    <div class=\"container-fluid contain_\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"label_left\">\r\n            Type du show\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-1\">\r\n          <div class=\"label_dot\">\r\n            :\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"label_right\">\r\n            {{type_show}}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"label_left\">\r\n            Tarif du show\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-1\">\r\n          <div class=\"label_dot\">\r\n            :\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"label_right\">\r\n            {{tarif_show}} Crédits / mn\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"label_left\">\r\n            Client\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-1\">\r\n          <div class=\"label_dot\">\r\n            :\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"label_right\">\r\n            {{client}}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  <br>\r\n  <div class=\"contain_info_show\">\r\n    <div class=\"info_show\">\r\n      INFO SOLDE\r\n    </div>\r\n    <div class=\"container-fluid contain_\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"label_left\">\r\n            Solde de crédits\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-1\">\r\n          <div class=\"label_dot\">\r\n            :\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"label_right\">\r\n            {{actualCredit}} Crédits\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"label_left\">\r\n            Durée passée\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-1\">\r\n          <div class=\"label_dot\">\r\n            :\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"label_right\">\r\n            <span *ngIf=\"hour_passed > 0\"> <span *ngIf=\"hour_passed < 10\">0</span>{{hour_passed}} : </span>\r\n            <span *ngIf=\"minute_passed < 10\">0</span>{{minute_passed}} :\r\n            <span *ngIf=\"second_passed < 10\">0</span>{{second_passed}}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"label_left\">\r\n            Crédits encaissés\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-1\">\r\n          <div class=\"label_dot\">\r\n            :\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"label_right\">\r\n            {{winCredit}} Crédits\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"label_left\">\r\n            Solde total\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-1\">\r\n          <div class=\"label_dot\">\r\n            :\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"label_right\">\r\n            {{totalCredit}} Crédits\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- <div class=\"contain_btn\">\r\n    <button class=\"btn btn_out\">\r\n      Sortir du Show\r\n    </button>\r\n  </div> -->\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-live-vip-stat',\n  templateUrl: './live-vip-stat.component.html',\n  styleUrls: ['./live-vip-stat.component.scss']\n})\nexport class LiveVipStatComponent implements OnInit {\n  @Input()\n  type_show: any;\n\n  @Input()\n  tarif_show: any;\n\n  @Input()\n  time_show: any;\n\n  @Input()\n  client: any;\n\n  @Input()\n  time_passed: any;\n\n  @Input()\n  hour_passed: any;\n\n  @Input()\n  minute_passed: any;\n\n  @Input()\n  second_passed: any;\n\n  @Input()\n  actualCredit: any;\n\n  @Input()\n  winCredit: any;\n\n  @Input()\n  totalCredit: any;\n\n\n  stats1 = [\n    {label: \"Type du show\", value: \"VIP\"},\n    {label: \"Tarif du show\", value: \"15 Crédits / mn\"},\n    {label: \"Client\", value: \"Motome\"}\n  ];\n\n  stats2 = [\n    {label: \"Solde de crédits\", value: \"225 Crédits\"},\n    {label: \"Durée passée\", value: \"00:00\"},\n    {label: \"Crédits encaissés\", value: \"150 Credits\"},\n    {label: \"Solde total\", value: \"375 Credits\"},\n  ];\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.startMinuteur();\n  }\n\n  startMinuteur() {\n    setInterval(() => {\n          this.second_passed++;\n          if (this.second_passed > 59) {\n            this.second_passed = 0;\n            this.minute_passed++;\n            if (this.minute_passed > 59) {\n              this.minute_passed = 0;\n              this.hour_passed++;\n            }\n          }\n    }, 1000);\n  }\n\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { GalleryItem, Gallery, ImageItem, ImageSize, ThumbnailsPosition } from 'ng-gallery';\nimport { Lightbox } from 'ng-gallery/lightbox';\nimport { ModelService } from 'src/app/services/model/model.service';\nimport { addAlbum } from '../../../interfaces/add-album.interface';\nimport { AlbumService } from '../../../services/album/album.service';\n\nconst data = [\n  {\n    path_album: 'https://res.cloudinary.com/team-stenny/image/upload/v1627759167/light_fumemz.jpg',\n  }\n];\n\n@Component({\n  selector: 'app-home-live',\n  templateUrl: './home-live.component.html',\n  styleUrls: ['./home-live.component.scss'],\n})\nexport class HomeLiveComponent implements OnInit {\n  defaultImage = './../../../../assets/images/blured.jpg';\n  mainModel = {\n    path_soft: null,\n    pseudo: '',\n    id: 0\n  };\n\n  allLive = [];\n  other = [];\n\n  currentAlbum : addAlbum[] = [];\n\n  items: GalleryItem[];\n\n  imageData = data;\n\n  loading: boolean = false;\n\n  constructor(\n    private modelSrv: ModelService,\n    private albumService: AlbumService,\n    public gallery: Gallery,\n    public lightbox: Lightbox\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.init();\n    this.getLive();\n  }\n\n\n  init() {\n    // Creat gallery items\n    this.items = this.imageData.map(item => new ImageItem({ src: item.path_album, thumb: item.path_album }));\n    /** Lightbox Example */\n    // Get a lightbox gallery ref\n    const lightboxRef = this.gallery.ref('lightbox');\n\n    // Add custom gallery config to the lightbox (optional)\n    lightboxRef.setConfig({\n      imageSize: ImageSize.Cover,\n      thumbPosition: ThumbnailsPosition.Top\n    });\n    // Load items into the lightbox gallery ref\n    lightboxRef.load(this.items);\n  }\n\n  getLive() {\n    this.loading = true;\n    this.modelSrv.getLive().subscribe(\n      (data) => {\n        this.allLive = data;\n        const random = Math.floor(Math.random() * (data.length - 1 + 1)) + 1;\n        this.mainModel = this.allLive[random];\n        this.getNoLive();\n        // console.log(\"Live \", this.allLive);\n      }, (error) => {\n        this.loading = false;\n      }\n    )\n  }\n\n  getNoLive() {\n    this.modelSrv.getNoLive().subscribe(\n      (data) => {\n        this.other = data;\n        this.loading = false;\n        // console.log(\"NoLive \", this.other);\n      }, (error) => {\n        this.loading = false;\n      }\n    )\n  }\n\n  seeModel(modelId: number, path_soft: string) {\n    this.imageData = [];\n    const data = {\n      modelId,\n      type_album: 'free'\n    }\n    this.albumService.getModelAlbums(data).subscribe(\n      (data: any) => {\n        const path_album = {\n          path_album : path_soft // Profil Model\n        }\n\n        this.imageData = data;\n        this.imageData.push(path_album);\n        // console.log(\"Image dada \", this.imageData);\n        this.init();\n      }\n    )\n  }\n}\n","<app-header clickable=\"true\" actif=\"1\"></app-header>\n\n<div class=\"main_live\">\n  <div class=\"contain_main_model\">\n    <div class=\"inside\" *ngIf=\"mainModel && mainModel.path_soft && mainModel.path_soft !== ''\">\n      <!-- [ngStyle]=\"{'background-image': 'url('+ mainModel.url +')'}\" -->\n      <div class=\"main_model\">\n        <img [src]=\"mainModel.path_soft\" alt=\"\" class=\"img_bg\"\n        (mouseover)=\"seeModel(mainModel.id, mainModel.path_soft)\"\n        (click)=\"lightbox.open(0)\">\n        <div class=\"live_profil main\">\n          LIVE\n        </div>\n      </div>\n        <div class=\"pseudo_profil_main\">\n          <p class=\"btn_red\"></p>\n          <p class=\"pseudo\">{{mainModel.pseudo}}</p>\n        </div>\n    </div>\n  </div>\n\n  <div class=\"section section_list_live\">\n    <div class=\"profil_model\">\n        <div class=\"row_model\">\n          <div class=\"col_model\" *ngFor=\"let model of allLive; let i = index\">\n            <!-- [ngStyle]=\"{'background-image': 'url('+ item.url +')'}\" -->\n            <div class=\"profil\">\n              <img [defaultImage]=\"defaultImage\" alt=\"\" class=\"img_section\"\n              (mouseover)=\"seeModel(model.id, model.path_soft)\"\n              [lazyLoad]=\"model.path_soft\"\n              (click)=\"lightbox.open(0)\"/>\n              <!-- <img [src]=\"model.path_soft\" alt=\"\" class=\"img_section\"\n              (mouseover)=\"seeModel(model.id, model.path_soft)\"\n              (click)=\"lightbox.open(0)\"> -->\n              <div class=\"live_profil\">\n                LIVE\n              </div>\n              <div class=\"pseudo_profil\">\n                <p class=\"btn_red\"></p>\n                <p class=\"pseudo\">{{model.pseudo}}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"no_list\" *ngIf=\"allLive.length === 0\">\n          <div class=\"pseudo_profil_main\"\n          style=\"display: flex; flex-direction: row; justify-content: center;\">\n              <p class=\"btn_red\"></p>\n              <p class=\"pseudo\" style=\"position: relative; top: 1px;\">LIVE</p>\n          </div>\n          Aucun modèle n'est disponible pour le moment\n        </div>\n\n    </div>\n  </div>\n\n  <!-- <div class=\"section\">\n    <div class=\"profil_model\">\n      <div class=\"container-fluid\">\n        <div class=\"row\">\n          <div class=\"col-lg-3 col-sm-6\" *ngFor=\"let item of allLive; let i = index\">\n            <div class=\"profil\" [ngStyle]=\"{'background-image': 'url('+ item.url +')'}\">\n\n              <div class=\"live_profil\">\n                LIVE\n              </div>\n              <div class=\"pseudo_profil\">\n                <p class=\"btn_red\"></p>\n                <p class=\"pseudo\">{{item.name}}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div> -->\n\n  <div class=\"section\">\n    <div class=\"text_other\">\n      voir tous <br>\n      nos autres modèles\n    </div>\n  </div>\n\n  <div class=\"section\">\n    <div class=\"other\">\n      <div class=\"row\">\n        <div class=\"col-lg-2 col-sm-3\" *ngFor=\"let model of other\">\n          <div class=\"contain_other\">\n            <img [defaultImage]=\"defaultImage\" alt=\"\"\n              (mouseover)=\"seeModel(model.id, model.path_soft)\"\n              [lazyLoad]=\"model.path_soft\"\n              (click)=\"lightbox.open(0)\"/>\n            <!-- <img [src]=\"model.path_soft\" alt=\"\"\n            (mouseover)=\"seeModel(model.id, model.path_soft)\"\n            (click)=\"lightbox.open(0)\"> -->\n            <div class=\"pseudo_profil_main\">\n              <p class=\"btn_red\"></p>\n              <p class=\"pseudo\">{{model.pseudo}}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"no_list\" *ngIf=\"other.length === 0\">\n        Aucun modèle n'est disponible pour le moment\n      </div>\n\n    </div>\n  </div>\n\n  <div class=\"section\">\n    <div class=\"become_model\">\n      <div class=\"contain_become\">\n        <div class=\"text_model\">\n          Devenir modèle !\n        </div>\n        <div class=\"click_model\" routerLink=\"/modele/inscription\">\n          Cliquer ici !\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n\n\n\n<div class=\"lds-spinner\" *ngIf=\"loading\">\n<div></div><div></div><div></div><div></div>\n<div></div><div></div><div></div><div></div>\n<div></div><div></div><div></div><div></div>\n</div>\n","import { animate, group, query, style, transition, trigger } from \"@angular/animations\";\r\n\r\nconst ANIMATION_SPEED = \"250ms\"\r\n\r\nexport const routeTransitionAnimations = trigger('animateRoute',[\r\n    transition('* <=> *', [\r\n      query(\":enter, :leave\", [style({ position: \"fixed\", width: \"100%\" })], { optional: true }),\r\n      group([\r\n        query(\":enter\", [\r\n          style({ transform: \"translateX(150%)\"  }),\r\n          animate(\r\n            `${ANIMATION_SPEED} ease-in-out`,\r\n            style({ transform: \"translateX(0)\" })\r\n          )\r\n        ], { optional: true }),\r\n        query(\":leave\", [\r\n          style({ transform: \"translateX(0%)\" }),\r\n          animate(\r\n            `${ANIMATION_SPEED} ease-in-out`,\r\n            style({ transform: \"translateX(-150%)\" })\r\n          )\r\n        ], { optional: true })\r\n      ])\r\n      ])\r\n]\r\n)\r\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-popup-info',\n  templateUrl: './popup-info.component.html',\n  styleUrls: ['./popup-info.component.scss']\n})\nexport class PopupInfoComponent implements OnInit {\n  title = '';\n  message = '';\n  action = '';\n  constructor(\n    public dialogRef: MatDialogRef<PopupInfoComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private router: Router\n  ) {\n    this.action = data.action;\n    this.title = data.title;\n    this.message = data.message;\n   }\n\n  ngOnInit(): void {\n  }\n\n  async validate(): Promise<void> {\n    if (this.action == 'client') {\n      this.router.navigate(['/client/connexion'])\n    } else if (this.action == 'model') {\n      this.router.navigate(['/modele/connexion'])\n    } else if (this.action ===  null) {\n      // nothing\n    } else {\n      this.router.navigate([this.action])\n    }\n    return this.dialogRef.close();\n  }\n\n}\n","<div class=\"main_info\">\n  <h2>\n    {{title}}\n  </h2>\n  <mat-dialog-content>\n    <div class=\"content_text\">\n      <div [innerHTML]=\"message | sanitize\">\n      </div>\n      <!-- {{message}} -->\n    </div>\n  </mat-dialog-content>\n  <mat-dialog-actions>\n    <button class=\"btn_cancel\" (click)=\"validate()\" mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Confirmer</button>\n  </mat-dialog-actions>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main\"></div>\n<div class=\"contain_out\">\n  <div class=\"title_found\">\n    Page non affichée\n  </div>\n  <div class=\"content\">\n    La page que vous essayez d'afficher est introuvable.\n  </div>\n</div>\n","<div class=\"main_infobar\">\n  <div class=\"left_side_info\">\n    <div class=\"subtitle_info\">\n      {{subTitle}}\n    </div>\n    <div class=\"title_info\">\n      {{title}}\n    </div>\n  </div>\n\n  <div class=\"right_side_info\">\n    <div class=\"contain_info\">\n      <img [src]=\"help\" alt=\"\">\n      <div class=\"txt_help\">\n        aide\n        <div class=\"contain_help\">\n          <div class=\"list_helps\" *ngFor=\"let item of helps\">\n            <img [src]=\"item.icon\" alt=\"\">\n            <p>{{item.label}}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"spacer_infobar\"></div>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-infobar-admin',\n  templateUrl: './infobar-admin.component.html',\n  styleUrls: ['./infobar-admin.component.scss']\n})\nexport class InfobarAdminComponent implements OnInit {\n  @Input()\n  title: string\n\n  @Input()\n  subTitle: string\n\n  icon = './../../../../../assets/icons/paper-clip.svg'\n  help = './../../../../../assets/icons/admin-icons/help-web-button.png'\n\n  helps = [\n    {\n      label: 'Bloquer',\n      icon : './../../../../../assets/icons/admin-icons/bloquer.png'\n    },\n    {\n      label: 'Désactiver',\n      icon : './../../../../../assets/icons/admin-icons/deactivate.png'\n    },\n    {\n      label: 'Activer',\n      icon : './../../../../../assets/icons/admin-icons/activate.png'\n    },\n    {\n      label: 'Débloquer',\n      icon : './../../../../../assets/icons/admin-icons/debloquer.png'\n    },\n    {\n      label: 'Supprimer',\n      icon : './../../../../../assets/icons/admin-icons/delete.png'\n    }\n  ]\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit,\r\n  OnDestroy, PLATFORM_ID,\r\n  Inject, ViewChild,\r\n  ElementRef } from '@angular/core';\r\nimport {isPlatformBrowser} from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LocalStorageService } from 'ngx-localstorage';\r\nimport { Chat, ChatSocket } from 'src/app/interfaces/chat.interface';\r\nimport { ChatService } from 'src/app/services/chat/chat.service';\r\nimport { ModelService } from 'src/app/services/model/model.service';\r\nimport { SocketService } from 'src/app/services/socket/socket.service';\r\nimport { PopupService } from '../../../services/popup/popup.service';\r\nimport { ProfilService } from '../../../services/profil/profil.service';\r\nimport { RoomVipService } from '../../../services/roomVip/room-vip.service';\r\nimport { ClientService } from '../../../services/client/client.service';\r\nimport { PackModalComponent } from 'src/app/modals/pack-modal/pack-modal.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { TimerService } from '../../../services/timer/timer.service';\r\nimport { CreditTimer, TypeTimer } from 'src/app/interfaces/timer.interface';\r\nimport { NotificationService } from '../../../services/notification/notification.service';\r\n\r\n// Peer\r\nimport './../../modele/shim';\r\nimport Peer from \"peerjs\"\r\nimport { Subscription } from 'rxjs';\r\nimport { AlbumService } from '../../../services/album/album.service';\r\n\r\n@Component({\r\n  selector: 'app-live-vip',\r\n  templateUrl: './live-vip.component.html',\r\n  styleUrls: ['./live-vip.component.scss', './../live.scss']\r\n})\r\nexport class LiveVipComponent implements OnInit {\r\n  context: string = \"VIP\";\r\n  imgPoster = \"assets/images/image.png\";\r\n  thrombone = \"assets/icons/paper-clip.svg\";\r\n  send = \"assets/icons/send-button.svg\";\r\n  dot = \"assets/icons/more_purple.svg\";\r\n  close = \"assets/icons/close.svg\";\r\n\r\n  toggleDot: boolean = false;\r\n\r\n  bg : \"assets/logos/dark-light.jpg\";\r\n  modelPseudo = '';\r\n  modelId: number;\r\n  idRoom: number;\r\n  actif: number;\r\n  message: string = '';\r\n  chatColor = \"black\";\r\n  clientId: number;\r\n  clientPseudo: string = '';\r\n  clientCredit: number = 0;\r\n  client = \"assets/images/user_chat.png\";\r\n\r\n  messages: Chat[] = [];\r\n  leaved: boolean = false;\r\n\r\n  indisponible: boolean = false;\r\n\r\n  timer = {\r\n    id: 0,\r\n    hour: 0,\r\n    minute: 0,\r\n    second: 0,\r\n    fail: false,\r\n    reinit: false\r\n  };\r\n\r\n  show = {\r\n    id: 0,\r\n    credit: null,\r\n    second: null,\r\n    type: null\r\n  };\r\n\r\n  joinSub = new Subscription();\r\n  leaveSub = new Subscription();\r\n  messageSub = new Subscription();\r\n  modelLeaveSub = new Subscription();\r\n  modelPassedVipSub = new Subscription();\r\n  invitationVipSub = new Subscription();\r\n  peerSub = new Subscription();\r\n  newPeerSub = new Subscription();\r\n\r\n  albums = []\r\n\r\n  showEmojiPicker = false;\r\n  sets = [\r\n    'native',\r\n    'google',\r\n    'twitter',\r\n    'facebook',\r\n    'emojione',\r\n    'apple',\r\n    'messenger'\r\n  ]\r\n  set = 'google';\r\n\r\n  // @HostListener(\"window:beforeunload\", [\"$event\"]) unloadHandler(event: Event) {\r\n  //   this.socketService.leaveVip(this.idRoom, 'client');\r\n  // }\r\n\r\n  // WEB RTC VIDEO\r\n  @ViewChild('video_live_client', {static: true}) video: ElementRef<HTMLVideoElement>;\r\n  @ViewChild('video_live_model', {static: true}) remote_video: ElementRef<HTMLVideoElement>;\r\n\r\n  private peer: Peer;\r\n  peerIdShare: string;\r\n  peerId: string = null;\r\n  lazyStream: any;\r\n  currentPeer: any;\r\n  private peerList: Array<any> = [];\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private _platform: Object,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private modelService: ModelService,\r\n    private roomVipService: RoomVipService,\r\n    private store: LocalStorageService,\r\n    private chatService: ChatService,\r\n    private socketService: SocketService,\r\n    private popupService: PopupService,\r\n    private profilService: ProfilService,\r\n    private clientService: ClientService,\r\n    private dialog: MatDialog,\r\n    private timerService: TimerService,\r\n    private notificationService: NotificationService,\r\n    private albumService: AlbumService\r\n    ) {\r\n      this.peer = new Peer();\r\n      const id = this.route.snapshot.paramMap.get('model');\r\n      this.modelId = parseInt(id);\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    if (!this.modelId) {\r\n      this.errorRoom();\r\n      return null;\r\n    }\r\n    this.getModel();\r\n    this.initColor();\r\n    this.initLiveVideo();\r\n    this.clientService.lastRoom(this.router.url);\r\n  }\r\n\r\n  async ngOnDestroy() {\r\n    this.onStop();\r\n    (await this.creditTimer()).subscribe(\r\n      (data) => {\r\n        // console.log(\"Response credit timer \", data);\r\n      }\r\n    );\r\n    this.joinSub.unsubscribe();\r\n    this.leaveSub.unsubscribe();\r\n    this.messageSub.unsubscribe();\r\n    this.modelLeaveSub.unsubscribe();\r\n    this.modelPassedVipSub.unsubscribe();\r\n    this.invitationVipSub.unsubscribe();\r\n    this.peerSub.unsubscribe();\r\n    this.newPeerSub.unsubscribe();\r\n  }\r\n\r\n  // Get model infos\r\n  getModel() {\r\n    this.modelService.getModel(this.modelId).subscribe(\r\n        (data) => {\r\n          // console.log('Model ', data);\r\n          this.bg = data.path_soft;\r\n          this.modelPseudo = data.pseudo;\r\n          if (data.profile.status !== 'En vip') {\r\n            this.errorRoom();\r\n            return null;\r\n          }\r\n          this.getMyInfo();\r\n        }\r\n    )\r\n  }\r\n\r\n  // Get client infos + get model info\r\n  getMyInfo() {\r\n      this.clientService.getMyInfos().subscribe(\r\n        (data) => {\r\n          // console.log('My INFO ', data);\r\n          this.clientId = data.id;\r\n          this.clientPseudo = data.pseudo;\r\n          this.clientCredit = data.credit ? data.credit.credit : 0; // Client Credit\r\n          this.getInfoRoom();\r\n        }\r\n      )\r\n  }\r\n\r\n  getInfoRoom() {\r\n    this.roomVipService.getRoomModel(this.modelId).subscribe(\r\n      (data) => {\r\n        console.log('Model room ', data);\r\n        this.idRoom = data.idRoom;\r\n\r\n        if (data.idRoom === null) {\r\n          this.obsolete();\r\n          this.actif = 0;\r\n          this.idRoom = 0;\r\n          return false;\r\n        }\r\n\r\n        this.actif = data.actif > 2 ? 2: data.actif;\r\n\r\n        if (this.clientId !== data.clientId) {\r\n          this.errorRoom();\r\n          return false;\r\n        }\r\n        this.getMessages();\r\n        this.initSocket();\r\n      }\r\n    )\r\n  }\r\n\r\n  // Init the room + Get client infos\r\n  // initRoom() {\r\n  //   const roomVIP = parseInt(this.store.get('roomVIP'));\r\n  //   this.idRoom = roomVIP;\r\n  //   if (!roomVIP) {\r\n  //     this.errorRoom();\r\n  //     return false;\r\n  //   }\r\n  //   this.getMyInfo();\r\n  // }\r\n\r\n\r\n  getMessages() {\r\n    this.chatService.getMessage(this.idRoom, 'vip').subscribe(\r\n      (data) => {\r\n        this.messages = data;\r\n      }\r\n    )\r\n  }\r\n\r\n  async initSocket() {\r\n    await this.socketService.joinVip(this.idRoom, this.modelId);\r\n\r\n    this.joinSub = this.socketService.listen(`joined ${this.idRoom}V`).subscribe(\r\n      (data: any) => {\r\n        // console.log('Joined ', data);\r\n        this.actif = data < 0 ? 0 : data;\r\n        this.actif = data > 2 ? 2 : data;\r\n        console.log('Actif ', this.actif);\r\n      }\r\n    );\r\n\r\n    this.leaveSub = this.socketService.listen(`leaved ${this.idRoom}V`).subscribe(\r\n      (data: any) => {\r\n        // console.log('leaved ', data);\r\n        this.actif = data < 0 ? 0 : data;\r\n        this.actif = data > 2 ? 2 : data;\r\n        console.log('Actif ', this.actif);\r\n      }\r\n    );\r\n\r\n    this.messageSub = this.socketService.listen(`message ${this.idRoom}V`).subscribe(\r\n      (data) => {\r\n        // console.log('Msg to client ', data);\r\n        this.getMessages();\r\n      }\r\n    );\r\n\r\n    this.modelLeaveSub = this.socketService.listen(`model leaved ${this.idRoom}V`).subscribe(\r\n      (data) => {\r\n        this.leaved = true;\r\n        this.indisponible = true;\r\n        this.actif = 1;\r\n        this.popupService.info('/client/accueil/registered','LIVE INDISPONIBLE',\r\n        `${this.modelPseudo} a fermé le live de ce room`);\r\n      }\r\n    );\r\n\r\n    this.peerSub = this.socketService.listen(`ans peerId ${this.clientId} ${this.idRoom}V`).subscribe(\r\n      (data: {peerId: any, room: string, clientId: number}) => {\r\n          console.log(\"ans peerId \", data);\r\n          this.peerIdShare = data.peerId;\r\n          this.connectWithPeer();\r\n    }\r\n    );\r\n\r\n    this.newPeerSub = this.socketService.listen(`new model peerId ${this.idRoom}V`).subscribe(\r\n      (data: {role: string, modelId: number, room: string, peerId: string}) => {\r\n          console.log(\"new model peerId\");\r\n          this.peerIdShare = data.peerId;\r\n          this.connectWithPeer();\r\n      }\r\n    );\r\n\r\n    this.initTimer();\r\n    if (this.peerId) {\r\n      this.socketService.sendClientPeerId({peerId: this.peerId, room: this.idRoom+'V'});\r\n    } else {\r\n      this.relaunchPeerId();\r\n    }\r\n\r\n    this.getAlbums();\r\n  }\r\n\r\n  relaunchPeerId() {\r\n    this.peer.on('open', (id) => {\r\n      console.log(\"Relaunch Peer Id \", id);\r\n      this.peerId = id;\r\n      this.socketService.sendClientPeerId({peerId: this.peerId, room: this.idRoom+'V'});\r\n    });\r\n  }\r\n\r\n  obsolete() {\r\n    this.popupService.info('/client/accueil/registered','LIVE INDISPONIBLE',\r\n    `Aucun live n\\'est lancé dans ce room`);\r\n  }\r\n\r\n  initColor() {\r\n    if (this.store.get(\"ticket_chat\")) {\r\n      this.chatColor = this.store.get(\"ticket_chat\");\r\n      return true;\r\n    };\r\n    this.roomVipService.getColor().subscribe(\r\n      (data) => {\r\n        this.chatColor = data.color;\r\n        this.store.set(\"ticket_chat\", data.color);\r\n      }\r\n    )\r\n  }\r\n\r\n  sendMessage() {\r\n    if (!this.message) return;\r\n    const data: Chat = {\r\n      idRoom: this.idRoom,\r\n      message: this.message,\r\n      type_source: 'client',\r\n      id_source: this.clientId,\r\n      code_couleur: this.chatColor,\r\n      type_chat: 'vip'\r\n    }\r\n    this.message = null;\r\n    // console.log(data);\r\n    this.chatService.postMessage(data).subscribe(\r\n      (data) => {\r\n        this.getMessages();\r\n        const msg: ChatSocket = {\r\n          room: this.idRoom + 'V',\r\n          role: 'client',\r\n          id: this.clientId,\r\n          message: this.message\r\n        }\r\n        this.socketService.sendMessage(msg);\r\n      }\r\n    )\r\n  }\r\n\r\n  toggleDots() {\r\n    this.toggleDot = !this.toggleDot;\r\n    console.log(this.toggleDot);\r\n  }\r\n\r\n\r\n  async liveOut() {\r\n      // this.creditTimer();\r\n      await this.leaveTimer().then(\r\n        (data) => {\r\n          this.roomVipService.leaveRoom();\r\n          this.socketService.leaveVip(this.idRoom, 'client').then(\r\n            () => {\r\n              this.store.remove('roomVIP');\r\n              this.router.navigate(['/client/accueil/registered']);\r\n            }\r\n          );\r\n        });\r\n        this.onStop();\r\n  }\r\n\r\n  async leaveTimer() {\r\n    const data = {\r\n      id: this.timer.id,\r\n      type: TypeTimer.VIP,\r\n      leaved: true,\r\n      push: new Date().toString()\r\n    }\r\n    // console.log(\"Before leave timer \", data)\r\n    return await this.timerService.updateTimer(data).subscribe(\r\n      (data) => {\r\n        // console.log('Leave timer ', data);\r\n        this.timer.reinit = true;\r\n      }\r\n    )\r\n  }\r\n\r\n  buy() {\r\n    const dialogRef = this.dialog.open(PackModalComponent, {\r\n      width: '80vh',\r\n      data: {}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {});\r\n  }\r\n\r\n  errorRoom() {\r\n    this.popupService.info(null,'LIVE INDISPONIBLE',\r\n    `Ce live n\\'est plus disponible`);\r\n    this.indisponible = true;\r\n  }\r\n\r\n  async getCredit() {\r\n    return await this.clientService.getCredit().subscribe(\r\n      (data) => {\r\n        this.clientCredit = data.credit;\r\n        console.log('Client credit ', this.clientCredit);\r\n        if (this.show.credit < this.clientCredit) return null;\r\n        this.timer.fail = true;\r\n        // if Not leaved\r\n        if (!this.timer.reinit) {\r\n          this.notificationService.failure(\"CREDIT INSUFFISANT\", \"Veuillez vous recharger.\");\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n    // Timer\r\n    async initTimer() {\r\n      this.timerService.getTimer(this.modelId, TypeTimer.VIP).subscribe(\r\n        async (data) => {\r\n          // console.log('Timer ', data);\r\n          const created: Date = data.createdAt;\r\n          const updated: Date = data.updatedAt;\r\n          this.timer.id = data.id;\r\n          // console.log(created.toString(), \" to \", updated.toString());\r\n          const {hour, minute, second} = this.timerService.convertTime(created.toString(), updated.toString());\r\n          this.timer.hour = hour;\r\n          this.timer.minute = minute;\r\n          this.timer.second = second;\r\n          // console.log(this.timer.hour, ':', this.timer.minute, ':', this.timer.second);\r\n          await this.getCostShow();\r\n        }\r\n      )\r\n    }\r\n\r\n    async getCostShow() {\r\n      return await this.timerService.getCostShow(TypeTimer.VIP).subscribe(\r\n        (data: any) => {\r\n          this.show.id = data.id;\r\n          this.show.credit = data.credit;\r\n          this.show.second = data.second;\r\n          this.show.type = data.type;\r\n          // console.log('Show cost ' , this.show, \" - credit - \" , this.clientCredit);\r\n          if (this.clientCredit < this.show.credit) {\r\n            this.aucunCredit();\r\n            return null;\r\n          } else if (this.clientCredit <= (this.show.credit * 2)) {\r\n            this.creditInsuffisant();\r\n            return null;\r\n          }\r\n          this.beginTimer();\r\n        }\r\n      )\r\n    }\r\n\r\n    creditInsuffisant() {\r\n      this.popupService.info(null,'CREDIT INSUFFISANT',\r\n      `Vous n\\'avez presque plus de crédit. Veuillez vous recharger.`);\r\n      setTimeout(\r\n        () => {\r\n          this.getCredit();\r\n\r\n        }, 20000\r\n      )\r\n    }\r\n\r\n    aucunCredit() {\r\n      this.timer.fail = true;\r\n      this.popupService.info('/client/achat_de_credit','ACHAT DE CREDIT',\r\n      `Veuillez vous recharger.`);\r\n    }\r\n\r\n    async beginTimer() {\r\n      const delay = this.show.second * 1000;\r\n      // console.log(delay, \" ms \");\r\n      await (await this.creditTimer()).subscribe( // launch main creditation\r\n        (data: any) => {\r\n          // console.log(\"Response credit timer \", data);\r\n          this.clientCredit = data.credit ? data.credit : 0;\r\n          if (data.credit <= 0) {\r\n            this.aucunCredit();\r\n            return null;\r\n          } else if (data.credit <= (this.show.credit * 2)) {\r\n            this.creditInsuffisant();\r\n            return null;\r\n          }\r\n        }\r\n      );\r\n      setInterval(\r\n        async () => {\r\n          if (!this.timer.reinit) {\r\n            await (await this.creditTimer()).subscribe(\r\n              (data: any) => {\r\n                // console.log(\"Response credit timer \", data);\r\n                this.clientCredit = data.credit ? data.credit : 0;\r\n                if (data.credit <= 0) {\r\n                  this.aucunCredit();\r\n                  return null;\r\n                } else if (data.credit <= (this.show.credit * 2)) {\r\n                  this.creditInsuffisant();\r\n                  return null;\r\n                }\r\n              }\r\n            );\r\n          }\r\n        }, delay\r\n      )\r\n    }\r\n\r\n    async creditTimer() {\r\n      if ((this.clientId === undefined) || (this.show.credit == null)) return null;\r\n      const data: CreditTimer = {\r\n        clientId: this.clientId,\r\n        modelId: this.modelId,\r\n        timerId: this.timer.id,\r\n        showCredit: this.show.credit,\r\n        showSecond: this.show.second,\r\n        showType: this.show.type,\r\n        roomId: this.idRoom\r\n      }\r\n      // console.log(\"credit timer post \", data);\r\n      return await this.timerService.creditTimer(data);\r\n    }\r\n\r\n  // WEB RTC - LIVE VIDEO\r\n  initLiveVideo() {\r\n    this.onStart();\r\n    this.getPeerId();\r\n  }\r\n\r\n  onStart(){\r\n    if(isPlatformBrowser(this._platform) && 'mediaDevices' in navigator) {\r\n      navigator.mediaDevices.getUserMedia({video: true, audio: false}).then((ms: MediaStream) => {\r\n        const _video = this.video.nativeElement;\r\n        _video.srcObject = ms;\r\n        _video.play();\r\n      });\r\n    }\r\n  }\r\n\r\n  onStop() {\r\n    if (this.video && this.video.nativeElement.srcObject) {\r\n      this.video.nativeElement.pause();\r\n      if ((this.video.nativeElement.srcObject as MediaStream).getVideoTracks()[0]) {\r\n        (this.video.nativeElement.srcObject as MediaStream).getVideoTracks()[0].stop();\r\n      }\r\n      this.video.nativeElement.srcObject = null;\r\n    }\r\n  }\r\n\r\n  private getPeerId = () => {\r\n    console.log(\"Get Peer\");\r\n    this.peer.on('open', (id) => {\r\n      console.log(\"Peer Id \", id);\r\n      this.peerId = id;\r\n    });\r\n\r\n    this.peer.on('call', (call) => {\r\n      console.log('On call');\r\n      this.onStop();\r\n      navigator.mediaDevices.getUserMedia({\r\n        video: true,\r\n        audio: true\r\n      }).then((stream) => {\r\n        this.lazyStream = stream;\r\n        const _video = this.video.nativeElement;\r\n        _video.srcObject = stream;\r\n        _video.play();\r\n        console.log('Answer stream');\r\n        call.answer(stream);\r\n        call.on('stream', (remoteStream) => {\r\n          console.log('Receive stream');\r\n          if (!this.peerList.includes(call.peer)) {\r\n            this.streamRemoteVideo(remoteStream);\r\n            this.currentPeer = call.peerConnection;\r\n            this.peerList.push(call.peer);\r\n          }\r\n        });\r\n      }).catch(err => {\r\n        console.log(err + 'Unable to get media');\r\n      });\r\n    });\r\n  }\r\n\r\n  connectWithPeer(): void {\r\n    this.callPeer(this.peerIdShare);\r\n  }\r\n\r\n  private callPeer(id: string): void {\r\n    console.log('Call Peer');\r\n    this.onStop();\r\n    navigator.mediaDevices.getUserMedia({\r\n      video: true,\r\n      audio: true\r\n    }).then((stream) => {\r\n      this.lazyStream = stream;\r\n\r\n      const call = this.peer.call(id, stream);\r\n      call.on('stream', (remoteStream) => {\r\n        console.log('Receive stream');\r\n        if (!this.peerList.includes(call.peer)) {\r\n          this.streamRemoteVideo(remoteStream);\r\n          this.currentPeer = call.peerConnection;\r\n          this.peerList.push(call.peer);\r\n        }\r\n      });\r\n    }).catch(err => {\r\n      console.log(err + 'Unable to connect');\r\n    });\r\n  }\r\n\r\n  private streamRemoteVideo(stream: any): void {\r\n    const _video = this.remote_video.nativeElement;\r\n    _video.srcObject = stream;\r\n    _video.play();\r\n  }\r\n\r\n  getAlbums() {\r\n    const data = {\r\n      modelId : this.modelId,\r\n      type_album: 'vip'\r\n    }\r\n    this.albumService.getModelAlbums(data).subscribe(\r\n      (data: any) => {\r\n        for (let i = 0; i < data.length; i++) {\r\n          this.albums.push({\r\n            url: data[i].path_album\r\n          })\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n      // -------- EMOJI -----------------\r\n\r\n      toggleEmojiPicker() {\r\n        this.showEmojiPicker = !this.showEmojiPicker;\r\n      }\r\n\r\n      addEmoji(event) {\r\n        const {message} = this;\r\n        const text = `${message}${event.emoji.native}`;\r\n        this.message = text;\r\n      }\r\n\r\n      focus() {\r\n        this.showEmojiPicker = false;\r\n      }\r\n}\r\n","<app-header connected=\"true\"></app-header>\n\n\n<div class=\"main_live\" [ngClass]=\"{'dry_up': timer.fail}\">\n  <img [src]=\"dot\" alt=\"\" id=\"dots\" (click)=\"toggleDots()\">\n  <div class=\"contain_top\">\n    <app-topbar [context]=\"context\" [actif]=\"actif\"\n    [hour]=\"this.timer.hour\"\n    [minute]=\"this.timer.minute\"\n    [second]=\"this.timer.second\"\n    [reinit]=\"this.timer.reinit\"\n    [leaved]=\"leaved\"\n    ></app-topbar>\n    <div class=\"contain_left\">\n      <div class=\"show_live_left\" [ngClass]=\"{'pass_private': indisponible}\">\n\n        <video controls autoplay [poster]=\"bg\" id=\"video_live_model\" #video_live_model>\n        </video>\n\n        <app-album-live [albums]=\"albums\"></app-album-live>\n\n      </div>\n      <div class=\"client_live\">\n        <video autoplay [poster]=\"client\" class=\"client_flow\" id=\"video_live_client\" #video_live_client muted=\"muted\"></video>\n      </div>\n    </div>\n    <div class=\"contain_right\">\n      <div class=\"show_live_right\">\n        <div class=\"header_chat\">\n          <p>&gt;</p>\n          <div>\n            Live Chat\n          </div>\n        </div>\n        <app-live-free-chat [modelId]=\"modelId\" [messages]=\"messages\"\n        [pseudoModel]=\"modelPseudo\" [leaved]=\"leaved\" [profil]=\"bg\"></app-live-free-chat>\n<!--\n        <mat-tab-group mat-align-tabs=\"center\">\n          <mat-tab label=\"Live Chat\">\n            <app-live-free-chat [modelId]=\"modelId\" [messages]=\"messages\"\n            [pseudoModel]=\"modelPseudo\" [leaved]=\"leaved\" [profil]=\"bg\"></app-live-free-chat>\n          </mat-tab>\n          <mat-tab label=\"Statistiques\">\n            <app-live-vip-stat></app-live-vip-stat>\n          </mat-tab>\n        </mat-tab-group> -->\n\n      </div>\n    </div>\n  </div>\n\n  <div class=\"contain_bottom\">\n    <div class=\"contain_left\">\n      <div class=\"contain_action contain_action_desktop\">\n        <div class=\"buy_credit btn_show\">\n          <button class=\"btn btn_buy lighter\" (click)=\"buy()\">Acheter des crédits</button>\n          <!-- <p>15 crédits / mn</p> -->\n        </div>\n        <div class=\"out_show btn_show\">\n          <button class=\"btn btn_out_show lighter\" (click)=\"liveOut()\">Sortir du Show</button>\n          <!-- <p>15 crédits / mn</p> -->\n        </div>\n      </div>\n\n      <!-- // mobile -->\n      <div class=\"contain_action contain_action_mobile\" *ngIf=\"toggleDot\">\n        <div class=\"buy_credit btn_show\">\n          <button class=\"btn btn_buy lighter\" (click)=\"buy()\">Acheter des crédits</button>\n          <!-- <p>15 crédits / mn</p> -->\n        </div>\n        <div class=\"out_show btn_show\">\n          <button class=\"btn btn_out_show lighter\" (click)=\"liveOut()\">Sortir du Show</button>\n          <!-- <p>15 crédits / mn</p> -->\n        </div>\n        <!-- <div class=\"contain_close\">\n          <img [src]=\"close\" alt=\"\" id=\"close\" (click)=\"toggleDots()\">\n        </div> -->\n      </div>\n\n    </div>\n    <div class=\"contain_right\">\n      <div class=\"contain_message\">\n        <emoji-mart class=\"emoji-mart\" set=\"{{set}}\"\n        *ngIf=\"showEmojiPicker\" (emojiSelect)=\"addEmoji($event)\"\n        searchIcons='./../../../../assets/icons/admin-icons/search.png'\n        title=\"\"\n        ></emoji-mart>\n        <div class=\"contain_thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n        </div>\n        <form (ngSubmit)=\"sendMessage()\">\n          <div class=\"input_text\">\n              <input type=\"text\" name=\"message\" autocomplete=\"off\" (focus)=\"focus()\"\n              placeholder=\"Entrer votre message ici ...\" [(ngModel)]=\"message\">\n              <button type=\"button\" (click) =\"toggleEmojiPicker()\">😀</button><br>\n              <button type=\"submit\">\n                <div class=\"p\">\n                  <img [src]=\"send\" alt=\"\">\n                </div>\n              </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n\n</div>\n","<app-infobar-admin title=\"Clients\" subTitle=\"Clients\"></app-infobar-admin>\n\n<div class=\"admin_container\">\n  <div class=\"admin_bottom_bar\">\n    <button class=\"btn btn_list\" >\n      En attente\n    </button>\n    <button class=\"btn btn_list\">\n      Terminé\n    </button>\n  </div>\n\n  <div class=\"contain_filter_client\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-lg-3\">\n          <div class=\"filter_client\">\n            <p class=\"txt\">Afficher par :</p>\n            <select name=\"filter\" id=\"filter\">\n              <option value=\"all\">Tous</option>\n              <option value=\"delete\">Suppression</option>\n              <option value=\"deactivate\">Désactivation</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"col-lg-3\">\n          <div class=\"pagination_client\">\n            <div class=\"all\">Tout</div>\n            <div class=\"list_pagination\">\n              <div class=\"prev_pagination\">\n                &lt;\n              </div>\n              <div class=\"item_pagination actif\">1</div>\n              <div class=\"item_pagination\">2</div>\n              <div class=\"item_pagination\">3</div>\n              <div class=\"next_pagination\">\n                &gt;\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-lg-4\">\n          <div class=\"search_client\">\n            <input type=\"text\" class=\"search_input\" placeholder=\"Rechercher ......\">\n            <img [src]=\"search\" alt=\"\" class=\"search_icon\">\n          </div>\n        </div>\n        <div class=\"col-lg-2\">\n          <div class=\"other_action_client\">\n            <img [src]=\"four\" alt=\"\" class=\"other_icon_1\">\n            <img [src]=\"other\" alt=\"\" class=\"other_icon_2\">\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"contain_list_client\">\n    <div class=\"contain_header_list\">\n      <div>\n        <span *ngIf=\"askTxt === 'all'\">TOUTES LES DEMANDES</span>\n        <span *ngIf=\"askTxt !== 'all'\">DEMANDE DE {{askTxt}} DE COMPTE</span>\n      </div>\n      <div>\n        Total: 20\n      </div>\n    </div>\n    <div>\n      <table class=\"table table-responsive\">\n        <tr class=\"header_table_client\">\n          <td>\n            <input type=\"checkbox\">\n          </td>\n          <td>Pseudo</td>\n          <td>Etat</td>\n          <td>Date</td>\n          <td>Description</td>\n          <td>Actions</td>\n        </tr>\n        <tr *ngFor=\"let client of clients\" class=\"list_table\">\n          <td>\n            <input type=\"checkbox\">\n          </td>\n          <td>{{client.pseudo}}</td>\n          <td>{{client.etat}}</td>\n          <td>{{client.date}}</td>\n          <td>{{client.description}}</td>\n          <td class=\"list_action\">\n            <div class=\"refuse\">Refuser</div>\n            <div class=\"bar\"></div>\n            <div class=\"accept\">Accepter</div>\n          </td>\n        </tr>\n      </table>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-demande-clients-admin',\n  templateUrl: './demande-clients-admin.component.html',\n  styleUrls: ['./demande-clients-admin.component.scss']\n})\nexport class DemandeClientsAdminComponent implements OnInit {\n  icon = './../../../../../../assets/icons/paper-clip.svg'\n\n  search = './../../../../../../assets/icons/admin-icons/search.png'\n  four = './../../../../../../assets/icons/admin-icons/menu_four.png'\n  other = './../../../../../../assets/icons/admin-icons/menu.png'\n\n  deactivate = './../../../../../../assets/icons/admin-icons/deactivate.png'\n  activate = './../../../../../../assets/icons/admin-icons/activate.png'\n  delete = './../../../../../../assets/icons/admin-icons/delete.png'\n  bloqued = './../../../../../../assets/icons/admin-icons/bloquer.png'\n  debloquer = './../../../../../../assets/icons/admin-icons/debloquer.png'\n\n  clients = [\n    {\n      pseudo : 'John',\n      etat: 'En attente',\n      date: '10/01/2021',\n      description: 'suppression'\n    },\n    {\n      pseudo : 'John',\n      etat: 'En attente',\n      date: '10/01/2021',\n      description: 'désactivation'\n    },\n  ]\n\n  askTxt = 'all'\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { LocalStorageService } from 'ngx-localstorage';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { TypeTimer, CreditTimer } from '../../interfaces/timer.interface';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimerService {\n  endpoint = environment.endpoint\n\n  constructor(\n    private http: HttpClient,\n    private store: LocalStorageService\n  ) { }\n\n  convertTime(created: string, updated: string) {\n    let step = 0; let hour = 0; let minute = 0; let second = 0;\n\n    let hourCreated = parseInt(created.substring(11, 13));\n    let hourUpdated = parseInt(updated.substring(11, 13));\n\n    let minCreated = parseInt(created.substring(14, 16));\n    let minUpdated = parseInt(updated.substring(14, 16));\n\n    let secCreated = parseInt(created.substring(17, 19));\n    let secUpdated = parseInt(updated.substring(17, 19));\n\n    while (hourCreated < hourUpdated) {\n      secCreated++;\n      if (secCreated > 59) {minCreated++; secCreated = 0;}\n      if (minCreated > 59) {hourCreated++; minCreated = 0;}\n      step++;\n    }\n\n    while (minCreated < minUpdated) {\n      secCreated++;\n      if (secCreated > 59) {minCreated++; secCreated = 0;}\n      step++;\n    }\n\n    while (secCreated < secUpdated) {\n      secCreated++; step++;\n    }\n    // console.log(\"Step \", step);\n\n    hour = Math.floor(step / 3600);\n    minute = Math.floor((step % 3600) / 60);\n    second = (step % 3600) % 60;\n\n    return {hour, minute, second}\n  }\n\n  getTimer(modelId: number, type: TypeTimer): Observable<any> {\n    const data = {\n      modelId: modelId,\n      type: type\n    }\n    return this.http.post(`${this.endpoint}/timer`,data, httpOptions)\n  }\n\n  getCostShow(type: TypeTimer) {\n    return this.http.get(`${this.endpoint}/cost-show/${type}`, httpOptions)\n  }\n\n  updateTimer(data) {\n    return this.http.post(`${this.endpoint}/timer/update`, data, httpOptions)\n  }\n\n  creditTimer(data: CreditTimer) {\n    // console.log(data);\n    return this.http.post(`${this.endpoint}/timer/credit`, data, httpOptions)\n  }\n\n  beginTimerModel(modelId: number, type: TypeTimer): Observable<any> {\n    const data = {\n      modelId: modelId,\n      type: type\n    }\n    return this.http.post(`${this.endpoint}/timer/beginTimerModel`,data, httpOptions)\n  }\n\n  convertToTime(time: string) {\n    const inFloat = parseInt(time)\n    const inInteger = Math.floor(inFloat)\n    let minute = Math.floor(inInteger / 60)\n    let second = inInteger % 60\n    if (minute > 59) {\n      let hour = Math.floor(minute / 60)\n      minute =  minute % 60\n      return hour +':'+minute+':'+second\n    }\n    return minute+':'+second\n  }\n}\n","import { AuthService } from './../../../services/auth/auth.service';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { SlideInOutAnimation } from 'src/app/animation';\r\nimport { HeaderService } from 'src/app/services/header/header.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ConfirmLogoutComponent } from '../../../modals/confirm-logout/confirm-logout/confirm-logout.component';\r\nimport { ModelService } from '../../../services/model/model.service';\r\n\r\n@Component({\r\n  selector: 'app-connected-model',\r\n  templateUrl: './connected-model.component.html',\r\n  styleUrls: ['./connected-model.component.scss'],\r\n  animations: [SlideInOutAnimation]\r\n})\r\nexport class ConnectedModelComponent implements OnInit {\r\n  animationState = 'out';\r\n  chat = \"assets/icons/chat-comment.svg\";\r\n  settings = \"assets/icons/settings.svg\";\r\n\r\n  @Input()\r\n  actif: string;\r\n  active: number = 0;\r\n\r\n  constructor(\r\n    private authSrv: AuthService,\r\n    private router: Router,\r\n    private dialog: MatDialog,\r\n    private modelService: ModelService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.actif) this.active = parseInt(this.actif);\r\n  }\r\n\r\n  toggleShowDiv(divName: string) {\r\n    if (divName === 'contain_connected') {\r\n      console.log(this.animationState);\r\n      this.animationState = this.animationState === 'out' ? 'in' : 'out';\r\n      console.log(this.animationState);\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    const dialogRef = this.dialog.open(ConfirmLogoutComponent, {\r\n      width: '50vh',\r\n      data: {action: 'model'}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {});\r\n  }\r\n\r\n  goToChat() {\r\n    this.modelService.getInfo().subscribe(\r\n      (data) => {\r\n        const status = data.profile.status;\r\n        if (status === 'En live') {\r\n          this.router.navigate(['/modele/live-private'])\r\n        } else if (status === 'En vip') {\r\n          this.router.navigate(['/modele/live-vip'])\r\n        } else {\r\n          this.router.navigate(['/modele/chat'])\r\n        }\r\n      }\r\n    )\r\n  }\r\n}\r\n\r\n","\n<div class=\"bars\">\n  <img [src]=\"chat\" alt=\"\" class=\"icon\">\n  <img [src]=\"settings\" alt=\"\" class=\"icon\" routerLink=\"/modele/dashboard\"\n    [ngClass]=\"{'active': active == 3}\">\n  <i class=\"fa fa-bars\" (click)=\"toggleShowDiv('contain_connected')\"></i>\n</div>\n\n<div class=\"contain_connected\" [@slideInOut]=\"animationState\">\n\n  <div class=\"list one\" [ngClass]=\"{'active': active == 1}\" routerLink=\"/modele/profile\">\n    Mon Compte\n    <span></span>\n  </div>\n  <div class=\"list two\" routerLink=\"/modele/albums\" [ngClass]=\"{'active': active == 2}\">\n    Mes Albums\n    <span></span>\n  </div>\n\n  <div class=\"list four\" [ngClass]=\"{'active': active == 3}\" routerLink=\"/modele/dashboard\">\n    <img [src]=\"settings\" alt=\"\" class=\"icon\">    <span></span>\n  </div>\n\n  <div class=\"list three\" [ngClass]=\"{'active': active == 4}\" (click)=\"goToChat()\">\n    <img [src]=\"chat\" alt=\"\" class=\"icon\">\n    <span></span>\n  </div>\n\n  <div class=\"list five\" (click)=\"logout()\" [ngClass]=\"{'active': active == 5}\">\n    Déconnexion\n    <span></span>\n  </div>\n\n</div>\n","<app-infobar-admin title=\"Modèles\" subTitle=\"Modèles\"></app-infobar-admin>\n\n<div class=\"admin_container\">\n  <div class=\"admin_bottom_bar\">\n    LISTE DES MODELES <span>({{count}} Modèles)</span>\n  </div>\n\n  <div class=\"contain_filter_client\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-lg-2\">\n          <div class=\"filter_client\">\n            <!-- <p class=\"txt\">Afficher par :</p> -->\n            <select name=\"filter\" id=\"filter\" (change)=\"select($event)\">\n              <option value=\"tous\">Tous</option>\n              <option value=\"Valide\">Actif</option>\n              <option value=\"Supprime\">Supprimé</option>\n              <option value=\"Desactive\">Desactivé</option>\n              <option value=\"En attente\">Inactif</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"col-lg-3\">\n          <div class=\"filter_client\">\n            <p class=\"txt\">Status :</p>\n            <select name=\"filter\" id=\"filter\" (change)=\"selectStatus($event)\">\n              <option value=\"tous\">Tous</option>\n              <option value=\"En ligne\">En ligne</option>\n              <option value=\"Hors ligne\">Hors ligne</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"col-lg-3\">\n          <div class=\"pagination_client\">\n            <!-- <div class=\"all\" (click)=\"tout()\">Lister Tout</div> -->\n            <div class=\"list_pagination\">\n              <div class=\"prev_pagination\" *ngIf=\"page > 0\" (click)=\"prevPage()\">\n                &lt;\n              </div>\n              <div\n              *ngFor=\"let item of list_pagination\"\n              (click)=\"selectPage(item)\"\n              >\n              <span class=\"item_pagination\" [ngClass]=\"{'actif': page === item}\"\n              *ngIf=\"item >= thirdlyPage - 3 && item  < thirdlyPage\">{{item + 1}}</span>\n              </div>\n              <div class=\"next_pagination\" *ngIf=\"page < topPage\" (click)=\"nextPage()\">\n                &gt;\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-lg-4\">\n          <div class=\"search_client\">\n            <input type=\"text\" class=\"search_input\" placeholder=\"Rechercher ......\"\n            (keyup)=\"input_search($event)\" [(ngModel)]=\"filter\">\n            <img [src]=\"search\" alt=\"\" class=\"search_icon\">\n          </div>\n        </div>\n        <!-- <div class=\"col-lg-2\">\n          <div class=\"other_action_client\">\n            <img [src]=\"four\" alt=\"\" class=\"other_icon_1\">\n            <img [src]=\"other\" alt=\"\" class=\"other_icon_2\">\n          </div>\n        </div> -->\n      </div>\n    </div>\n  </div>\n\n  <div class=\"contain_list_client\">\n    <div class=\"contain_header_list\">\n      <div>\n        LISTE DE TOUS LES MODELES\n      </div>\n      <div>\n        Total : {{count}}\n      </div>\n    </div>\n    <div>\n      <table class=\"table table-responsive\">\n        <tr class=\"header_table_client\">\n          <td>\n            <input type=\"checkbox\">\n          </td>\n          <td>Pseudo</td>\n          <td>Adresse email</td>\n          <td>Inscrit le</td>\n          <td>Etat</td>\n          <td>Status</td>\n          <td>Actions</td>\n        </tr>\n        <tr *ngFor=\"let client of clients\" class=\"list_table\">\n          <td>\n            <input type=\"checkbox\">\n          </td>\n          <td>{{client.pseudo}}</td>\n          <td>{{client.email}}</td>\n          <td>{{client.createdAt}}</td>\n          <td>\n            <span *ngIf=\"client.state === 'En attente'\">En attente</span>\n            <span *ngIf=\"client.state === 'Supprime'\">Supprimé</span>\n            <span *ngIf=\"client.state === 'Desactive'\">Desactivé</span>\n            <span *ngIf=\"client.state === 'Refuse'\">Refusé</span>\n            <span *ngIf=\"client.state === 'Valide'\">Validé</span>\n            <span *ngIf=\"client.state === 'Suppression'\">Validé</span>\n            <span *ngIf=\"client.state === 'Desactivation'\">Validé</span>\n          </td>\n          <td>\n            <span *ngIf=\"client.status === 'Hors ligne'\">Hors ligne</span>\n            <span *ngIf=\"client.status !== 'Hors ligne'\">En ligne</span>\n          </td>\n          <td class=\"list_action\">\n            <img [src]=\"bloqued\" alt=\"\" (click)=\"blockClient(client.id)\">\n            <img [src]=\"deactivate\" alt=\"\" (click)=\"deactivateClient(client.id)\" *ngIf=\"client.state !== 'Desactive'\">\n            <img [src]=\"activate\" alt=\"\" (click)=\"activateClient(client.id)\" *ngIf=\"client.state === 'Desactive'\">\n            <img [src]=\"delete\" alt=\"\" (click)=\"deleteClient(client.id)\">\n          </td>\n        </tr>\n      </table>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/services/admin/admin.service';\nimport { NotificationService } from 'src/app/services/notification/notification.service';\n\n@Component({\n  selector: 'app-list-models-admin',\n  templateUrl: './list-models-admin.component.html',\n  styleUrls: ['./list-models-admin.component.scss']\n})\nexport class ListModelsAdminComponent implements OnInit {\n  icon = './../../../../../../assets/icons/paper-clip.svg'\n\n  search = './../../../../../../assets/icons/admin-icons/search.png'\n  four = './../../../../../../assets/icons/admin-icons/menu_four.png'\n  other = './../../../../../../assets/icons/admin-icons/menu.png'\n\n  deactivate = './../../../../../../assets/icons/admin-icons/deactivate.png'\n  activate = './../../../../../../assets/icons/admin-icons/activate.png'\n  delete = './../../../../../../assets/icons/admin-icons/delete.png'\n  bloqued = './../../../../../../assets/icons/admin-icons/bloquer.png'\n  debloquer = './../../../../../../assets/icons/admin-icons/debloquer.png'\n\n  clients = []\n\n  count: number  = 0\n  range: number = 10\n  filter: string = ''\n  selected: string = 'tous'\n  selectedStatus: string = 'tous'\n\n  page: number  = 0\n  topPage: number = 0\n  thirdlyPage: number = 3\n  list_pagination: number[] = []\n  constructor(\n    public adminService: AdminService,\n    private notificationService: NotificationService\n  ) { }\n\n  ngOnInit(): void {\n    this.countClient()\n    this.listClients()\n  }\n\n  initPagination() {\n    this.list_pagination = []\n    let res = this.count / this.range\n    res = Math.floor(res)\n    this.topPage = res\n    for (let i = 0; i <= res; i++) {\n      this.list_pagination.push(i)\n    }\n  }\n\n  countClient() {\n    this.adminService.countModels(this.selected).subscribe(\n      (data) => {\n        this.count = data.count\n        this.initPagination()\n      }\n    )\n  }\n\n  listClients() {\n    this.adminService.getModels(this.selected, this.range, this.page, this.filter).subscribe(\n      (data) => {\n        console.log(data)\n        this.clients = data\n        this.clients.forEach( (client) => {\n          client.createdAt = this.adminService.formatDate(client.createdAt)\n          client.status = client.profile ? client.profile.status : 'Hors ligne'\n        })\n        this.count = this.clients.length\n        this.initPagination()\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  select(event) {\n    const value = event.target.value;\n    this.selected = value\n    this.listClients()\n  }\n\n  input_search(event) {\n    this.listClients()\n  }\n\n  selectPage(page: number) {\n    this.page = page\n    this.listClients()\n  }\n\n  nextPage() {\n    this.page += 1\n    this.thirdlyPage += 3\n    this.listClients()\n  }\n\n  prevPage() {\n    this.page -= 1\n    this.thirdlyPage -= 3\n    if (this.thirdlyPage < 0) this.thirdlyPage = 0\n    this.listClients()\n  }\n\n  tout() {\n    this.page = 0\n    this.range = this.count\n    this.listClients()\n  }\n\n  deleteClient(idClient: number) {\n    this.adminService.deleteModel(idClient).subscribe(\n      (data: any) => {\n        if (data.success) this.listClients()\n        else if (data.error) this.notificationService.errorMsg(data.message)\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  blockClient(idClient: number) {\n    const data = {\n      idClient,\n      reverse: false\n    }\n    this.adminService.blockModel(data).subscribe(\n      (data: any) => {\n        if (data.success) this.listClients()\n        else if (data.error) this.notificationService.errorMsg(data.message)\n      }, (error) => {\n        console.log(error);\n      }\n    )\n  }\n\n  deactivateClient(idClient: number) {\n    this.adminService.deactivateModel(idClient).subscribe(\n      (data: any) => {\n        if (data.success) this.listClients()\n        else if (data.error) this.notificationService.errorMsg(data.message)\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  activateClient(idClient: number) {\n    this.adminService.activateModel(idClient).subscribe(\n      (data: any) => {\n        if (data.success) this.listClients()\n        else if (data.error) this.notificationService.errorMsg(data.message)\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  selectStatus(event) {\n    const value = event.target.value;\n    this.selectedStatus = value\n    if (value === 'tous') {\n      this.listClients()\n    } else {\n      this.listStatusClients()\n    }\n  }\n\n  listStatusClients() {\n    this.adminService.getStatusModel(this.selectedStatus, this.filter).subscribe(\n      (data: any) => {\n        // console.log(data)\n        this.clients = data\n        this.clients.forEach( (client) => {\n          client.createdAt = this.adminService.formatDate(client.createdAt)\n          client.status = client.profile ? client.profile.status : 'Hors ligne'\n        })\n        this.count = this.clients.length\n        this.initPagination()\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n}\n","<div class=\"contain_header\" [ngClass]=\"{'unclickable': !isClickable}\">\n\n  <div class=\"contain_header_connected\" *ngIf=\"isConnected && isModel\">\n    <div class=\"contain_logo\">\n      <h1 class=\"text\">\n        BETWEEN<span>US</span>\n      </h1>\n    </div>\n    <div class=\"contain_menu\">\n      <app-connected-model [actif]=\"isActif\"></app-connected-model>\n    </div>\n  </div>\n\n  <div class=\"contain_header_disconnected\" *ngIf=\"!isConnected\">\n    <div class=\"contain_logo\">\n      <h1 class=\"text\">\n        BETWEEN<span>US</span>\n      </h1>\n    </div>\n    <div class=\"contain_menu\">\n      <app-disconnected [actif]=\"isActif\"></app-disconnected>\n    </div>\n  </div>\n\n  <div class=\"contain_header_connected\" *ngIf=\"isConnected && !isModel\">\n    <div class=\"contain_logo\">\n      <h1 class=\"text\">\n        BETWEEN<span>US</span>\n      </h1>\n    </div>\n    <div class=\"contain_menu\">\n      <app-connected [actif]=\"isActif\"></app-connected>\n    </div>\n  </div>\n\n</div>\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { LocalStorageService } from 'ngx-localstorage';\nimport { HeaderService } from 'src/app/services/header/header.service';\nimport { AuthService } from '../../services/auth/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  @Input()\n  connected: string;\n  isConnected: boolean = false;\n\n  @Input()\n  clickable: string;\n  isClickable: boolean = true;\n\n  @Input()\n  model: string;\n  isModel: boolean = false;\n  isVisible: boolean = false;\n\n  @Input()\n  actif: string;\n  isActif: number = 0;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    if (this.connected) this.isConnected = (this.connected == \"true\");\n    if (this.clickable) this.isClickable = (this.clickable == \"true\");\n    if (this.model) this.isModel = (this.model == \"true\");\n    if (this.actif) this.isActif = parseInt(this.actif);\n  }\n\n\n  // ngAfterContentChecked(): void\n  // {\n  //     if (this.isVisible == false)\n  //     {\n  //       this.isVisible = true;\n  //       if (this.clickable) this.clickable = this.isClickable;\n  //     }\n  //     else if (this.isVisible == true)\n  //     {\n  //         this.isVisible = false;\n  //     }\n  // }\n\n}\n","<div class=\"contain_pass\">\n  <h2 mat-dialog-title>Changer le mot de passe</h2>\n\n  <mat-dialog-content>\n    <form action=\"\" class=\"form_password\" autocomplete=\"off\" [formGroup]=\"passwordForm\">\n      <div class=\"form-group\">\n        <label for=\"oldPassword\">Ancien mot de passe</label>\n        <input type=\"password\" id=\"oldPassword\" class=\"input form-control\" formControlName=\"oldPassword\">\n        <div *ngIf=\"submitted && form.oldPassword.errors\" class=\"error\">\n          <small *ngIf=\"form.oldPassword.errors.required\" class=\"form-text error-text\">Mot de passe requis</small>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"newPassword\">Nouveau mot de passe</label>\n        <input type=\"password\" id=\"newPassword\" class=\"input form-control\" formControlName=\"newPassword\">\n        <div *ngIf=\"submitted && form.newPassword.errors\" class=\"error\">\n          <small *ngIf=\"form.newPassword.errors.required\" class=\"form-text error-text\">\n            Mot de passe requis\n          </small>\n          <small *ngIf=\"form.newPassword.errors.pattern\" class=\"form-text error-text\">\n            Invalide : majuscule, minuscule et un chiffre\n          </small>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"confirmPassword\">Confirmer mot de passe</label>\n        <input type=\"password\" id=\"confirmPassword\" class=\"input form-control\" formControlName=\"confirmPassword\">\n        <div *ngIf=\"submitted && form.confirmPassword.errors\" class=\"error\">\n          <small *ngIf=\"form.confirmPassword.errors.required\" class=\"form-text error-text \">\n            Confirmation mot de passe requis\n          </small>\n          <small *ngIf=\"form.confirmPassword.errors.mustMatch\" class=\"form-text error-text \">\n            Mot de passe ne correspond pas\n          </small>\n        </div>\n        <div class=\"error\" *ngIf=\"errorPassword\">\n          <small class=\"form-text error-text \">\n            Mot de passe incorrect\n          </small>\n        </div>\n      </div>\n    </form>\n  </mat-dialog-content>\n\n  <mat-dialog-actions>\n    <button class=\"btn_cancel\" mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Annuler</button>\n    <button class=\"btn_valid\" (click)=\"validate($event)\">Valider</button>\n  </mat-dialog-actions>\n</div>\n\n","import { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { ClientService } from '../../../../services/client/client.service';\nimport { NotificationService } from '../../../../services/notification/notification.service';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.scss']\n})\nexport class PasswordComponent implements OnInit {\n  passwordForm: FormGroup;\n  submitted: boolean = false;\n  errorPassword = null;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private clientService: ClientService,\n    private notificationService: NotificationService,\n    public dialogRef: MatDialogRef<PasswordComponent>\n    ) {\n    this.passwordForm = this.formBuilder.group({\n      oldPassword : ['', Validators.required],\n      // newPassword : ['',[Validators.required, Validators.pattern(/^(?=\\D*\\d)(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z]).{8,}$/)]],\n      newPassword : ['', Validators.required],\n      confirmPassword: ['',Validators.required],\n    },{\n      validators : this.mustMatch('newPassword','confirmPassword'),\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  get form() {return this.passwordForm.controls}\n\n  mustMatch = (controlName : string, matchControlName : string) => {\n    return (formGroup: FormGroup) => {\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchControlName];\n\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n          return;\n      }\n      if (control.value !== matchingControl.value) {\n          matchingControl.setErrors({ mustMatch: true });\n      } else {\n          matchingControl.setErrors(null);\n      }\n  }\n  }\n\n  async validate(event): Promise<void> {\n    this.submitted = true;\n    event.preventDefault();\n    this.errorPassword = null;\n    if(this.passwordForm.invalid){\n      return;\n    }\n    let passwords = this.passwordForm.value;\n    this.clientService.changePassword(passwords.oldPassword, passwords.newPassword).subscribe(\n      (data: any) => {\n        console.log(\"change Password \", data);\n        if (data.error) {\n          this.errorPassword = data.message;\n        } else {\n          this.notificationService.success(\"Mot de passe\", \"Modifié\");\n          this.dialogRef.close(\"success\");\n        }\n      }\n    )\n  }\n\n}\n","<app-header connected=\"true\" actif=\"2\"></app-header>\n\n\n<div class=\"main_dashboard\">\n<div class=\"profil_header\">\n  Rechargez mes crédits\n</div>\n<div class=\"contain_credit\">\n  <div class=\"info_credit\">\n    <div class=\"block_credit\">\n      <div class=\"content_parameter\">\n        <img [src]=\"coinImg\" alt=\"\" class=\"coinImg\">\n        <div>\n          Vous avez actuellement <br>\n          {{info.credit}} crédit<span *ngIf=\"info.credit > 2\">s</span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"recharge_credit\">\n      <div class=\"title_credit\">\n        <!-- Rechargez mes crédits -->\n      </div>\n      <!-- <div class=\"input_credit\">\n        <input type=\"text\" placeholder=\"Entrer ici votre code promo\">\n      </div> -->\n    </div>\n  </div>\n\n  <div class=\"contain_pack\">\n    <div class=\"choice_pack\">\n      <select id=\"select_choice\" (change)=\"select($event)\">\n        <option value=\"bienvenue\">PACK DE BIENVENUE</option>\n        <option value=\"bronze\">PACK BRONZE</option>\n        <option value=\"argent\">PACK ARGENT</option>\n        <option value=\"or\">PACK OR</option>\n      </select>\n    </div>\n\n    <div class=\"container-fluid contain_pack\">\n\n      <div class=\"pack_bienvenue\" *ngIf=\"currentPack === 'bienvenue'\">\n        <div class=\"row\" *ngFor=\"let item of packBienvenue\">\n          <div class=\"col-lg-4 offset-lg-4 column\">\n            <div class=\"pack\">\n              <div class=\"pack_credit\">\n                <div>\n                  {{item.credit}}\n                </div>\n                <p>\n                  CREDITS\n                </p>\n              </div>\n              <div class=\"pack_cout\">\n                Coût / Crédit\n                <p>\n                  {{item.cout}}$\n                </p>\n              </div>\n              <div class=\"pack_button\">\n                <button class=\"btn btn_buy lighter\"\n                (click)=\"buyPack(item.montant, item.credit)\">\n                  Acheter\n                </button>\n              </div>\n              <div class=\"pack_montant\">\n                {{item.montant}} $\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"pack_or\" *ngIf=\"currentPack === 'or'\">\n        <div class=\"row\">\n          <div class=\"col-lg-3 column\" *ngFor=\"let item of packOr\">\n            <div class=\"pack\">\n              <div class=\"pack_credit\">\n                <div>\n                  {{item.credit}}\n                </div>\n                <p>\n                  CREDITS\n                </p>\n              </div>\n              <div class=\"pack_cout\">\n                Coût / Crédit\n                <p>\n                  {{item.cout}}$\n                </p>\n              </div>\n              <div class=\"pack_button\">\n                <button class=\"btn btn_buy lighter\"\n                (click)=\"buyPack(item.montant, item.credit)\">\n                  Acheter\n                </button>\n              </div>\n              <div class=\"pack_montant\">\n                {{item.montant}} $\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"pack_argent\" *ngIf=\"currentPack === 'argent'\">\n        <div class=\"row\">\n          <div class=\"col-lg-3 column\" *ngFor=\"let item of packArgent\">\n            <div class=\"pack\">\n              <div class=\"pack_credit\">\n                <div>\n                  {{item.credit}}\n                </div>\n                <p>\n                  CREDITS\n                </p>\n              </div>\n              <div class=\"pack_cout\">\n                Coût / Crédit\n                <p>\n                  {{item.cout}}$\n                </p>\n              </div>\n              <div class=\"pack_button\">\n                <button class=\"btn btn_buy lighter\"\n                (click)=\"buyPack(item.montant, item.credit)\">\n                  Acheter\n                </button>\n              </div>\n              <div class=\"pack_montant\">\n                {{item.montant}} $\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"pack_bronze\" *ngIf=\"currentPack === 'bronze'\">\n        <div class=\"row\">\n          <div class=\"col-lg-4 column\" *ngFor=\"let item of packBronze\">\n            <div class=\"pack\" [ngClass]=\"{'bonAffaire': item.affaire}\">\n              <div class=\"txt_bon_affaire\" *ngIf=\"item.affaire\">\n                Pack la plus bonne affaire\n              </div>\n              <div class=\"pack_credit\">\n                <div>\n                  {{item.credit}}\n                </div>\n                <p>\n                  CREDITS\n                </p>\n              </div>\n              <div class=\"pack_cout\">\n                Coût / Crédit\n                <p>\n                  {{item.cout}}$\n                </p>\n              </div>\n              <div class=\"pack_button\">\n                <button class=\"btn btn_buy lighter\"\n                (click)=\"buyPack(item.montant, item.credit)\">\n                  Acheter\n                </button>\n              </div>\n              <div class=\"pack_montant\">\n                {{item.montant}} $\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n</div>\n\n</div>\n<br><br>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { HeaderService } from '../../../services/header/header.service';\r\nimport { ClientService } from '../../../services/client/client.service';\r\nimport { LocalStorageService } from 'ngx-localstorage';\r\nimport { CreditService } from '../../../services/credit/credit.service';\r\nimport { PopupService } from '../../../services/popup/popup.service';\r\nimport { NotificationService } from '../../../services/notification/notification.service';\r\nimport { Pack } from 'src/app/interfaces/pack-credit.interface';\r\nimport { PaiementService } from '../../../services/paiement/paiement.service';\r\n\r\n@Component({\r\n  selector: 'app-buy-credit',\r\n  templateUrl: './buy-credit.component.html',\r\n  styleUrls: ['./buy-credit.component.scss']\r\n})\r\nexport class BuyCreditComponent implements OnInit {\r\n  solde = 0;\r\n  coinImg = \"assets/icons/coin-stack.svg\";\r\n\r\n  currentPack: string = 'bienvenue';\r\n\r\n  info = {\r\n    id: 0,\r\n    pseudo: '',\r\n    credit: 0,\r\n    creditId: null,\r\n    promo: null\r\n  }\r\n\r\n  packBienvenue: Pack[] = this.creditService.packBienvenue;\r\n\r\n  packBronze: Pack[] = this.creditService.packBronze;\r\n\r\n  packArgent: Pack[] = this.creditService.packArgent;\r\n\r\n  packOr: Pack[] = this.creditService.packOr;\r\n\r\n  constructor(\r\n    private clientService: ClientService,\r\n    private store: LocalStorageService,\r\n    private creditService: CreditService,\r\n    private notificationService: NotificationService,\r\n    private paiementService: PaiementService\r\n  ) {\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.getMyInfo();\r\n  }\r\n\r\n  // Get client infos\r\n  async getMyInfo() {\r\n    const id = parseInt(this.store.get('identification//'));\r\n    await this.clientService.getMyInfos().subscribe(\r\n      (data) => {\r\n        // console.log('My INFO ', data);\r\n        this.info.id = data.id;\r\n        this.info.pseudo = data.pseudo;\r\n        this.info.credit = data.credit ? data.credit.credit : 0;\r\n        this.info.creditId = data.credit ? data.credit.id : 0;\r\n      }\r\n    )\r\n  }\r\n\r\n  select(event) {\r\n    console.log(event.target.value);\r\n    const value = event.target.value;\r\n    this.currentPack = value;\r\n  }\r\n\r\n  buyPack(montant: number, credit: number) {\r\n    console.log(\"Buy \", this.info.credit, \" ID \", this.info.creditId);\r\n    console.log(montant, \" \" , credit);\r\n    if (this.info.creditId === null) return false;\r\n    this.creditService.buyCreditClient(montant, credit, this.info.creditId, this.info.id).subscribe(\r\n      async (data) => {\r\n        if (!data) {\r\n          this.notificationService.failure(`Pack ${this.currentPack}`,\r\n          `Votre transaction a echoué.`);\r\n        } else {\r\n          await this.getMyInfo().then(\r\n            (data) => {\r\n              this.paiementService.buyPack(credit).subscribe(\r\n                (data) => {\r\n                  this.notificationService.success(`Pack ${this.currentPack}`,\r\n                  `Vous avez obtenu ${credit} crédits de plus.`);\r\n                }, (error) => {\r\n                  console.log(error)\r\n                }\r\n              )\r\n            }\r\n          );\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard-admin',\n  templateUrl: './dashboard-admin.component.html',\n  styleUrls: ['./dashboard-admin.component.scss']\n})\nexport class DashboardAdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main_dashboard\">\n  <app-leftbar-admin></app-leftbar-admin>\n\n  <div class=\"right_bar\">\n    <app-topbar-admin></app-topbar-admin>\n    <div class=\"spacer_topbar\"></div>\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","<div class=\"main_info\">\n  <div class=\"title_info\">\n    CHANGER MOT DE PASSE\n  </div>\n  <div class=\"line\"></div>\n  <div class=\"container-fluid contain_info\">\n    <form action=\"\" class=\"form_password\" autocomplete=\"off\" [formGroup]=\"changeForm\">\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <input type=\"password\" class=\"input_field\" placeholder=\"Mot de passe actuel\"\n        formControlName=\"oldPassword\">\n        <div *ngIf=\"submitted && form.oldPassword.errors\" class=\"error\">\n          <small *ngIf=\"form.oldPassword.errors.required\" class=\"form-text error-text\">Mot de passe requis</small>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-6\">\n        <div class=\"content_field\">\n          <input type=\"password\" class=\"input_field\" placeholder=\"Nouveau mot de passe\"\n          formControlName=\"newPassword\">\n          <div *ngIf=\"submitted && form.newPassword.errors\" class=\"error\">\n            <small *ngIf=\"form.newPassword.errors.required\" class=\"form-text error-text\">\n              Mot de passe requis\n            </small>\n            <small *ngIf=\"form.newPassword.errors.pattern\" class=\"form-text error-text\">\n              Invalide : majuscule, minuscule et un chiffre\n            </small>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-6\">\n        <div class=\"content_field\">\n          <input type=\"password\" class=\"input_field\" placeholder=\"Confirmer mot de passe\"\n          formControlName=\"confirmPassword\">\n          <div *ngIf=\"submitted && form.confirmPassword.errors\" class=\"error\">\n            <small *ngIf=\"form.confirmPassword.errors.required\" class=\"form-text error-text \">\n              Confirmation mot de passe requis\n            </small>\n            <small *ngIf=\"form.confirmPassword.errors.mustMatch\" class=\"form-text error-text \">\n              Mot de passe ne correspond pas\n            </small>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <p class=\"forgot_text\">\n          Mot de passe oublié ?\n        </p>\n      </div>\n    </div> -->\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 contain_button\">\n        <button type=\"button\" class=\"btn_save_pwd lighter\" (click)=\"validate($event)\" type=\"submit\">\n          ENREGISTER\n        </button>\n      </div>\n    </div>\n\n  </form>\n  </div>\n\n  </div>\n","import { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { ProfilService } from '../../../../services/profil/profil.service';\nimport { NotificationService } from '../../../../services/notification/notification.service';\n\n@Component({\n  selector: 'app-password-modele',\n  templateUrl: './password-modele.component.html',\n  styleUrls: ['./password-modele.component.scss']\n})\nexport class PasswordModeleComponent implements OnInit {\n  changeForm: FormGroup;\n  submitted: boolean = false;\n\n  old: string = '';\n  new: string = '';\n  confirm: string = '';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private profileService: ProfilService,\n    private notificationService: NotificationService\n    ) {\n    this.changeForm = this.formBuilder.group({\n      oldPassword : ['', Validators.required],\n      newPassword : ['', Validators.required],\n      confirmPassword: ['',Validators.required],\n    },{\n      validators : this.mustMatch('newPassword','confirmPassword'),\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  get form() {return this.changeForm.controls}\n\n  mustMatch = (controlName : string, matchControlName : string) => {\n    return (formGroup: FormGroup) => {\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchControlName];\n\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n          return;\n      }\n      if (control.value !== matchingControl.value) {\n          matchingControl.setErrors({ mustMatch: true });\n      } else {\n          matchingControl.setErrors(null);\n      }\n  }\n  }\n\n  async validate(event): Promise<void> {\n    this.submitted = true;\n    event.preventDefault();\n\n    if(this.changeForm.invalid){\n      return;\n    }\n    let passwords = this.changeForm.value;\n    this.profileService.changePassword(passwords).subscribe(\n      (data) => {\n        this.submitted = false;\n        console.log(data)\n        if (data.error)\n          this.notificationService.errorMsg(\"Mot de passe incorrect\")\n        else\n          this.notificationService.success(\"Mot de passe\", \"Modification avec succès\");\n        this.changeForm.reset();\n      }\n    )\n  }\n}\n","\n<app-infobar-admin title=\"Administration\" subTitle=\"Administration\"></app-infobar-admin>\n\n<div class=\"admin_container\">\n  <div class=\"admin_bottom_bar\">\n    PAYEMENT\n  </div>\n\n  <div class=\"form_paiement\">\n    <div class=\"title_paiement\">\n      formulaire de payement\n    </div>\n\n    <div class=\"form\">\n      <div class=\"form-group\">\n        <label for=\"list\">Sélectionner le modèle</label>\n        <select name=\"list\" id=\"list\" class=\"form-control\" (change)=\"select($event)\">\n          <option value=\"0\"></option>\n          <option [value]=\"i\" *ngFor=\"let item of list; let i=index\">{{item.pseudo}}</option>\n        </select>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"name\">Nom</label>\n        <input type=\"text\" class=\"form-control\" disabled [(ngModel)]=\"currentSelect.firstname\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"name\">Prénom</label>\n        <input type=\"text\" class=\"form-control\" disabled [(ngModel)]=\"currentSelect.lastname\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"name\">Pseudo</label>\n        <input type=\"text\" class=\"form-control\" disabled [(ngModel)]=\"currentSelect.pseudo\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input type=\"text\" class=\"form-control\" name=\"email\" disabled [(ngModel)]=\"currentSelect.email\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"solde\">Solde</label>\n        <input type=\"text\" class=\"form-control\" name=\"solde\" disabled [(ngModel)]=\"currentSelect.credit.credit\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"name\">Montant</label>\n        <input type=\"number\" class=\"form-control\" [(ngModel)]=\"creditSent\">\n      </div>\n\n      <div class=\"contain_error\">\n        <p class=\"error\" *ngIf=\"error\">\n          {{error}}\n        </p>\n      </div>\n    </div>\n\n    <div class=\"contain_save\">\n      <button class=\"btn_save\" (click)=\"savePay()\">\n        ENREGISTRER\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from '../../../../../../services/admin/admin.service';\nimport { NotificationService } from '../../../../../../services/notification/notification.service';\nimport { Router } from '@angular/router';\n\ninterface model {\n  id: number,\n  pseudo: string,\n  firstname: string,\n  lastname: string,\n  email: string,\n  credit: any\n}\n\n@Component({\n  selector: 'app-paiement-admin',\n  templateUrl: './paiement-admin.component.html',\n  styleUrls: ['./paiement-admin.component.scss']\n})\nexport class PaiementAdminComponent implements OnInit {\n  currentSelect: model = {\n    id: 0,\n    pseudo: null,\n    firstname: null,\n    lastname: null,\n    email: null,\n    credit: {}\n  }\n\n  creditSent: number = 0\n\n  list: model[] = []\n\n  error: string  = null\n\n  constructor(\n    private adminService: AdminService,\n    private notificationService: NotificationService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.getModelsActif()\n  }\n\n\n  select(event) {\n    const value = event.target.value;\n    let index = parseInt(value)\n    this.currentSelect = this.list[index]\n  }\n\n  getModelsActif() {\n    this.adminService.getModelsActif().subscribe(\n      (data: any) => {\n        console.log(data)\n        this.list = data\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  savePay() {\n    this.error = null\n\n    if (this.creditSent === 0 || this.creditSent < 0 || isNaN(parseInt(this.creditSent+''))) {\n      this.error = 'Veuillez sélectionner le modèle '\n      return false\n    }\n    if (this.currentSelect.id === 0) {\n      this.error = 'Veuillez sélectionner le modèle '\n      return false\n    }\n    if (this.creditSent > this.currentSelect.credit.credit ) {\n      this.error = 'Montant excédant le solde à payer'\n      return false\n    }\n    this.adminService.payModel(this.currentSelect.id, this.currentSelect.pseudo,\n      this.currentSelect.email, this.creditSent).subscribe(\n      (data: any) => {\n        console.log(data)\n        if (data.success) {\n          this.notificationService.info('Paiement', 'Paiement effectué')\n          this.router.navigate(['/admin/list-paiement'])\n        }\n        else if (data.error) {\n          this.notificationService.errorMsg(data.message)\n        }\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n}\n","<app-infobar-admin title=\"Modèles\" subTitle=\"Modèles\"></app-infobar-admin>\n\n<div class=\"admin_container\">\n  <div class=\"admin_bottom_bar\">\n    LISTE DES DEMANDES <span>({{count}} Demandes)</span>\n  </div>\n\n  <div class=\"contain_filter_client\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-lg-2\">\n          <div class=\"filter_client\">\n            <!-- <p class=\"txt\">Afficher par :</p> -->\n            <select name=\"filter\" id=\"filter\" (change)=\"select($event)\">\n              <option value=\"tous\">Tous</option>\n              <option value=\"Suppression\">Suppression</option>\n              <option value=\"Desactivation\">Désactivation</option>\n              <option value=\"En attente\">Inscription</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"col-lg-3\">\n          <div class=\"pagination_client\">\n            <!-- <div class=\"all\" (click)=\"tout()\">Lister Tout</div> -->\n            <div class=\"list_pagination\">\n              <div class=\"prev_pagination\" *ngIf=\"page > 0\" (click)=\"prevPage()\">\n                &lt;\n              </div>\n              <div\n              *ngFor=\"let item of list_pagination\"\n              (click)=\"selectPage(item)\"\n              >\n              <span class=\"item_pagination\" [ngClass]=\"{'actif': page === item}\"\n              *ngIf=\"item >= thirdlyPage - 3 && item  < thirdlyPage\">{{item + 1}}</span>\n              </div>\n              <div class=\"next_pagination\" *ngIf=\"page < topPage\" (click)=\"nextPage()\">\n                &gt;\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-lg-4\">\n          <div class=\"search_client\">\n            <input type=\"text\" class=\"search_input\" placeholder=\"Rechercher ......\"\n            (keyup)=\"input_search($event)\" [(ngModel)]=\"filter\">\n            <img [src]=\"search\" alt=\"\" class=\"search_icon\">\n          </div>\n        </div>\n        <!-- <div class=\"col-lg-2\">\n          <div class=\"other_action_client\">\n            <img [src]=\"four\" alt=\"\" class=\"other_icon_1\">\n            <img [src]=\"other\" alt=\"\" class=\"other_icon_2\">\n          </div>\n        </div> -->\n      </div>\n    </div>\n  </div>\n\n  <div class=\"contain_list_client\">\n    <div class=\"contain_header_list\">\n      <div>\n        <span *ngIf=\"selected === 'tous'\">TOUTES LES DEMANDES</span>\n        <span *ngIf=\"selected === 'En attente'\">DEMANDE D' INSCRIPTION</span>\n        <span *ngIf=\"selected === 'Suppression'\">DEMANDE DE SUPPRESSION DE COMPTE</span>\n        <span *ngIf=\"selected === 'Desactivation'\">DEMANDE DE DESACTIVATION DE COMPTE</span>\n      </div>\n      <div>\n        Total : {{count}}\n      </div>\n    </div>\n    <div>\n      <table class=\"table table-responsive\">\n        <tr class=\"header_table_client\">\n          <td>\n            <input type=\"checkbox\">\n          </td>\n          <td>Pseudo</td>\n          <td>Email</td>\n          <td>Depuis le</td>\n          <td>Description</td>\n          <td>Actions</td>\n        </tr>\n        <tr *ngFor=\"let client of clients\" class=\"list_table\">\n          <td>\n            <input type=\"checkbox\">\n          </td>\n          <td>{{client.pseudo}}</td>\n          <td>{{client.email}}</td>\n          <td>{{client.updatedAt}}</td>\n          <td>\n            <span *ngIf=\"client.state === 'En attente'\">Inscription</span>\n            <span *ngIf=\"client.state === 'Suppression'\">Suppression</span>\n            <span *ngIf=\"client.state === 'Desactivation'\">Désactivation</span>\n          </td>\n          <td class=\"list_action\">\n            <div *ngIf=\"client.state !== 'En attente'\" class=\"refuse\"(click)=\"accept(client.id, false)\">Refuser</div>\n            <div *ngIf=\"client.state !== 'En attente'\" class=\"bar\"></div>\n            <div *ngIf=\"client.state !== 'En attente'\" class=\"accept\" (click)=\"accept(client.id, true)\">Accepter</div>\n            <div *ngIf=\"client.state === 'En attente'\" class=\"detail\" (click)=\"detail(client.id)\">Voir détails</div>\n          </td>\n        </tr>\n      </table>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/services/admin/admin.service';\nimport { NotificationService } from 'src/app/services/notification/notification.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-ask-models-admin',\n  templateUrl: './ask-models-admin.component.html',\n  styleUrls: ['./ask-models-admin.component.scss']\n})\nexport class AskModelsAdminComponent implements OnInit {\n  icon = './../../../../../../../assets/icons/paper-clip.svg'\n\n  search = './../../../../../../../assets/icons/admin-icons/search.png'\n  four = './../../../../../../../assets/icons/admin-icons/menu_four.png'\n  other = './../../../../../../../assets/icons/admin-icons/menu.png'\n\n  deactivate = './../../../../../../../assets/icons/admin-icons/deactivate.png'\n  activate = './../../../../../../../assets/icons/admin-icons/activate.png'\n  delete = './../../../../../../../assets/icons/admin-icons/delete.png'\n  bloqued = './../../../../../../../assets/icons/admin-icons/bloquer.png'\n  debloquer = './../../../../../../../assets/icons/admin-icons/debloquer.png'\n\n  clients = []\n\n  count: number  = 0\n  range: number = 10\n  filter: string = ''\n  selected: string = 'tous'\n\n  page: number  = 0\n  topPage: number = 0\n  thirdlyPage: number = 3\n  list_pagination: number[] = []\n  constructor(\n    public adminService: AdminService,\n    private notificationService: NotificationService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.countClient()\n    this.listClients()\n  }\n\n  initPagination() {\n    this.list_pagination = []\n    let res = this.count / this.range\n    res = Math.floor(res)\n    this.topPage = res\n    for (let i = 0; i <= res; i++) {\n      this.list_pagination.push(i)\n    }\n  }\n\n  countClient() {\n    this.adminService.countRequestsModel().subscribe(\n      (data: any) => {\n        this.count = data ? data : 0\n        this.initPagination()\n      }\n    )\n  }\n\n  listClients() {\n    this.adminService.getRequestsModel(this.selected, this.range, this.page, this.filter).subscribe(\n      (data: any) => {\n        this.clients = data\n        this.clients.forEach( (client) => {\n          client.updatedAt = this.adminService.formatDate(client.updatedAt)\n        })\n        this.count = this.clients.length\n        this.initPagination()\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  select(event) {\n    const value = event.target.value;\n    this.selected = value\n    this.listClients()\n  }\n\n  input_search(event) {\n    this.listClients()\n  }\n\n  selectPage(page: number) {\n    this.page = page\n    this.listClients()\n  }\n\n  nextPage() {\n    this.page += 1\n    this.thirdlyPage += 3\n    this.listClients()\n  }\n\n  prevPage() {\n    this.page -= 1\n    this.thirdlyPage -= 3\n    if (this.thirdlyPage < 0) this.thirdlyPage = 0\n    this.listClients()\n  }\n\n  tout() {\n    this.page = 0\n    this.range = this.count\n    this.listClients()\n  }\n\n  detail(idClient: number) {\n    this.router.navigate(['/admin/detail-model', {idClient}])\n  }\n\n  accept(idClient: number, accepted: boolean) {\n    this.adminService.acceptRequestModel(idClient, accepted).subscribe(\n      (data: any) => {\n        // console.log(data)\n        if (data.success) this.listClients()\n        else if (data.error) this.notificationService.errorMsg(data.message)\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n}\n","import { Component, OnInit,\r\n  OnDestroy, PLATFORM_ID,\r\n  Inject, ViewChild,\r\n  ElementRef } from '@angular/core';\r\nimport {isPlatformBrowser} from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LocalStorageService } from 'ngx-localstorage';\r\nimport { Chat, ChatSocket, ClientCam } from 'src/app/interfaces/chat.interface';\r\nimport { ChatService } from 'src/app/services/chat/chat.service';\r\nimport { ModelService } from 'src/app/services/model/model.service';\r\nimport { SocketService } from 'src/app/services/socket/socket.service';\r\nimport { RoomPrivateService } from '../../../services/roomPrivate/room-private.service';\r\nimport { PopupService } from '../../../services/popup/popup.service';\r\nimport { ProfilService } from '../../../services/profil/profil.service';\r\nimport { RoomVipService } from '../../../services/roomVip/room-vip.service';\r\nimport { CreditService } from '../../../services/credit/credit.service';\r\nimport { TimerService } from '../../../services/timer/timer.service';\r\nimport { TypeTimer } from 'src/app/interfaces/timer.interface';\r\nimport * as $ from 'jquery';\r\n\r\n// For Peer\r\nimport './../shim';\r\nimport Peer from \"peerjs\"\r\nimport { Subscription, Observable } from 'rxjs';\r\n\r\ndeclare var initSettingVideoModel: any;\r\n\r\ninterface Invitation {\r\n  clientId: number,\r\n  clientPseudo: string,\r\n  roomId: any\r\n}\r\n\r\ninterface Stream {\r\n  clientId: number,\r\n  stream: MediaStream\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-live-private-model',\r\n  templateUrl: './live-private-model.component.html',\r\n  styleUrls: ['./live-private-model.component.scss' , './../../live/live.scss']\r\n})\r\nexport class LivePrivateModelComponent implements OnInit {\r\n  context: string = \"LIVE PRIVEE\";\r\n  imgPoster = \"assets/images/image.png\";\r\n  thrombone = \"assets/icons/paper-clip.svg\";\r\n  send = \"assets/icons/send-button.svg\";\r\n  dot = \"assets/icons/more_purple.svg\";\r\n  close = \"assets/icons/close.svg\";\r\n\r\n  toggleDot: boolean = false;\r\n\r\n  info = {\r\n    bg : \"assets/logos/dark-light.jpg\",\r\n    message : '',\r\n    idRoom: 0,\r\n    pseudo: '',\r\n    chatColor:'#FB77FC',\r\n    modelId: 0,\r\n    actif: 0,\r\n    creditModel: 0,\r\n    idCreditModel: 0\r\n  }\r\n\r\n  timer = {\r\n    id: 0,\r\n    hour: 0,\r\n    minute: 0,\r\n    second: 0,\r\n    fail: false,\r\n    reinit: false\r\n  };\r\n\r\n  messages: Chat[] = [];\r\n  leaved: boolean = false;\r\n\r\n  clientId: number = null;\r\n\r\n  clients: ClientCam[] = [];\r\n\r\n  clientStream: Stream[] = [];\r\n\r\n  joinSub = new Subscription();\r\n  leaveSub = new Subscription();\r\n  messageSub = new Subscription();\r\n  peerSub = new Subscription();\r\n  inviteVIPSub = new Subscription();\r\n\r\n  stat = {\r\n    id_show: 0,\r\n    type_show : null,\r\n    tarif_show: 0,\r\n    time_show: 0,\r\n    time_passed : this.timer.hour + ':' + this.timer.minute + ':' + this.timer.second,\r\n    hour_passed : null,\r\n    minute_passed : null,\r\n    second_passed : null,\r\n    actualCredit: this.info.creditModel,\r\n    winCredit: 0,\r\n    totalCredit: this.info.creditModel\r\n  }\r\n\r\n  loading: boolean = false;\r\n\r\n  listInvitation: Invitation[] = [];\r\n\r\n  showVideo: boolean = true;\r\n  showAudio: boolean = true;\r\n\r\n  showEmojiPicker = false;\r\n  sets = [\r\n    'native',\r\n    'google',\r\n    'twitter',\r\n    'facebook',\r\n    'emojione',\r\n    'apple',\r\n    'messenger'\r\n  ]\r\n  set = 'google';\r\n\r\n  // WEB RTC VIDEO\r\n  @ViewChild('video_live_model', {static: true}) video: ElementRef<HTMLVideoElement>;\r\n  private peer: Peer;\r\n  peerIdShare: string;\r\n  peerId: string;\r\n  private lazyStream: any;\r\n  currentPeer: any;\r\n  private peerList: Array<any> = [];\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private _platform: Object,\r\n    private router: Router,\r\n    private store: LocalStorageService,\r\n    private modelService: ModelService,\r\n    private chatService: ChatService,\r\n    private roomPrivateService: RoomPrivateService,\r\n    private roomVipService: RoomVipService,\r\n    private socketService: SocketService,\r\n    private profilService: ProfilService,\r\n    private popupService: PopupService,\r\n    private creditService: CreditService,\r\n    private timerService: TimerService) {\r\n      this.peer = new Peer();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getInfo();\r\n    this.initLiveVideo();\r\n    $(document).ready(\r\n      function() {initSettingVideoModel();}\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.onStop();\r\n    this.joinSub.unsubscribe();\r\n    this.leaveSub.unsubscribe();\r\n    this.messageSub.unsubscribe();\r\n    this.peerSub.unsubscribe();\r\n    this.inviteVIPSub.unsubscribe();\r\n  }\r\n\r\n  getInfo() {\r\n    this.modelService.getInfo().subscribe(\r\n      (data) => {\r\n        // console.log('Get info ', data);\r\n        if (data.profile.status === 'En vip') {\r\n          this.onStop();\r\n          this.router.navigate(['/modele/live-vip']);\r\n        }\r\n        if (data.profile.status === 'En ligne') {\r\n          this.onStop();\r\n          this.router.navigate(['/modele/chat']);\r\n        }\r\n        this.info.bg = data.path_soft;\r\n        this.info.modelId = data.id;\r\n        this.info.pseudo = data.pseudo;\r\n        this.getInfoRoom();\r\n      }\r\n    )\r\n  }\r\n\r\n  getInfoRoom() {\r\n    this.roomPrivateService.getRoomModel(this.info.modelId).subscribe(\r\n      async (data) => {\r\n        // console.log('Model room ', data);\r\n        this.info.idRoom = data.idRoom;\r\n        this.getCredit();\r\n        this.initSocket();\r\n      }\r\n    )\r\n  }\r\n\r\n  async getActifs() {\r\n    await this.roomPrivateService.getActif(this.info.idRoom).subscribe(\r\n      (data) => {\r\n        console.log(\"Get les actifs \", data);\r\n        this.info.actif = data.clients.length;\r\n        this.clients = data.clients;\r\n      }\r\n    )\r\n  }\r\n\r\n  getCredit() {\r\n    this.creditService.getCredit().subscribe(\r\n      (data) => {\r\n        this.info.creditModel = data ? data.credit : 0;\r\n        this.info.idCreditModel = data ? data.id : 0;\r\n      }\r\n    );\r\n\r\n    // Launch the timer\r\n    this.initTimer();\r\n  }\r\n\r\n  initSocket() {\r\n    this.getMessages();\r\n\r\n    this.joinSub = this.socketService.listen(`joined ${this.info.idRoom}P`).subscribe(\r\n      (data: any) => {\r\n        // console.log('joined ', data);\r\n        this.getActifs();\r\n      }\r\n    );\r\n\r\n    this.leaveSub = this.socketService.listen(`leaved ${this.info.idRoom}P`).subscribe(\r\n      (data: any) => {\r\n        // console.log('leaved ', data);\r\n        this.getActifs();\r\n      }\r\n    );\r\n\r\n    this.messageSub = this.socketService.listen(`message ${this.info.idRoom}P`).subscribe(\r\n      (data) => {\r\n        this.getMessages();\r\n      }\r\n    );\r\n\r\n    this.peerSub = this.socketService.listen(`ask peerId ${this.info.idRoom}P`).subscribe(\r\n      async (data: {peerId: any, room: string, clientId: number}) => {\r\n        console.log('Ask peer Id ', data);\r\n        if (!this.peerId) await this.getPeerId();\r\n        this.socketService.ansModelPeerId({\r\n          peerId: this.peerId, room: this.info.idRoom+'P', clientId: data.clientId\r\n        });\r\n      }\r\n    );\r\n\r\n    this.inviteVIPSub = this.socketService.listen(`invite model to vip ${this.info.idRoom}P ${this.info.modelId}`).subscribe(\r\n      (data: {roomId: any, clientId: number, clientPseudo: string, modelId: number}) => {\r\n        console.log('Invitation to vip ', data)\r\n        this.addInvitationToVIP(data.clientId, data.clientPseudo, data.roomId)\r\n      }\r\n    );\r\n\r\n    this.getActifs();\r\n  }\r\n\r\n  getMessages() {\r\n    this.chatService.getMessage(this.info.idRoom, 'private').subscribe(\r\n      (data) => {\r\n        // console.log('Messages ', data);\r\n        this.messages = data;\r\n      }\r\n    )\r\n  }\r\n\r\n  toggleDots() {\r\n    this.toggleDot = !this.toggleDot;\r\n    // console.log(this.toggleDot);\r\n  }\r\n\r\n  sendMessage() {\r\n    if (!this.info.message) return;\r\n\r\n    const data: Chat = {\r\n      idRoom: this.info.idRoom,\r\n      message: this.info.message,\r\n      type_source: 'model',\r\n      id_source: this.info.modelId,\r\n      type_chat: 'private',\r\n      code_couleur: this.info.chatColor\r\n    }\r\n    this.info.message = null;\r\n    this.chatService.postMessage(data).subscribe(\r\n      (data) => {\r\n        this.getMessages();\r\n        const msg: ChatSocket = {\r\n          room: this.info.idRoom + 'P',\r\n          role: 'model',\r\n          id: this.info.modelId,\r\n          message: this.info.message\r\n        }\r\n        this.socketService.sendMessage(msg);\r\n      }\r\n    )\r\n  }\r\n\r\n  addInvitationToVIP(clientId: number, clientPseudo: string, roomId: any) {\r\n    const data: Invitation = {\r\n      clientId, clientPseudo, roomId\r\n    }\r\n    let exist = false;\r\n    this.listInvitation.forEach(item => {\r\n      if (item.clientId === clientId) {\r\n        exist = true\r\n      }\r\n    })\r\n    if (!exist) this.listInvitation.push(data)\r\n    console.log(data)\r\n  }\r\n\r\n  closeInvitation(clientId: number, clientPseudo, roomId) {\r\n    const index = this.listInvitation.indexOf({clientId, clientPseudo, roomId});\r\n    this.listInvitation.splice(index, 1);\r\n  }\r\n\r\n  acceptInvitationToVIP(clientId: number, clientPseudo: string, roomId: any) {\r\n    this.closeInvitation(clientId, clientPseudo, roomId)\r\n    this.liveVIP(clientId, roomId);\r\n  }\r\n\r\n  denyInvitationToVIP(clientId: number, clientPseudo: string, roomId: any) {\r\n    this.socketService.responseNegativeInvitationModelToVIP(roomId, clientId, this.info.modelId, this.info.pseudo)\r\n    this.closeInvitation(clientId, clientPseudo, roomId)\r\n  }\r\n\r\n  async liveVIP(clientId, roomId) {\r\n      this.loading = true;\r\n      this.leaved = true;\r\n      this.clearTimer();\r\n      (await this.leaveTimer()).subscribe(\r\n        (data) => {\r\n          this.timer.reinit = true;\r\n          this.roomVipService.createRoom(clientId).subscribe(\r\n            (data) => {\r\n              this.store.set(\"vipRoomId\", data.room);\r\n\r\n              const msg = {\r\n                room: this.info.idRoom + 'P',\r\n                role: 'model',\r\n                clientId: clientId,\r\n                message: 'Let\\'s go to VIP',\r\n                roomVIP: data.room + 'V'\r\n              }\r\n\r\n              this.askLeave().then(\r\n                (data) => {\r\n                  this.socketService.emit('Invitation to VIP', msg).then(\r\n                    (data) => {\r\n                      this.socketService.responsePositiveInvitationModelToVIP(roomId, clientId, this.info.modelId, this.info.pseudo)\r\n                      // this.router.navigate(['/modele/live-vip', {clientId: this.clientId}]);\r\n                      this.loading = false;\r\n                      this.router.navigate(['/modele/live-vip']);\r\n                    }\r\n                  );\r\n                }\r\n              )\r\n            }\r\n          )\r\n      }, (error) => {\r\n        this.loading = false;\r\n      })\r\n  }\r\n\r\n  async askLeave() {\r\n    const data = {\r\n      room: this.info.idRoom + 'P',\r\n      role: 'model',\r\n      id: this.info.modelId,\r\n      pseudo: this.info.pseudo,\r\n      message: 'I pass to live VIP'\r\n    }\r\n    return await this.socketService.emit('Pass to VIP', data);\r\n  }\r\n\r\n  async liveOut() {\r\n    this.loading = true;\r\n    // const room = this.store.get('privateRoomId');\r\n    this.onStop();\r\n    this.leaved = true;\r\n    await (await this.leaveTimer()).subscribe(\r\n      (data) => {\r\n        this.timer.reinit = true;\r\n        this.clearTimer(); // set to zero\r\n        this.socketService.leavePrivate(this.info.idRoom, 'model', this.info.modelId);\r\n        this.roomPrivateService.leaveRoom();\r\n        this.profilService.updateStatus(this.info.modelId, 'En ligne').subscribe(\r\n          (data) => {\r\n            this.loading = false;\r\n            this.router.navigate(['/modele/chat']);\r\n          }\r\n        )\r\n      }, (error) => {\r\n        this.loading = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  chooseClient(id: number) {\r\n    this.clientId = id;\r\n    // console.log('Selected client ', this.clientId);\r\n  }\r\n\r\n  // Timer\r\n  async initTimer() {\r\n      this.timerService.beginTimerModel(this.info.modelId, TypeTimer.PRIVATE).subscribe(\r\n        async (data) => {\r\n          // console.log('Timer ', data);\r\n          const created: Date = data.createdAt;\r\n          const updated: Date = data.updatedAt;\r\n          this.timer.id = data.id;\r\n          // console.log(created.toString(), \" to \", updated.toString());\r\n          const {hour, minute, second} = this.timerService.convertTime(created.toString(), updated.toString());\r\n          this.timer.hour = hour;\r\n          this.timer.minute = minute;\r\n          this.timer.second = second;\r\n          // console.log(this.timer.hour, ':', this.timer.minute, ':', this.timer.second);\r\n\r\n          this.getCostShow();\r\n        }\r\n      )\r\n  }\r\n\r\n  async getCostShow() {\r\n    return await this.timerService.getCostShow(TypeTimer.VIP).subscribe(\r\n      (data: any) => {\r\n        // console.log(\"Show Cost \", data)\r\n        this.stat.tarif_show = data.credit? data.credit : 0;\r\n        this.stat.time_show = data.second ? data.second : 0;\r\n        this.stat.type_show = (data.type + '').toString().toUpperCase();\r\n\r\n        this.beginCountCredit(this.stat.time_show);\r\n      }\r\n    )\r\n  }\r\n\r\n  beginCountCredit(nbSecond: number) {\r\n    const delay = nbSecond * 1000;\r\n    setInterval(\r\n      () => {\r\n        if (this.info.actif > 0) {\r\n          this.creditService.getCredit().subscribe(\r\n            (data) => {\r\n              this.info.creditModel = data ? data.credit : 0;\r\n            }\r\n          );\r\n        }\r\n      }, delay\r\n    )\r\n  }\r\n\r\n  // Timer set to 0\r\n  clearTimer() {\r\n    this.timer.reinit = true;\r\n  }\r\n\r\n  async leaveTimer(): Promise<Observable<any>> {\r\n    const data = {\r\n      id: this.timer.id,\r\n      type: TypeTimer.PRIVATE,\r\n      leaved: true,\r\n      push: new Date().toString()\r\n    }\r\n\r\n    return await this.timerService.updateTimer(data);\r\n  }\r\n\r\n    // WEB RTC - LIVE VIDEO\r\n    initLiveVideo() {\r\n      this.onStart();\r\n      this.getPeerId();\r\n    }\r\n\r\n    onStart(){\r\n      if(isPlatformBrowser(this._platform) && 'mediaDevices' in navigator) {\r\n        navigator.mediaDevices.getUserMedia({video: this.showVideo, audio: this.showAudio}).then((ms: MediaStream) => {\r\n          const _video = this.video.nativeElement;\r\n          _video.srcObject = ms;\r\n          _video.play();\r\n        });\r\n      }\r\n    }\r\n\r\n    onStop() {\r\n      if (this.video && this.video.nativeElement.srcObject) {\r\n        this.video.nativeElement.pause();\r\n        if ((this.video.nativeElement.srcObject as MediaStream).getVideoTracks()[0]) {\r\n          (this.video.nativeElement.srcObject as MediaStream).getVideoTracks()[0].stop();\r\n        }\r\n        this.video.nativeElement.srcObject = null;\r\n      }\r\n    }\r\n\r\n  private getPeerId = () => {\r\n    this.peer.on('open', (id) => {\r\n      console.log(\"Peer Id \", id);\r\n      this.peerId = id;\r\n      const data = {\r\n        role: 'model',\r\n        modelId: this.info.modelId,\r\n        room : this.info.idRoom+'P',\r\n        peerId: this.peerId\r\n      }\r\n      this.socketService.newPeerIdModel(data);\r\n    });\r\n\r\n    this.peer.on('call', (call) => {\r\n      console.log(\"Someone call model\");\r\n        this.onStop();\r\n        navigator.mediaDevices.getUserMedia({\r\n          video: this.showVideo,\r\n          audio: this.showAudio\r\n        }).then((stream) => {\r\n          this.lazyStream = stream;\r\n          const _video = this.video.nativeElement;\r\n          _video.srcObject = stream;\r\n          _video.play();\r\n          call.answer(stream);\r\n          console.log(\"After answer stream\");\r\n          call.on('stream', (remoteStream) => {\r\n            console.log(\"On receive stream model\");\r\n            if (!this.peerList.includes(call.peer)) {\r\n              this.streamRemoteVideo(remoteStream);\r\n              this.currentPeer = call.peerConnection;\r\n              this.peerList.push(call.peer);\r\n            }\r\n            console.log(\"Peer list \", this.peerList);\r\n          });\r\n        }).catch(err => {\r\n          console.log(err + ' - Unable to get media');\r\n        });\r\n    });\r\n  }\r\n\r\n  connectWithPeer(): void {\r\n    this.callPeer(this.peerIdShare);\r\n  }\r\n\r\n  private callPeer(id: string): void {\r\n    this.onStop();\r\n    navigator.mediaDevices.getUserMedia({\r\n      video: this.showVideo,\r\n      audio: this.showAudio\r\n    }).then((stream) => {\r\n      this.lazyStream = stream;\r\n      const call = this.peer.call(id, stream);\r\n      call.on('stream', (remoteStream) => {\r\n        if (!this.peerList.includes(call.peer)) {\r\n          this.streamRemoteVideo(remoteStream);\r\n          this.currentPeer = call.peerConnection;\r\n          this.peerList.push(call.peer);\r\n        }\r\n      });\r\n    }).catch(err => {\r\n      console.log(err + 'Unable to connect');\r\n    });\r\n  }\r\n\r\n  private streamRemoteVideo(stream: any): void {\r\n    console.log('Add remote stream');\r\n    // const video = document.createElement('video');\r\n    // video.classList.add('video');\r\n    // video.srcObject = stream;\r\n    // video.play();\r\n\r\n    // document.getElementById('remote-video').append(video);\r\n    // this.clients[0].client.stream = stream;\r\n    this.clientStream.push({\r\n      clientId: this.clientStream.length,\r\n      stream: stream\r\n    });\r\n  }\r\n\r\n  toggleVideo() {\r\n    this.showVideo = !this.showVideo;\r\n    this.onStop();\r\n    this.onStart();\r\n  }\r\n\r\n  toggleAudio() {\r\n    this.showAudio = !this.showAudio;\r\n    this.onStop();\r\n    this.onStart();\r\n  }\r\n\r\n    // -------- EMOJI -----------------\r\n\r\n    toggleEmojiPicker() {\r\n      this.showEmojiPicker = !this.showEmojiPicker;\r\n    }\r\n\r\n    addEmoji(event) {\r\n      const {info} = this;\r\n      console.log(this.info.message)\r\n      console.log(`${event.emoji.native}`)\r\n      const text = `${info.message}${event.emoji.native}`;\r\n\r\n      this.info.message = text;\r\n      console.log(this.info.message)\r\n      // this.showEmojiPicker = false;\r\n    }\r\n\r\n    focus() {\r\n      this.showEmojiPicker = false;\r\n    }\r\n\r\n}\r\n","<app-header connected=\"true\" model=\"true\"></app-header>\n\n<div class=\"main_live\">\n  <img [src]=\"dot\" alt=\"\" id=\"dots\" (click)=\"toggleDots()\">\n  <div class=\"contain_top\">\n    <div class=\"contain_left\">\n      <app-topbar [context]=\"context\" [actif]=\"info.actif\"\n      [hour]=\"this.timer.hour\"\n      [minute]=\"this.timer.minute\"\n      [second]=\"this.timer.second\"\n      [reinit]=\"this.timer.reinit\"\n      [leaved]=\"leaved\"\n      ></app-topbar>\n      <div class=\"show_live_left\">\n        <figure id=\"videoContainer\" data-fullscreen=\"false\" style=\"margin: 0px;\">\n          <!-- [poster]=\"info.bg\" -->\n          <video autoplay id=\"video_live_model\" #video_live_model muted=\"muted\"></video>\n        </figure>\n\n        <div id=\"video-controls\" class=\"controls\">\n          <div>\n            <button id=\"screen\" type=\"button\" class=\"btn_control\" (click)=\"toggleVideo()\">\n              <img src=\"./../../../../assets/icons/video-camera.svg\" alt=\"\" *ngIf=\"showVideo\">\n              <img src=\"./../../../../assets/icons/no-video.svg\" alt=\"\" *ngIf=\"!showVideo\">\n            </button>\n          </div>\n\n          <div>\n            <button id=\"sound\" type=\"button\" class=\"btn_control\" (click)=\"toggleAudio()\">\n              <img src=\"./../../../../assets/icons/volume.svg\" alt=\"\" *ngIf=\"showAudio\">\n              <img src=\"./../../../../assets/icons/mute.svg\" alt=\"\" *ngIf=\"!showAudio\">\n            </button>\n          </div>\n\n          <div>\n            <button id=\"fs\" type=\"button\" class=\"btn_control\">\n              <img src=\"./../../../../assets/icons/full-size.svg\" alt=\"\">\n            </button>\n          </div>\n        </div>\n\n      </div>\n    </div>\n    <div class=\"contain_right\">\n      <div class=\"show_live_right\">\n        <mat-tab-group mat-align-tabs=\"center\">\n          <mat-tab label=\"Live Cam\">\n            <app-live-private-cam [clients]=\"clients\" canSelect=\"true\"\n            (clientSelected)=\"chooseClient($event)\"\n            [streams]=\"clientStream\" showListUser=\"true\" [myId]=\"info.modelId\"></app-live-private-cam>\n          </mat-tab>\n          <mat-tab label=\"Live Chat\">\n            <app-live-free-chat [modelId]=\"info.modelId\" [messages]=\"messages\" [profil]=\"info.bg\"></app-live-free-chat>\n          </mat-tab>\n        </mat-tab-group>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"contain_bottom\">\n    <div class=\"contain_left\">\n      <div class=\"contain_action contain_action_desktop\">\n        <!-- <div class=\"show_vip btn_show\">\n          <button class=\"btn btn_vip lighter\" (click)=\"liveVIP()\">Passer en show VIP</button>\n          <p></p>\n        </div> -->\n\n        <div class=\"out_show btn_show\">\n          <button class=\"btn btn_out_show lighter\" (click)=\"liveOut()\">Sortir du Show</button>\n          <p></p>\n        </div>\n\n        <div class=\"btn_credit\">\n          <button class=\"btn lighter\">\n            {{info.creditModel}} crédits\n          </button>\n          <p></p>\n        </div>\n      </div>\n\n      <!-- // mobile -->\n      <div class=\"contain_action contain_action_mobile\" *ngIf=\"toggleDot\">\n        <!-- <div class=\"show_vip btn_show\">\n          <button class=\"btn btn_vip lighter\" (click)=\"liveVIP()\">Passer en show VIP</button>\n          <p></p>\n        </div> -->\n\n        <div class=\"out_show btn_show\">\n          <button class=\"btn btn_out_show lighter\" (click)=\"liveOut()\">Sortir du Show</button>\n          <p></p>\n        </div>\n\n        <div class=\"btn_credit\">\n          <button class=\"btn lighter\">\n            {{info.creditModel}} crédits\n          </button>\n          <p></p>\n        </div>\n      </div>\n\n    </div>\n    <div class=\"contain_right\">\n      <div class=\"contain_message\">\n        <emoji-mart class=\"emoji-mart\" set=\"{{set}}\"\n        *ngIf=\"showEmojiPicker\" (emojiSelect)=\"addEmoji($event)\"\n        searchIcons='./../../../../assets/icons/admin-icons/search.png'\n        title=\"\"\n        ></emoji-mart>\n        <div class=\"contain_thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n        </div>\n        <form (ngSubmit)=\"sendMessage()\">\n          <div class=\"input_text\">\n              <input type=\"text\" name=\"message\" autocomplete=\"off\" (focus)=\"focus()\"\n              placeholder=\"Entrer votre message ici ...\" [(ngModel)]=\"info.message\">\n              <button type=\"button\" (click) =\"toggleEmojiPicker()\">😀</button><br>\n              <button type=\"submit\">\n                <div class=\"p\">\n                  <img [src]=\"send\" alt=\"\">\n                </div>\n              </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n\n</div>\n\n\n<div class=\"lds-spinner\" *ngIf=\"loading\">\n  <div></div><div></div><div></div><div></div>\n  <div></div><div></div><div></div><div></div>\n  <div></div><div></div><div></div><div></div>\n</div>\n\n<div class=\"contain_invitation\">\n  <div class=\"list_invitation\">\n    <div class=\"invitation\" *ngFor=\"let item of listInvitation\">\n      <div class=\"close_invitation\"\n      (click)=\"closeInvitation(item.clientId, item.clientPseudo, item.roomId)\">x</div>\n      <p class=\"message_invitation\">\n        Invitation VIP <br>\n        Client : <span class=\"pseudo_invitation\">{{item.clientPseudo}}</span>\n      </p>\n      <div class=\"action_invitation\">\n        <button class=\"btn_invitation btn_accept lighter\"\n        (click)=\"acceptInvitationToVIP(item.clientId, item.clientPseudo, item.roomId)\">\n          OUI\n        </button>\n        <button class=\"btn_invitation btn_deny lighter\"\n        (click)=\"denyInvitationToVIP(item.clientId, item.clientPseudo, item.roomId)\">\n          NON\n        </button>\n      </div>\n    </div>\n\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { Router, Event, NavigationStart, NavigationEnd, NavigationError } from '@angular/router';import { HeaderService } from './services/header/header.service';\nimport { routeTransitionAnimations } from './utils/slide';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations : [routeTransitionAnimations]\n})\nexport class AppComponent {\n  title = 'betweenUs';\n  hide: boolean = false;\n  unselect: boolean = false;\n  loading: boolean = false;\n\n  constructor(private headerSrv: HeaderService, private router: Router) {\n    this.router.events.subscribe((event: Event) => {\n      if (event instanceof NavigationStart) {\n          // Show loading indicator\n          this.loading = true;\n      }\n\n      if (event instanceof NavigationEnd) {\n          // Hide loading indicator\n          this.loading = false;\n      }\n\n      if (event instanceof NavigationError) {\n          // Hide loading indicator\n          this.loading = false;\n          // Present error to user\n          console.log(event.error);\n      }\n  });\n\n    this.headerSrv.hidded.subscribe(\n      (data) => {\n        this.hide = data;\n      }\n    );\n    this.headerSrv.unselected.subscribe(\n      (data) => {\n        this.unselect = data;\n      }\n    );\n  }\n\n\n}\n","<!-- <div class=\"contain_header\" [ngClass]=\"{'unclickable': unselect}\" *ngIf=\"!hide\">\n  <app-header></app-header>\n</div> -->\n<div class=\"spacer\"></div>\n<router-outlet></router-outlet>\n\n<div class=\"lds-spinner\" *ngIf=\"loading\">\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n</div>\n\n<!-- <app-scrolltop></app-scrolltop> -->\n","import { Injectable } from '@angular/core';\nimport * as CryptoJS from 'crypto-js';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EncryptionService {\n  private key = CryptoJS.enc.Utf8.parse('4512631236589784');\n  private iv = CryptoJS.enc.Utf8.parse('4512631236589784');\n\n  constructor() { }\n\n  encryptUsingAES256(enString) {\n    var encrypted = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(JSON.stringify(enString)), this.key, {\n        keySize: 128 / 8,\n        iv: this.iv,\n        mode: CryptoJS.mode.CBC,\n        padding: CryptoJS.pad.Pkcs7\n    });\n    return encrypted;\n  }\n\n  decryptUsingAES256(decString) {\n      var decrypted = CryptoJS.AES.decrypt(decString, this.key, {\n          keySize: 128 / 8,\n          iv: this.iv,\n          mode: CryptoJS.mode.CBC,\n          padding: CryptoJS.pad.Pkcs7\n      });\n      const result = decrypted.toString(CryptoJS.enc.Utf8);\n      return result;\n  }\n\n}\n","<app-infobar-admin title=\"Modèles\" subTitle=\"Modèles\"></app-infobar-admin>\n\n<div class=\"admin_container\">\n  <div class=\"admin_bottom_bar\">\n    MODELES BLOQUES <span>({{count}} Modèles)</span>\n  </div>\n\n  <div class=\"contain_filter_client\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-lg-4\">\n          <div class=\"pagination_client\">\n            <!-- <div class=\"all\" (click)=\"tout()\">Lister Tout</div> -->\n            <div class=\"list_pagination\">\n              <div class=\"prev_pagination\" (click)=\"prevPage()\">\n                &lt;\n              </div>\n              <div\n              *ngFor=\"let item of list_pagination\"\n              (click)=\"selectPage(item)\"\n              >\n              <span class=\"item_pagination\" [ngClass]=\"{'actif': page === item}\"\n              *ngIf=\"item >= thirdlyPage - 3 && item  < thirdlyPage\">{{item + 1}}</span>\n              </div>\n              <div class=\"next_pagination\" (click)=\"nextPage()\">\n                &gt;\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-lg-5\">\n          <div class=\"search_client\">\n            <input type=\"text\" class=\"search_input\" placeholder=\"Rechercher ......\"\n            (keyup)=\"input_search($event)\" [(ngModel)]=\"filter\">\n            <img [src]=\"search\" alt=\"\" class=\"search_icon\">\n          </div>\n        </div>\n        <div class=\"col-lg-3\">\n          <div class=\"other_action_client\">\n            <img [src]=\"four\" alt=\"\" class=\"other_icon_1\">\n            <img [src]=\"other\" alt=\"\" class=\"other_icon_2\">\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"contain_list_client\">\n    <div class=\"contain_header_list\">\n      <div>\n        LES MODELES BLOQUES\n      </div>\n      <div>\n        Total : {{count}}\n      </div>\n    </div>\n    <div>\n      <table class=\"table table-responsive\">\n        <tr class=\"header_table_client\">\n          <td>\n            <input type=\"checkbox\">\n          </td>\n          <td>Pseudo</td>\n          <td>Adresse email</td>\n          <td>Inscrit le</td>\n          <td>Bloqué le</td>\n          <td>Actions</td>\n        </tr>\n        <tr *ngFor=\"let client of clients\" class=\"list_table\">\n          <td>\n            <input type=\"checkbox\">\n          </td>\n          <td>{{client.pseudo}}</td>\n          <td>{{client.email}}</td>\n          <td>{{client.createdAt}}</td>\n          <td>{{client.updatedAt}}</td>\n          <td class=\"list_action\">\n            <img [src]=\"debloquer\" alt=\"\" (click)=\"deblockedClient(client.id)\">\n            <img [src]=\"delete\" alt=\"\" (click)=\"deleteClient(client.id)\">\n          </td>\n        </tr>\n      </table>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/services/admin/admin.service';\nimport { NotificationService } from 'src/app/services/notification/notification.service';\n\n\n@Component({\n  selector: 'app-bloquer-models-admin',\n  templateUrl: './bloquer-models-admin.component.html',\n  styleUrls: ['./bloquer-models-admin.component.scss']\n})\nexport class BloquerModelsAdminComponent implements OnInit {\n  icon = './../../../../../../../assets/icons/paper-clip.svg'\n\n  search = './../../../../../../../assets/icons/admin-icons/search.png'\n  four = './../../../../../../../assets/icons/admin-icons/menu_four.png'\n  other = './../../../../../../../assets/icons/admin-icons/menu.png'\n\n  deactivate = './../../../../../../../assets/icons/admin-icons/deactivate.png'\n  activate = './../../../../../../../assets/icons/admin-icons/activate.png'\n  delete = './../../../../../../../assets/icons/admin-icons/delete.png'\n  bloqued = './../../../../../../../assets/icons/admin-icons/bloquer.png'\n  debloquer = './../../../../../../../assets/icons/admin-icons/debloquer.png'\n\n  clients = []\n\n  count: number  = 0\n  range: number = 10\n  filter: string = ''\n  selected: string = 'tous'\n\n  page: number  = 0\n  topPage: number = 0\n  thirdlyPage: number = 3\n  list_pagination: number[] = []\n\n  constructor(\n    public adminService: AdminService,\n    private notificationService: NotificationService\n  ) { }\n\n  ngOnInit(): void {\n    this.countClient()\n    this.listClients()\n  }\n\n  initPagination() {\n    this.list_pagination = []\n    let res = this.count / this.range\n    res = Math.floor(res)\n    this.topPage = res\n    // console.log('TopPage ',this.topPage)\n    for (let i = 0; i <= res; i++) {\n      this.list_pagination.push(i)\n    }\n  }\n\n  countClient() {\n    this.adminService.countModelsBlocked().subscribe(\n      (data) => {\n        this.count = data ? data : 0\n        this.initPagination()\n      }\n    )\n  }\n\n\n  listClients() {\n    this.adminService.getModelsBlocked(this.range, this.page, this.filter).subscribe(\n      (data) => {\n        // console.log(data)\n        this.clients = data\n        this.clients.forEach( (client) => {\n          client.createdAt = this.adminService.formatDate(client.createdAt)\n          client.updatedAt = this.adminService.formatDate(client.updatedAt)\n        })\n        this.count = this.clients.length\n        this.initPagination()\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  input_search(event) {\n    this.listClients()\n  }\n\n  selectPage(page: number) {\n    this.page = page\n    this.listClients()\n  }\n\n  nextPage() {\n    if (this.page + 1 >= this.topPage) return false\n    this.page += 1\n    this.thirdlyPage += 3\n    this.listClients()\n  }\n\n  prevPage() {\n    if (this.page - 1 < 0) return false\n    this.page -= 1\n    this.thirdlyPage -= 3\n    if (this.thirdlyPage < 0) this.thirdlyPage = 0\n    this.listClients()\n  }\n\n  tout() {\n    this.page = 0\n    this.range = this.count\n    this.listClients()\n  }\n\n  deleteClient(idClient: number) {\n    this.adminService.deleteModel(idClient).subscribe(\n      (data: any) => {\n        if (data.success) this.listClients()\n        else if (data.error) this.notificationService.errorMsg(data.message)\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  deblockedClient(idClient: number) {\n    const data = {\n      idClient,\n      reverse: true\n    }\n    this.adminService.blockModel(data).subscribe(\n      (data: any) => {\n        if (data.success) this.listClients()\n        else if (data.error) this.notificationService.errorMsg(data.message)\n      }, (error) => {\n        console.log(error);\n      }\n    )\n  }\n}\n","import { Component, Input, IterableDiffers, OnInit } from '@angular/core';\r\nimport { Chat } from '../../../../interfaces/chat.interface';\r\nimport * as $ from 'jquery';\r\nimport { SocketService } from '../../../../services/socket/socket.service';\r\nimport { ClientService } from '../../../../services/client/client.service';\r\n\r\ninterface message {\r\n  source: string,\r\n  name: string,\r\n  url: string,\r\n  message: string,\r\n  color: string\r\n}\r\n\r\n@Component({\r\n  selector: 'app-live-free-chat',\r\n  templateUrl: './live-free-chat.component.html',\r\n  styleUrls: ['./live-free-chat.component.scss']\r\n})\r\nexport class LiveFreeChatComponent implements OnInit {\r\n  @Input()\r\n  modelId: number;\r\n\r\n  @Input()\r\n  pseudoModel: string;\r\n\r\n  @Input()\r\n  leaved: boolean;\r\n\r\n  @Input()\r\n  passedToPrivate: boolean;\r\n\r\n  @Input()\r\n  profil: string;\r\n\r\n  room: number;\r\n\r\n  user = \"assets/images/user_chat.png\";\r\n  listColor = [];\r\n\r\n  @Input()\r\n  messages: Chat[] = [];\r\n\r\n  currentPseudo: string = null;\r\n\r\n  iterableDiffer: any;\r\n  constructor(\r\n    private iterableDiffers: IterableDiffers,\r\n    private socketService: SocketService,\r\n    private clientService: ClientService) {\r\n    this.iterableDiffer = iterableDiffers.find([]).create(null);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.profil === undefined) this.profil = this.user;\r\n    if (this.messages.length > 0) {\r\n      $(document).ready(function () {\r\n        setTimeout(\r\n          () => {\r\n              $('#main_chat').animate({\r\n                scrollTop: $('#main_chat .msg:last-child').position().top\r\n              }, 10);\r\n          }, 1000\r\n        )\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  ngDoCheck() {\r\n    let changes = this.iterableDiffer.diff(this.messages);\r\n    if (changes) {\r\n      $(\"#main_chat\").animate({ scrollTop: $('#main_chat').prop(\"scrollHeight\")}, 10);\r\n    }\r\n  }\r\n\r\n  getPseudo(clientId: number) {\r\n    this.clientService.getClient(clientId).subscribe(\r\n      (data) => {\r\n        this.currentPseudo = data.pseudo;\r\n        console.log(this.currentPseudo);\r\n      }\r\n    )\r\n  }\r\n\r\n  clearPseudo() {\r\n    this.currentPseudo = null;\r\n  }\r\n}\r\n\r\n","<div class=\"main_chat\" id=\"main_chat\">\n  <div *ngFor=\"let item of messages; let i=index\" class=\"msg\">\n    <div class=\"left_chat contain_chat\" *ngIf=\"item.type_source == 'model'\">\n      <div class=\"contain_image\">\n        <img [src]=\"profil\" alt=\"\" class=\"user_profile\">\n      </div>\n      <div class=\"left_message chat\" [ngStyle]=\"{'background-color': item.code_couleur}\">\n        <p>{{item.message}}</p>\n      </div>\n    </div>\n\n    <div class=\"right_chat contain_chat\" *ngIf=\"item.type_source == 'client'\">\n      <div class=\"right_message chat\" [ngStyle]=\"{'background-color': item.code_couleur}\">\n        <p>{{item.message}}</p>\n      </div>\n      <div class=\"contain_image\" (mouseover)=\"getPseudo(item.id_source)\"\n      [matTooltip]=\"currentPseudo\" matTooltipClass=\"tooltip_class\">\n        <img [src]=\"user\" alt=\"\" class=\"user_profile\">\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"leave_model\" *ngIf=\"leaved\">\n    <p>\" {{pseudoModel}} a quitté la discussion \"</p>\n  </div>\n\n  <div class=\"leave_model\" *ngIf=\"passedToPrivate\">\n    <p>\" {{pseudoModel}} est passé en live Privé \"</p>\n  </div>\n\n</div>\n","<app-header></app-header>\n\n<div class=\"contain_signup_one\">\n  <div class=\"inside_sign part_one\">\n    <h2>INSCRIPTION</h2>\n    <p>MODELE</p>\n    <div class=\"blank\"></div>\n  </div>\n</div>\n\n<div class=\"contain_signup_two inside_sign\">\n  <h2 class=\"title\">\n    Devenir modèle\n  </h2>\n\n  <div class=\"descr\">\n      Tous les modèles présents <br>\n      sur ce site sont agé de 18 et plus. <br>\n      Avant de vous inscrire, assurez-vous d'être bien majeur.\n  </div>\n  <div class=\"already\">\n    Déjà un compte ? <span routerLink=\"/modele/connexion\">Se connecter</span>\n  </div>\n\n  <form class=\"form\" [formGroup]=\"signForm\" novalidate autocomplete=\"off\">\n    <div class=\"form-group\">\n      <label for=\"pseudo\">Nom *</label>\n      <input type=\"text\" formControlName=\"firstname\"\n      name=\"firstName\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.firstname.errors\">\n        <small *ngIf=\"form.firstname.errors.required\" class=\"form-text error-text\">Nom requis</small>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"pseudo\">Prénom *</label>\n      <input type=\"text\" formControlName=\"lastname\" name=\"lastName\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.lastname.errors\">\n        <small *ngIf=\"form.lastname.errors.required\" class=\"form-text error-text\">Prénom requis</small>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"pseudo\">Pseudo *</label>\n      <input type=\"text\" formControlName=\"pseudo\" name=\"pseudo\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.pseudo.errors\">\n        <small *ngIf=\"form.pseudo.errors.required\" class=\"form-text error-text\">Pseudo requis</small>\n      </div>\n      <div *ngIf=\"pseudoExist\">\n        <small class=\"form-text error-text\">Pseudo existe déjà</small>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"email\">Email *</label>\n      <input type=\"text\" formControlName=\"email\" name=\"email\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.email.errors\">\n        <small *ngIf=\"form.email.errors.required\" class=\"form-text error-text \">\n          Adresse email requis\n        </small>\n        <small *ngIf=\"form.email.errors.email\" class=\"form-text error-text \">\n          Format invalide\n        </small>\n      </div>\n      <div *ngIf=\"emailExist\">\n        <small class=\"form-text error-text \">\n          Email déjà utilisé\n        </small>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"pseudo\">Date de naissance *</label>\n      <div class=\"container-fluid\">\n        <div class=\"row\">\n          <div class=\"col-lg-3\">\n            <select formControlName=\"day_birth\" name=\"day\" class=\"form-control input lighter\"\n            placeholder=\"jj\" (click)=\"select()\"\n            style=\"background-color: var(--purple); color: white;border-color: transparent;\">\n              <option value=\"\" selected=\"true\" class=\"selected_option\">jj</option>\n              <option *ngFor=\"let item of day\" [value]=\"item.value\">{{item.name}}</option>\n            </select>\n            <!-- <input type=\"text\" formControlName=\"day\" name=\"day\" class=\"form-control input lighter\" placeholder=\"jj\"> -->\n            <div *ngIf=\"submitted && form.day_birth.errors\">\n              <small *ngIf=\"form.day_birth.errors.required\" class=\"form-text error-text\">Jour requis</small>\n            </div>\n          </div>\n          <div class=\"col-lg-4 offset-lg-1\">\n            <select formControlName=\"month_birth\" name=\"month\" class=\"form-control input lighter\"\n            placeholder=\"mm\" (click)=\"select()\"\n            style=\"background-color: var(--purple); color: white;border-color: transparent;\">\n              <option value=\"\" selected=\"true\" class=\"selected_option\">mm</option>\n              <option *ngFor=\"let item of month\" [value]=\"item.value\">{{item.name}}</option>\n            </select>\n            <!-- <input type=\"text\" formControlName=\"month\" name=\"month\" class=\"form-control input lighter\" placeholder=\"mm\"> -->\n            <div *ngIf=\"submitted && form.month_birth.errors\">\n              <small *ngIf=\"form.month_birth.errors.required\" class=\"form-text error-text\">Mois requis</small>\n            </div>\n          </div>\n          <div class=\"col-lg-3 offset-lg-1\">\n            <select formControlName=\"year_birth\" name=\"year\" class=\"form-control input lighter\"\n            placeholder=\"aaaa\" (click)=\"select()\"\n            style=\"background-color: var(--purple); color: white;border-color: transparent;\">\n              <option value=\"\" selected=\"true\" class=\"selected_option\">aaaa</option>\n              <option *ngFor=\"let item of year\" [value]=\"item.value\">{{item.name}}</option>\n            </select>\n            <!-- <input type=\"text\" formControlName=\"year\" name=\"year\" class=\"form-control input lighter\" placeholder=\"aaaa\"> -->\n            <div *ngIf=\"submitted && form.year_birth.errors\">\n              <small *ngIf=\"form.year_birth.errors.required\" class=\"form-text error-text\">Année requis</small>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"pseudo\">Copie pièce d'identitée *</label>\n      <div class=\"container-fluid\">\n        <div class=\"row\">\n          <div class=\"col-lg-6\" (click)=\"selectPhoto('recto')\">\n            <input type=\"text\" formControlName=\"path_recto\" name=\"recto\"\n            class=\"form-control input lighter input_img\" placeholder=\"Recto\"\n            [(ngModel)]=\"nameRecto\">\n            <div *ngIf=\"submitted && form.path_recto.errors\">\n              <small *ngIf=\"form.path_recto.errors.required\" class=\"form-text error-text\">Recto requis</small>\n            </div>\n            <div *ngIf=\"errorRecto\">\n              <small class=\"form-text error-text\">Format invalide (image)</small>\n            </div>\n          </div>\n          <div class=\"col-lg-6\" (click)=\"selectPhoto('verso')\">\n            <input type=\"text\" formControlName=\"path_verso\" name=\"verso\"\n            class=\"form-control input lighter input_img\" placeholder=\"Verso\"\n            [(ngModel)]=\"nameVerso\">\n            <div *ngIf=\"submitted && form.path_verso.errors\">\n              <small *ngIf=\"form.path_verso.errors.required\" class=\"form-text error-text\">Verso requis</small>\n            </div>\n            <div *ngIf=\"errorVerso\">\n              <small class=\"form-text error-text\">Format invalide (image)</small>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"form-group\" (click)=\"selectPhoto('photo')\">\n      <label for=\"pseudo\">Photo de vous avec la carte d'identité *</label>\n      <input type=\"text\" formControlName=\"path_cin\"\n      name=\"photoCIN\" class=\"form-control input lighter input_img\"\n      [(ngModel)]=\"namePhoto\">\n      <div *ngIf=\"submitted && form.path_cin.errors\">\n        <small *ngIf=\"form.path_cin.errors.required\" class=\"form-text error-text\">Photo avec CIN requis</small>\n      </div>\n      <div *ngIf=\"errorPhoto\">\n        <small class=\"form-text error-text\">Format invalide (image)</small>\n      </div>\n    </div>\n\n    <div class=\"form-group\" (click)=\"selectPhoto('soft')\">\n      <label for=\"pseudo\">Photo soft pour le profil *</label>\n      <input type=\"text\" formControlName=\"path_soft\"\n      name=\"photoSoft\" class=\"form-control input lighter input_img\"\n      [(ngModel)]=\"nameSoft\">\n      <div *ngIf=\"submitted && form.path_soft.errors\">\n        <small *ngIf=\"form.path_soft.errors.required\" class=\"form-text error-text\">Photo soft requis</small>\n      </div>\n      <div *ngIf=\"errorSoft\">\n        <small class=\"form-text error-text\">Format invalide (image)</small>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"password\">Mot de passe *</label>\n      <input type=\"password\" formControlName=\"password\" name=\"password\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.password.errors\">\n        <small *ngIf=\"form.password.errors.required\" class=\"form-text error-text\">\n          Mot de passe requis\n        </small>\n        <small *ngIf=\"form.password.errors.pattern\" class=\"form-text error-text\">\n          Au moins 8 caractères, lettre majuscule et  minuscule,\n          un chiffre et/ou un caractère spécial.\n        </small>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"passwordConfirm\">Confirmer mot de passe *</label>\n      <input type=\"password\" formControlName=\"passwordConfirm\" name=\"passwordConfirm\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.passwordConfirm.errors\">\n        <small *ngIf=\"form.passwordConfirm.errors.required\" class=\"form-text error-text \">\n          Confirmation mot de passe requis\n        </small>\n        <small *ngIf=\"form.passwordConfirm.errors.mustMatch\" class=\"form-text error-text \">\n          Mot de passe ne correspond pas\n        </small>\n      </div>\n    </div>\n\n    <!-- <div>\n      <small *ngIf=\"error !== null\" class=\"form-text error-text\">\n        {{error}}\n      </small>\n    </div> -->\n\n    <div class=\"notif\">\n      * Champ obligatoire\n    </div>\n\n    <div class=\"action\">\n      <button class=\"btn btn_signup lighter\" (click)=\"register()\">\n        <div class=\"loader\" *ngIf=\"loading\"></div>\n        <span *ngIf=\"!loading\"> S'INSCRIRE</span>\n      </button>\n    </div>\n  </form>\n\n  <input type=\"file\" class=\"hidden_file\" id=\"recto\" accept=\"image/x-png,image/gif,image/jpeg\" (change)=\"fileChoose($event, 'recto')\">\n  <input type=\"file\" class=\"hidden_file\" id=\"verso\" accept=\"image/x-png,image/gif,image/jpeg\" (change)=\"fileChoose($event, 'verso')\">\n  <input type=\"file\" class=\"hidden_file\" id=\"photo\" accept=\"image/x-png,image/gif,image/jpeg\" (change)=\"fileChoose($event, 'photo')\">\n  <input type=\"file\" class=\"hidden_file\" id=\"soft\" accept=\"image/x-png,image/gif,image/jpeg\" (change)=\"fileChoose($event, 'soft')\">\n</div>\n","import { AuthService } from './../../../services/auth/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport * as $  from 'jquery';\nimport { Router } from '@angular/router';\nimport { registerModel } from '../../../interfaces/register.interface';\nimport { PopupService } from '../../../services/popup/popup.service';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { ProfilService } from '../../../services/profil/profil.service';\nimport { CreditService } from '../../../services/credit/credit.service';\n\ninterface birth {\n  value: string,\n  name: string\n}\n\n@Component({\n  selector: 'app-inscription-model',\n  templateUrl: './inscription-model.component.html',\n  styleUrls: ['./inscription-model.component.scss']\n})\nexport class InscriptionModelComponent implements OnInit {\n  signForm : FormGroup;\n  submitted :boolean =  false;\n  loading: boolean = false;\n\n  error: string = null;\n  emailExist: boolean = false;\n  pseudoExist: boolean = false;\n\n  day: birth[] = [\n    {value: '01', name: '01'},{value: '02', name: '02'},{value: '03', name: '03'},{value: '04', name: '04'},\n    {value: '05', name: '05'},{value: '06', name: '06'},{value: '07', name: '07'},{value: '08', name: '08'},\n    {value: '09', name: '09'}\n  ];\n\n  month: birth[] = [\n    {value: '01', name: 'Janvier'}, {value: '02', name: 'Février'}, {value: '03', name: 'Mars'}, {value: '04', name: 'Avril'},\n    {value: '05', name: 'Mai'}, {value: '06', name: 'Juin'}, {value: '07', name: 'Juillet'}, {value: '08', name: 'Août'},\n    {value: '09', name: 'Septembre'}, {value: '10', name: 'Octobre'}, {value: '11', name: 'Novembre'}, {value: '12', name: 'Décembre'}\n  ];\n\n  year: birth[] = [];\n\n  fileRecto: File = null;\n  previewRecto: any;\n  nameRecto: any;\n  errorRecto: boolean = false;\n\n  fileVerso: File = null;\n  previewVerso: any;\n  nameVerso: any;\n  errorVerso: boolean = false;\n\n\n  filePhoto: File = null;\n  previewPhoto: any;\n  namePhoto: any;\n  errorPhoto: boolean = false;\n\n\n  fileSoft: File = null;\n  previewSoft: any;\n  nameSoft: any;\n  errorSoft: boolean = false;\n\n\n  fileUploadProgress: string = null;\n\n  constructor(\n    private formBuilder : FormBuilder,\n    private popupService: PopupService,\n    private authService: AuthService,\n    private profileService: ProfilService,\n    private creditService: CreditService\n  ) {\n    this.signForm = this.formBuilder.group({\n      firstname : ['', Validators.required],\n      lastname : ['', Validators.required],\n      pseudo : ['', Validators.required],\n      email : ['',[Validators.required, Validators.email]],\n      // password : ['',[Validators.required, Validators.pattern(/^(?=\\D*\\d)(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z]).{8,}$/)]],\n      day_birth : ['', Validators.required],\n      month_birth : ['', Validators.required],\n      year_birth : ['', Validators.required],\n      path_recto : [''],\n      path_verso : [''],\n      path_cin : [''],\n      path_soft : [''],\n      password : ['', Validators.required],\n      passwordConfirm: ['',Validators.required],\n    },{\n      validators : this.mustMatch('password','passwordConfirm'),\n    })\n  }\n\n  ngOnInit(): void {\n    this.initDay();\n    this.initYear();\n  }\n\n  get form() {return this.signForm.controls}\n\n  mustMatch = (controlName : string, matchControlName : string) => {\n    return (formGroup: FormGroup) => {\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchControlName];\n\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n          return;\n      }\n      if (control.value !== matchingControl.value) {\n          matchingControl.setErrors({ mustMatch: true });\n      } else {\n          matchingControl.setErrors(null);\n      }\n    }\n  }\n\n  initDay() {\n    for (var i = 10; i < 32; i++) {\n      const tmp: birth = {value: i+'', name: i+''};\n      this.day.push(tmp);\n    }\n  }\n\n  initYear() {\n    for (var i = 1920; i < 2500; i++) {\n      const tmp: birth = {value: i+'', name: i+''};\n      this.year.push(tmp);\n    }\n  }\n\n  selectPhoto(type: string) {\n    $(`#${type}`).click();\n  }\n\n  verifyMimeType(mime: string) {\n    return (mime === \"image/png\" || mime === \"image/jpeg\");\n  }\n\n  fileChoose(fileInput, type: string) {\n    var ok: boolean = false;\n    switch (type) {\n      case 'recto':\n        ok = true;\n        this.fileRecto =  fileInput.target.files[0];\n        break;\n      case 'verso':\n        ok = true;\n        this.fileVerso =  fileInput.target.files[0];\n        break;\n      case 'photo':\n        ok = true;\n        this.filePhoto =  fileInput.target.files[0];\n        break;\n      case 'soft':\n        ok = true;\n        this.fileSoft =  fileInput.target.files[0];\n        break;\n      default:\n        break;\n    }\n    if (ok) {this.preview(type);}\n  }\n\n  preview(type: string) {\n    this.errorRecto = this.errorVerso = this.errorPhoto = this.errorSoft = false;\n    var mimeType: any;\n    var reader = new FileReader();\n    var ok: boolean = false;\n\n    switch (type) {\n      case 'recto':\n        ok = true;\n        mimeType = this.fileRecto.type;\n        if (!this.verifyMimeType(mimeType)) this.errorRecto = true;\n        reader = new FileReader();\n        reader.readAsDataURL(this.fileRecto);\n        reader.onload = (event) => {\n          this.previewRecto = reader.result;\n          this.nameRecto = this.fileRecto.name;\n        };\n        break;\n\n      case 'verso':\n        ok = true;\n        mimeType = this.fileVerso.type;\n        if (!this.verifyMimeType(mimeType)) this.errorVerso = true;\n        reader = new FileReader();\n        reader.readAsDataURL(this.fileVerso);\n        reader.onload = (event) => {\n          this.previewVerso = reader.result;\n          this.nameVerso = this.fileVerso.name;\n        };\n        break;\n\n      case 'photo':\n        ok = true;\n        mimeType = this.filePhoto.type;\n        if (!this.verifyMimeType(mimeType)) this.errorPhoto = true;\n        reader = new FileReader();\n        reader.readAsDataURL(this.filePhoto);\n        reader.onload = (event) => {\n          this.previewPhoto = reader.result;\n          this.namePhoto = this.filePhoto.name;\n        };\n        break;\n\n      case 'soft':\n        ok = true;\n        mimeType = this.fileSoft.type;\n        if (!this.verifyMimeType(mimeType)) this.errorSoft = true;\n        reader = new FileReader();\n        reader.readAsDataURL(this.fileSoft);\n        reader.onload = (event) => {\n          this.previewSoft = reader.result;\n          this.nameSoft = this.fileSoft.name;\n        };\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  select() {\n    $(\".selected_option\").hide();\n  }\n\n  async register() {\n    this.pseudoExist = false;\n    this.emailExist = false;\n    this.error = null;\n    this.submitted = true;\n\n    if(this.signForm.invalid || this.errorSoft || this.errorRecto || this.errorVerso || this.errorPhoto){\n      return false;\n    }\n    this.loading = true;\n    const formData = new FormData();\n    formData.append('file_recto', this.fileRecto, this.nameRecto);\n    formData.append('file_verso', this.fileVerso, this.nameVerso);\n    formData.append('file_cin', this.filePhoto, this.namePhoto);\n    formData.append('file_soft', this.fileSoft, this.nameSoft);\n    this.fileUploadProgress = '0%';\n\n    return await this.authService.uploadImagesModel(formData).subscribe(\n      (events) => {\n        if (events.type === HttpEventType.UploadProgress) {\n          this.fileUploadProgress = Math.round(events.loaded / events.total * 100) + '%';\n          // console.log(this.fileUploadProgress);\n        }\n        else if (events.type === HttpEventType.Response) {\n          let user: registerModel = this.signForm.value;\n          user = this.signForm.value;\n          user.date_birth = user.day_birth + '/' + user.month_birth + '/' + user.year_birth;\n          user.path_recto = events.body.path_recto;\n          user.path_verso = events.body.path_verso;\n          user.path_cin = events.body.path_cin;\n          user.path_soft = events.body.path_soft;\n\n          // console.log(\"Post register \", user);\n          this.authService.registerModel(user).subscribe(\n            (res: any) => {\n                // console.log(res);\n                if (res.error) {\n                  this.error = res.message;\n                  if (res.pseudo) this.pseudoExist = true;\n                  if (res.email) this.emailExist = true;\n                  this.loading = false;\n                } else {\n                  this.profileService.createSetting(res.id).subscribe(\n                    (data) => {\n                      this.creditService.createCredit(res.id).subscribe(\n                        (data) => {\n                          this.profileService.createProfil(res.id).subscribe(\n                            (data) => {\n                              this.submitted = false;\n                              this.popupService.info('model','Félicitation',\n                              `Cher nouveau modèle, Un email est envoyé à\n                              <span style=\"font-style: italic; color: var(--pink)\">${res.email}</span>\n                              pour les informations de votre compte. <br>\n                              <small>Veuillez vérifier dans vos spams</small>`);\n                              this.signForm.reset();\n                              this.loading = false;\n                            }\n                          );\n                        }\n                      );\n                    }\n                  );\n\n                }\n                // this.loading = false;\n            },\n            (err: any) => {\n                this.loading = false;\n                console.log(err);\n            }\n          );\n        }\n      }, (error) => {\n        this.loading = false;\n        console.log(error);\n      }\n    )\n  }\n\n}\n","import { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { LocalStorageService } from 'ngx-localstorage';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoomVipService {\n  endpoint = environment.endpoint\n\n  constructor(\n    private http: HttpClient,\n    private store: LocalStorageService\n  ) { }\n\n  getColor(): Observable<any> {\n    return this.http.get(`${this.endpoint}/room-vip/color`, httpOptions)\n  }\n\n  createRoom(clientId: number): Observable<any> {\n    return this.http.post(`${this.endpoint}/room-vip`,{clientId}, httpOptions)\n  }\n\n  getRoomModel(id: number): Observable<any> {\n    return this.http.get(`${this.endpoint}/room-vip/model/${id}`, httpOptions)\n  }\n\n  getInfo(id: number): Observable<any> {\n    return this.http.get(`${this.endpoint}/room-vip/client/${id}`, httpOptions)\n  }\n\n  async getActif(id: number): Promise<number> {\n    let actif = 0;\n    await this.http.get(`${this.endpoint}/room-vip/${id}`, httpOptions).subscribe(\n      (data: any) => {\n        if (data.actif) {\n          actif =  data.actif\n        }\n      }\n    );\n    return actif;\n  }\n\n  joinRoom(idRoom: number) {\n    this.store.set(\"vipRoom\", idRoom);\n  }\n\n  joinedRoom(idRoom: number) {\n    const room = this.store.get(\"vipRoom\");\n    return room === idRoom;\n  }\n\n  leaveRoom() {\n    this.store.remove(\"vipRoom\");\n  }\n\n  getGain(modelId: number): Observable<any> {\n    return this.http.get(`${this.endpoint}/room-vip/gain/${modelId}`, httpOptions)\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\ninterface loginAdmin {\n  email,\n  password\n}\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  endpoint = environment.endpoint + '/admin'\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  formatDate(date: string) {\n    let year = date.substring(0, 4);\n    let month = date.substring(5, 7);\n    let day = date.substring(8, 10);\n    const result = day+'/'+month+'/'+year;\n    return result;\n  }\n\n  login(user : loginAdmin) : Observable<any>{\n    return this.http.post(`${this.endpoint}/login`, user, httpOptions)\n  }\n\n  countClients(motif: string) : Observable<any>{\n    return this.http.get(`${this.endpoint}/count-clients/${motif}`, httpOptions)\n  }\n\n  getClients(motif: string, range: number, page: number, filter: string) : Observable<any>{\n    return this.http.get(`${this.endpoint}/list-clients/${motif}/${range}/${page}/${filter}`, httpOptions)\n  }\n\n  deleteClient(idClient: number) {\n    return this.http.delete(`${this.endpoint}/client/${idClient}`, httpOptions)\n  }\n\n  blockClient(data : { idClient: number, reverse: boolean }) {\n    return this.http.post(`${this.endpoint}/block-client`, data, httpOptions)\n  }\n\n  deactivateClient(idClient: number) {\n    return this.http.post(`${this.endpoint}/deactivate-client`, {idClient}, httpOptions)\n  }\n\n  activateClient(idClient: number) {\n    return this.http.post(`${this.endpoint}/activate-client`, {idClient},  httpOptions)\n  }\n\n  countClientsBlocked() : Observable<any>{\n    return this.http.get(`${this.endpoint}/count-client-blocked`, httpOptions)\n  }\n\n  getClientsBlocked(range: number, page: number, filter: string) : Observable<any>{\n    return this.http.get(`${this.endpoint}/list-client-blocked/${range}/${page}/${filter}`, httpOptions)\n  }\n\n  getStatInscriptionClient() {\n    return this.http.get(`${this.endpoint}/stat-inscription-client`, httpOptions)\n  }\n\n  // Model\n  countModels(motif: string) : Observable<any>{\n    return this.http.get(`${this.endpoint}/count-models/${motif}`, httpOptions)\n  }\n\n  getModels(motif: string, range: number, page: number, filter: string) : Observable<any>{\n    return this.http.get(`${this.endpoint}/list-models/${motif}/${range}/${page}/${filter}`, httpOptions)\n  }\n\n  deleteModel(idClient: number) {\n    return this.http.delete(`${this.endpoint}/model/${idClient}`, httpOptions)\n  }\n\n  blockModel(data : { idClient: number, reverse: boolean }) {\n    return this.http.post(`${this.endpoint}/block-model`, data, httpOptions)\n  }\n\n  deactivateModel(idClient: number) {\n    return this.http.post(`${this.endpoint}/deactivate-model`, {idClient}, httpOptions)\n  }\n\n  activateModel(idClient: number) {\n    return this.http.post(`${this.endpoint}/activate-model`, {idClient},  httpOptions)\n  }\n\n  countModelsBlocked() : Observable<any>{\n    return this.http.get(`${this.endpoint}/count-model-blocked`, httpOptions)\n  }\n\n  getModelsBlocked(range: number, page: number, filter: string) : Observable<any>{\n    return this.http.get(`${this.endpoint}/list-model-blocked/${range}/${page}/${filter}`, httpOptions)\n  }\n\n  getStatInscriptionModel() {\n    return this.http.get(`${this.endpoint}/stat-inscription-model`, httpOptions)\n  }\n\n  getStatSuppressionModel() {\n    return this.http.get(`${this.endpoint}/stat-suppression-model`, httpOptions)\n  }\n\n\n  getStatusModel(status: string, filter: string) {\n    return this.http.get(`${this.endpoint}/model-status/${status}/${filter}`, httpOptions)\n  }\n\n  countRequestsModel() {\n    return this.http.get(`${this.endpoint}/count-requests-models`, httpOptions)\n  }\n\n  getRequestsModel(motif: string, range: number, page: number, filter: string) {\n    return this.http.get(`${this.endpoint}/model-requests/${motif}/${range}/${page}/${filter}`, httpOptions)\n  }\n\n  acceptRequestModel(idClient: number, accepted: boolean) {\n    const data = {\n      idClient,\n      accepted\n    }\n    return this.http.post(`${this.endpoint}/result-request-model`, data,  httpOptions)\n  }\n\n  acceptInscriptionModel(idClient: number, accepted: boolean, motif: string) {\n    const data = {\n      idClient,\n      accepted,\n      motif\n    }\n    return this.http.post(`${this.endpoint}/result-inscription-model`, data,  httpOptions)\n  }\n\n  getInfosModel(idClient) {\n    return this.http.get(`${this.endpoint}/getInfosModel/${idClient}`, httpOptions)\n  }\n\n  countModelActif() {\n    return this.http.get(`${this.endpoint}/countModelActif`, httpOptions)\n  }\n\n  countClientActif() {\n    return this.http.get(`${this.endpoint}/countClientActif`, httpOptions)\n  }\n\n  countModelState(state: string) {\n    return this.http.get(`${this.endpoint}/countModelState/${state}`, httpOptions)\n  }\n\n  newLastClients() {\n    return this.http.get(`${this.endpoint}/newLastClients`, httpOptions)\n  }\n\n  newLastModels() {\n    return this.http.get(`${this.endpoint}/newLastModels`, httpOptions)\n  }\n\n  countRoom(type) {\n    return this.http.get(`${this.endpoint}/countRoom/${type}`, httpOptions)\n  }\n\n  getChiffreAffaire() {\n    return this.http.get(`${this.endpoint}/getChiffreAffaire`, httpOptions)\n  }\n\n  getAverageClient() {\n    return this.http.get(`${this.endpoint}/getAverageClient`, httpOptions)\n  }\n\n  get10LastShowPrivate() {\n    return this.http.get(`${this.endpoint}/get10LastShowPrivate`, httpOptions)\n  }\n\n  get10LastShowVIP() {\n    return this.http.get(`${this.endpoint}/get10LastShowVIP`, httpOptions)\n  }\n\n  getTop10Model() {\n    return this.http.get(`${this.endpoint}/getTop10Model`, httpOptions)\n  }\n\n  // Paiement\n  countPay() {\n    return this.http.get(`${this.endpoint}/countPay`, httpOptions)\n  }\n\n  getListPaiement(flux: string, range: number, page: number, filter: string) {\n    return this.http.get(`${this.endpoint}/getListPaiement/${flux}/${range}/${page}/${filter}`, httpOptions)\n  }\n\n  deletePaiement(idPay: number) {\n    return this.http.post(`${this.endpoint}/deletePaiement`, {idPay},  httpOptions)\n  }\n\n  getModelsActif() {\n    return this.http.get(`${this.endpoint}/getModelsActif`, httpOptions)\n  }\n\n  payModel(idModel: number, pseudoModel: string, emailModel: string, credit: number) {\n    const data = {\n      idModel,\n      pseudoModel,\n      emailModel,\n      credit\n    }\n    return this.http.post(`${this.endpoint}/pay-model`, data,  httpOptions)\n  }\n\n  sendMail(email: string, objet: string, message: string) {\n    const data  = {\n      email,\n      objet,\n      message\n    }\n    return this.http.post(`${this.endpoint}/sendMail`, data,  httpOptions)\n  }\n\n  // Taboo\n  getTaboo() {\n    return this.http.get(`${this.endpoint}/list-taboo`, httpOptions)\n  }\n\n  deleteTaboo(idTaboo: number) {\n    return this.http.delete(`${this.endpoint}/delete-taboo/${idTaboo}`, httpOptions)\n  }\n\n  addTaboo(word: string) {\n    return this.http.post(`${this.endpoint}/add-taboo`, {word},  httpOptions)\n  }\n\n  // Special ADMIN\n  getInfosAdmin() {\n    return this.http.get(`${this.endpoint}/get-info-admin`, httpOptions)\n  }\n\n  updateInfoAdmin(pseudo: string, url: string) {\n    const data = {\n      pseudo,\n      url\n    }\n    console.log('Update service ', data)\n    return this.http.post(`${this.endpoint}/update-info-admin`, data,  httpOptions)\n  }\n\n  changePasswordAdmin(oldPassword: string, newPassword: string) {\n    const data = {\n      oldPassword,\n      newPassword\n    }\n    return this.http.post(`${this.endpoint}/change-password-admin`, data,  httpOptions)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { cloneDeep } from 'lodash';\nimport { AdminService } from '../../../../../../services/admin/admin.service';\nimport { ThumbnailsPosition } from 'ng-gallery';\n\n@Component({\n  selector: 'app-statistique-models-admin',\n  templateUrl: './statistique-models-admin.component.html',\n  styleUrls: ['./statistique-models-admin.component.scss']\n})\nexport class StatistiqueModelsAdminComponent implements OnInit {\n  years : number[] = []\n\n  actif: number = 0\n\n  options: any;\n  updating: boolean = false;\n  models = []\n  original = []\n  originModels = []\n  currentYear: number = new Date().getFullYear()\n  currentMonth: string = '01'\n\n  isIntegral: boolean = false\n\n\n  constructor(\n    private adminService: AdminService\n  ) {\n    this.options = {\n      autoSize: true,\n      data: this.getData(),\n      series: [\n        {\n          xKey: 'date',\n          yKey: 'inscription',\n          yName: 'Inscription',\n          stroke: '#FB77FC',\n          marker: {\n            size: 2,\n            fill: '#FB77FC',\n            stroke: '#FB77FC',\n          },\n        },\n        {\n          xKey: 'date',\n          yKey: 'suppression',\n          yName: 'Suppression',\n          stroke: '#4E009F',\n          marker: {\n            size: 2,\n            fill: '#4E009F',\n            stroke: '#4E009F',\n            color: '#fff'\n          },\n        }\n      ],\n      axes: [\n        {\n          type: 'category',\n          position: 'bottom',\n          nice: false,\n          // tick: { count: agCharts.time.second.every(3), color:  \"rgb(0, 0, 0)\"},\n          tick: { count: 0,color:  \"rgb(0, 0, 0)\"},\n          label: { format: '%m/%d/%Y', color:  \"rgb(0, 0, 0)\" },\n        },\n        {\n          type: 'number',\n          position: 'left',\n          tick: { count: 1,color:  \"rgb(0, 0, 0)\"},\n          label: { format: '#{.0f}', color:  \"#000\"}\n        }\n      ],\n      background: {\n        fill: \"#ffffff5f\",\n        visible: true\n      },\n      tooltip: {\n        enabled: true\n      },\n      navigator: {\n        enabled: true\n      },\n      title: { text: '' },\n      legend: {\n        position: 'bottom',\n        enabled: true,\n        item: {\n          label: {\n            color: 'black'\n          }\n        }\n      }\n    };\n  }\n\n  ngOnInit(): void {\n    this.initYears();\n    this.startUpdates();\n    this.useDefaultGridStyle();\n    this.countModelActif()\n    this.getInscriptions()\n  }\n\n  countModelActif() {\n    this.adminService.countModelActif().subscribe(\n      (data: number) => {\n        this.actif = data ? data : 0\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  initYears() {\n    const initial = 2021;\n    for(let i = 0; i < 50; i++ ) {\n      this.years.push(initial+i)\n    }\n  }\n\n  useDefaultGridStyle = () => {\n    const options = cloneDeep(this.options);\n\n    var gridStyle = [\n      {\n        stroke: 'white',\n        lineDash: [2, 1],\n      },\n    ];\n    options.axes[0].gridStyle = gridStyle;\n    options.axes[1].gridStyle = gridStyle;\n\n    this.options = options;\n  };\n\n  update = () => {\n    const options = cloneDeep(this.options);\n\n    options.data = this.getData();\n\n    this.options = options;\n  };\n\n  startUpdates = () => {\n    if (this.updating) {\n      return;\n    }\n    this.updating = true;\n    this.update();\n    setInterval(this.update, 1000);\n  };\n\n  getData() {\n    this.updating = false;\n    return this.models;\n  }\n\n  getInscriptions() {\n    this.originModels = []\n    this.adminService.getStatInscriptionModel().subscribe(\n      (data: any) => {\n        let tmp = data\n        tmp.forEach(inscrit => {\n          inscrit.date = this.adminService.formatDate(inscrit.date)\n          inscrit.count = parseInt(inscrit.count)\n          inscrit.inscription = parseInt(inscrit.count)\n          inscrit.suppression = 0\n        })\n        this.originModels = tmp\n        this.getSuppression()\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  getSuppression() {\n    this.adminService.getStatSuppressionModel().subscribe(\n      (data: any) => {\n        let tmp = data\n        tmp.forEach(inscrit => {\n          inscrit.date = this.adminService.formatDate(inscrit.date)\n          inscrit.count = parseInt(inscrit.count)\n          inscrit.inscription = 0\n          inscrit.suppression = parseInt(inscrit.count)\n          this.originModels.push(inscrit)\n        })\n        // console.log(this.originModels)\n        this.resume()\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  selectMonth(event) {\n    this.isIntegral = false\n    const value = event.target.value;\n    this.currentMonth = value\n    const search = this.currentMonth+'/'+this.currentYear\n    this.models =  this.original.filter(element => {\n      const year = element.date.substring(3, 10)\n      if (year === search) return true\n      return false\n    })\n  }\n\n  selectYear(event) {\n    this.isIntegral = false\n    const value = event.target.value;\n    this.currentYear = value\n    this.models =  this.original.filter(element => {\n      const year = element.date.substring(6, 10)\n      if (year === this.currentYear) return true\n      return false\n    })\n  }\n\n  integral() {\n    this.isIntegral = !this.isIntegral\n    if (this.isIntegral) {\n        this.models = this.original\n    } else {\n        const search = this.currentMonth+'/'+this.currentYear\n        this.models =  this.original.filter(element => {\n          const year = element.date.substring(3, 10)\n          if (year === search) return true\n          return false\n      })\n    }\n  }\n\n  resume() {\n    let find = false\n    this.models = []\n    this.originModels.forEach(\n      element => {\n        find = false\n        for (let i = 0; i < this.models.length; i++) {\n          if (this.models[i].date === element.date) {\n            this.models[i].inscription += element.inscription\n            this.models[i].suppression += element.suppression\n            find = true\n          }\n        }\n        if (!find)this.models.push(element)\n      }\n    )\n    this.original = this.models\n  }\n}\n","<app-infobar-admin title=\"Modèles\" subTitle=\"Modèles\"></app-infobar-admin>\n\n<div class=\"admin_container\">\n  <div class=\"admin_bottom_bar\">\n    STATISTIQUES\n  </div>\n\n  <div class=\"main_bar container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 block_right\">\n        <div class=\"title_right\">\n          <select name=\"month\" id=\"month\" (change)=\"selectMonth($event)\">\n            <option value=\"01\">Janvier</option>\n            <option value=\"02\">Février</option>\n            <option value=\"03\">Mars</option>\n            <option value=\"04\">Avril</option>\n            <option value=\"05\">Mai</option>\n            <option value=\"06\">Juin</option>\n            <option value=\"07\">Juillet</option>\n            <option value=\"08\">Août</option>\n            <option value=\"09\">Septembre</option>\n            <option value=\"10\">Octobre</option>\n            <option value=\"11\">Novembre</option>\n            <option value=\"12\">Decembre</option>\n          </select>\n\n          <select name=\"year\" id=\"year\" (change)=\"selectYear($event)\">\n            <option [value]=\"year\" *ngFor=\"let year of years\">{{year}}</option>\n          </select>\n\n          <button class=\"btn btn_integrale\" (click)=\"integral()\"\n          [ngClass]=\"{'integral' : isIntegral}\">\n            Afficher l'intégrale\n          </button>\n        </div>\n\n        <div class=\"under_right\">\n          <div class=\"list_action_right\">\n            <button class=\"btn btn_list\" >\n              Nombre d'inscription\n            </button>\n            <button class=\"btn btn_list\">\n              Nombre de suppression\n            </button>\n          </div>\n        </div>\n\n      </div>\n\n      <div class=\"col-lg-4 block_right block_right_left\">\n        <div class=\"title_right right_left\">\n          Nombre total des modèles\n        </div>\n        <div class=\"under_right right_left\">\n          <div class=\"list_action_right\">\n              {{actif}}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n  <div class=\"graph_right\">\n    <div class=\"wrapper\">\n      <ag-charts-angular\n        style=\"height: 70vh; width: 100%; overflow: hidden\"\n        [options]=\"options\"\n      ></ag-charts-angular>\n    </div>\n  </div>\n</div>\n\n\n","window.parcelRequire = undefined;\r\n","import { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LocalStorageService } from 'ngx-localstorage';\nimport { NotificationService } from 'src/app/services/notification/notification.service';\nimport { environment } from 'src/environments/environment';\nimport { ClientService } from '../../../services/client/client.service';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n@Component({\n  selector: 'app-reactivate-account',\n  templateUrl: './reactivate-account.component.html',\n  styleUrls: ['./reactivate-account.component.scss']\n})\nexport class ReactivateAccountComponent implements OnInit {\n  endpoint = environment.endpoint\n\n  token = null;\n  errorToken: boolean = false;\n  errorMessageToken: string = null;\n  successMessageToken: string = null;\n\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private http: HttpClient,\n    private store: LocalStorageService,\n    private router: Router,\n    private notificationService: NotificationService,\n    private clientService: ClientService\n    ) {\n    this.activatedRoute.queryParams.subscribe(params => {\n          this.token = params['token'];\n      });\n  }\n\n  ngOnInit(): void {\n    this.confirmToken();\n  }\n\n  confirmToken() {\n    if (!this.token) {\n      this.errorToken = true;\n      this.errorMessageToken = \"Token introuvable\"\n      return false;\n    }\n    this.store.set(\"token\", this.token);\n\n    // POST client/confirm\n    this.clientService.reactivateAccount().subscribe(\n      (data: {success: boolean, message: string}) => {\n        // console.log(\"Client token \", data);\n        if (!data.success) {\n          this.errorMessageToken = data.message;\n          this.errorToken = true;\n        } else {\n          this.errorToken = false;\n          this.successMessageToken = data.message;\n          this.notificationService.infoMsg(\"Votre compte est réactivé\");\n          this.router.navigate(['/client/connexion']);\n        }\n      }\n    )\n  }\n\n}\n","<div class=\"main\"></div>\n\n<div class=\"main_token\">\n  <div class=\"main_contain\">\n    <h3 class=\"titre\">Réactivation de compte</h3>\n    <p class=\"success message\" *ngIf=\"!errorToken\">\n      {{successMessageToken}}\n    </p>\n    <p class=\"error message\" *ngIf=\"errorToken\">\n      {{errorMessageToken}}\n    </p>\n  </div>\n</div>\n\n","<app-header actif=\"2\"></app-header>\n\n<div class=\"contain_signin_one\">\n  <div class=\"inside_sign part_one\">\n    <h2>Bienvenue sur <span class=\"word_one\">BETWEEN</span><span class=\"word_two\">US</span></h2>\n  </div>\n</div>\n\n<div class=\"contain_signin_two inside_sign\">\n  <h2 class=\"title\">\n    Se connecter\n  </h2>\n\n  <div class=\"descr\">\n      Nous utilisons des cookies pour améliorer votre expérience\n      d'utilisateur. En poursuivant votre navigation, vous acceptez\n      l'utilisation de cookies, notamment de tiers. Politique relative aux cookies.\n  </div>\n\n  <form class=\"form\" [formGroup]=\"loginForm\" novalidate autocomplete=\"off\">\n    <div class=\"form-group\">\n      <label for=\"pseudo\">Pseudo</label>\n      <input type=\"text\" formControlName=\"pseudo\" name=\"pseudo\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.pseudo.errors\">\n        <small *ngIf=\"form.pseudo.errors.required\" class=\"form-text error-text\">Pseudo requis</small>\n      </div>\n    </div>\n\n\n    <div class=\"form-group\">\n      <label for=\"password\">Mot de passe</label>\n      <input type=\"password\" formControlName=\"password\" name=\"password\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.password.errors\">\n        <small *ngIf=\"form.password.errors.required\" class=\"form-text error-text\">\n          Mot de passe requis\n        </small>\n      </div>\n    </div>\n\n      <small *ngIf=\"errorAuth\" class=\"form-text error-text\">\n        {{errorAuth}}\n      </small>\n\n    <div class=\"options\">\n      <div class=\"stay_connected\">\n        <input (change)=\"remember($event)\" type=\"checkbox\" id=\"checker\" class=\"regular-checkbox\">\n        <label for=\"checker\" class=\"label_check\">Rester connecté</label>\n      </div>\n      <div class=\"forgot\" routerLink=\"/motdepasseoublie\">\n        Mot de passe oublié ?\n      </div>\n    </div>\n\n    <div class=\"action\">\n      <button class=\"btn btn_signin lighter\" (click)=\"login($event)\">\n        <div class=\"loader\" *ngIf=\"loading\"></div>\n        <span *ngIf=\"!loading\">CONNEXION</span>\n      </button>\n    </div>\n\n    <div class=\"register\">\n      Pas encore membre ? <span routerLink=\"/client/inscription\">Inscrivez-vous</span>\n    </div>\n  </form>\n\n  <br><br><br>\n</div>\n","import { EncryptionService } from './../../../services/encryption/encryption.service';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HeaderService } from '../../../services/header/header.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { environment } from 'src/environments/environment';\nimport { loginUser } from '../../../interfaces/login.interface';\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss']\n})\nexport class SigninComponent implements OnInit {\n  loginForm : FormGroup;\n  submitted :boolean =  false;\n  loading: boolean = false;\n  checked :boolean =  false;\n  pseudoStorage : string = null;\n  passStorage : string = null;\n  errorAuth  :boolean = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private encryptionService: EncryptionService,\n    private headerSrv: HeaderService,\n    private authService: AuthService,\n    private router: Router,\n  ) {\n    this.loginForm = this.formBuilder.group({\n      pseudo: ['', Validators.required],\n      password: ['', Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n    this.isRemembered();\n  }\n\n  get form() { return this.loginForm.controls }\n\n  remember(value) {\n    if (value.target.checked) {\n        this.checked = true;\n        localStorage.setItem(\"checklog\", \"true\");\n    } else {\n        this.checked = false;\n        localStorage.setItem(\"checklog\", \"false\");\n    }\n  }\n\n  async isRemember(user: loginUser) {\n    if (this.checked) {\n        const pseudoCrypted = this.encryptionService.encryptUsingAES256(user.pseudo);\n        const passCrypted = this.encryptionService.encryptUsingAES256(user.password);\n        localStorage.setItem(environment.CRYPT_PSEUDO, pseudoCrypted);\n        localStorage.setItem(environment.CRYPT_PASS, passCrypted);\n    } else {\n        localStorage.setItem(environment.CRYPT_PSEUDO, null);\n        localStorage.setItem(environment.CRYPT_PASS, null);\n    }\n  }\n\n  isRemembered() {\n    const pseudoStorage = localStorage.getItem(environment.CRYPT_PSEUDO) ? localStorage.getItem(environment.CRYPT_PSEUDO) : null;\n    const passStorage = localStorage.getItem(environment.CRYPT_PASS) ? localStorage.getItem(environment.CRYPT_PASS) : null;\n\n    if (pseudoStorage && passStorage) {\n      this.pseudoStorage = this.encryptionService.decryptUsingAES256(pseudoStorage);\n      this.passStorage = this.encryptionService.decryptUsingAES256(passStorage);\n\n      this.pseudoStorage = this.pseudoStorage.replace(/['\"]+/g, '');\n      this.passStorage = this.passStorage.replace(/['\"]+/g, '');\n\n      this.loginForm.setValue({\n            pseudo: this.pseudoStorage,\n            password: this.passStorage\n      })\n    }\n\n    if (localStorage.getItem(\"checklog\") === \"true\")\n      $('#checker').prop('checked', true);\n    else\n      $('#checker').prop('checked', false);\n  }\n\n\n  async login(event) {\n    this.submitted = true;\n    event.preventDefault();\n    if (this.loginForm.invalid) {return false;}\n    this.loading = true;\n    let user: loginUser = this.loginForm.value;\n    await this.authService.loginClient(user).subscribe(\n      (res: any) => {\n          // console.log(res);\n          if (res.error) {\n            this.errorAuth = res.message;\n            this.loading = false;\n          } else {\n            this.errorAuth = null;\n            if (res.access_token)\n              this.authService.saveToken(res.access_token, res.id).then(\n                () => {\n                  this.isRemember(user).then(\n                    () => {\n                      this.loading = false;\n                      this.router.navigate(['/client/accueil/registered']);\n                    }\n                  );\n                }\n              );\n          }\n      },\n      (err: any) => {\n          this.loading = false;\n          console.log(err);\n      }\n    );\n\n    return true;\n}\n\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"XhEF\";","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Information } from '../../interfaces/model-information.interface';\nimport { Setting } from '../../interfaces/setting.interface';\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfilService {\n  endpoint = environment.endpoint\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getProfil(): Observable<any> {\n    return this.http.get(`${this.endpoint}/profile`, httpOptions)\n  }\n\n  getSpecificProfil(id: number): Observable<any> {\n    return this.http.get(`${this.endpoint}/profile/${id}`, httpOptions)\n  }\n\n  createProfil(id: number): Observable<any> {\n    return this.http.post(`${this.endpoint}/profile/create/${id}`,{id}, httpOptions)\n  }\n\n  updateProfil(profile: Information) {\n    return this.http.patch(`${this.endpoint}/profile/${profile.id}`, profile, httpOptions)\n  }\n\n  updateStatus(modelId: number, status: string) {\n    const data = {\n      status\n    }\n    return this.http.patch(`${this.endpoint}/profile/${modelId}`, data, httpOptions)\n  }\n\n  getInfo(): Observable<any> {\n    return this.http.get(`${this.endpoint}/setting/info`, httpOptions)\n  }\n\n  getSetting(): Observable<any> {\n    return this.http.get(`${this.endpoint}/setting`, httpOptions)\n  }\n\n  updateSetting(setting: Setting) {\n    return this.http.patch(`${this.endpoint}/setting/${setting.id}`, setting, httpOptions)\n  }\n\n  updateInfo(info: any) {\n    return this.http.patch(`${this.endpoint}/setting/model`, info, httpOptions)\n  }\n\n  createSetting(id: number): Observable<any> {\n    return this.http.post(`${this.endpoint}/setting/create/${id}`,{id}, httpOptions)\n  }\n\n  updatePhoto(formData: FormData): Observable<any> {\n    return this.http.post(`${this.endpoint}/upload/profile`, formData, {\n        reportProgress: true,\n        observe: 'events'\n    });\n  }\n\n  changePassword(data: any): Observable<any> {\n    return this.http.post(`${this.endpoint}/setting/password/`,data, httpOptions)\n  }\n\n  getCredential(): Observable<any> {\n    return this.http.get(`${this.endpoint}/profile/credential`, httpOptions)\n  }\n\n  requestModel(motif: string) {\n    return this.http.post(`${this.endpoint}/profile/request-model`,{motif} , httpOptions)\n  }\n\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { GetModel } from '../../interfaces/get-model.interface';\n\ninterface model {\n  url: string,\n  name: string\n}\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModelService {\n  endpoint = environment.endpoint\n\n\n  live: model [] = [\n    {url: 'assets/images/image3.jpg', name: 'Roddy'},\n    {url: 'assets/images/image2.jpg', name: 'Monica'},\n    {url: 'assets/images/image.png', name: 'Angelina'},\n    {url: 'assets/images/image.png', name: 'Monica'},\n    {url: 'assets/images/image.png', name: 'Angelina'},\n    {url: 'assets/images/image.png', name: 'Angelina'},\n    {url: 'assets/images/image.png', name: 'Angelina'},\n    {url: 'assets/images/image.png', name: 'Angelina'},\n    {url: 'assets/images/image.png', name: 'Angelina'},\n    {url: 'assets/images/image.png', name: 'Angelina'}\n  ];\n\n  chat: model [] = [\n    {url: 'assets/images/image2.jpg', name: 'Monica'},\n    {url: 'assets/images/image2.jpg', name: 'Monica'},\n    {url: 'assets/images/image2.jpg', name: 'Angelina'},\n    {url: 'assets/images/image2.jpg', name: 'Angelina'},\n    {url: 'assets/images/image.png', name: 'Angelina'},\n    {url: 'assets/images/image2.jpg', name: 'Angelina'},\n    {url: 'assets/images/image.png', name: 'Angelina'},\n    {url: 'assets/images/image.png', name: 'Angelina'}\n  ];\n\n  offline: model [] = [\n    {url: 'assets/images/image3.jpg', name: 'Angelina'},\n    {url: 'assets/images/image3.jpg', name: 'Monica'},\n    {url: 'assets/images/image.png', name: 'Angelina'}\n  ];\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getTotalLive() {\n    return this.live.length;\n  }\n\n  getTotalChat() {\n    return this.chat.length;\n  }\n\n  getTotalOffline() {\n    return this.offline.length;\n  }\n\n  getModelProfil(context: string, debut: number, marge: number) {\n    var tmp = [];\n    switch (context) {\n      case 'live':\n      tmp = this.live.slice(debut, debut + marge);\n      break;\n\n      case 'chat':\n        tmp = this.chat.slice(debut, debut + marge);\n        break;\n\n      case 'offline':\n        tmp = this.offline.slice(debut, debut + marge);\n        break;\n\n      default:\n        break;\n    }\n    return tmp;\n  }\n\n  getAll(context: string) {\n    var tmp = [];\n    switch (context) {\n      case 'live':\n        tmp =  [...this.live];\n        break;\n\n      case 'chat':\n        tmp =  [...this.chat];\n        break;\n\n      case 'offline':\n        tmp =  [...this.offline];\n        break;\n\n      default:\n        break;\n    }\n    return tmp;\n  }\n\n  // return live, chat, offline\n  count(): Observable<any> {\n    return this.http.get(`${this.endpoint}/model/total`, httpOptions);\n  }\n\n  // return array Model\n  getList(data: GetModel): Observable<any> {\n    return this.http.post(`${this.endpoint}/model/list`, data, httpOptions)\n  }\n\n  getModel(id: number): Observable<any> {\n    return this.http.get(`${this.endpoint}/model/${id}`, httpOptions);\n  }\n\n  getInfo(): Observable<any> {\n    return this.http.get(`${this.endpoint}/model/info`, httpOptions);\n  }\n\n  getLive(): Observable<any> {\n    return this.http.get(`${this.endpoint}/model/live`, httpOptions);\n  }\n\n  getNoLive(): Observable<any> {\n    return this.http.get(`${this.endpoint}/model/nolive`, httpOptions);\n  }\n\n  forgot(email : string) : Observable<any>{\n    const options = {\n      email : email\n    }\n    return this.http.post(`${this.endpoint}/model/forgot`, options, httpOptions)\n  }\n\n  reinitPassword(userId: number, password: string) : Observable<any>{\n    const options = {\n      id : userId,\n      newPassword: password\n    }\n    return this.http.post(`${this.endpoint}/model/reinitPassword`, options, httpOptions)\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-paiement',\n  templateUrl: './paiement.component.html',\n  styleUrls: ['./paiement.component.scss']\n})\nexport class PaiementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { AuthService } from 'src/app/services/auth/auth.service';\r\nimport { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable, throwError } from \"rxjs\";\r\n\r\nimport { catchError, retry } from \"rxjs/operators\";\r\nimport { Router } from \"@angular/router\";\r\nimport { NotificationService } from '../notification/notification.service';\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor{\r\n\r\n    constructor(\r\n      private authService : AuthService,\r\n      public router : Router,\r\n      private notificationService: NotificationService){\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const token = this.authService.getToken()\r\n        const credentialPay = 'MWMxYjI4ZjItYTg0Yi00YjMwOlZKZXpOWFY5V3o='\r\n        let header = req.headers\r\n\r\n        if ( this.authService.isConnected )\r\n        {\r\n            if (this.authService.paying) {\r\n              req = req.clone({\r\n                setHeaders : {\r\n                    Authorization : 'Basic '+ credentialPay\r\n                }\r\n              });\r\n            } else {\r\n              req = req.clone({\r\n                setHeaders : {\r\n                    Authorization : 'Bearer '+ token\r\n                }\r\n            });\r\n            }\r\n        }\r\n\r\n        return next.handle(req)\r\n        .pipe(\r\n            retry(1),\r\n            catchError((error : HttpErrorResponse)=>{\r\n                // let errorMessage = '';\r\n\r\n                    if(error.error.statusCode == 400){\r\n                      this.notificationService.errorMsg(error.error.message);\r\n                    } else if(error.error.statusCode == 401){\r\n                      // this.notificationService.errorMsg('Accès refusé');\r\n                      this.router.navigateByUrl(\"accueil\")\r\n                    } else {\r\n                      // this.notificationService.errorMsg(\"Erreur lors de la connexion au serveur\");\r\n                      console.log('Erreur lors de la connexion au serveur')\r\n                    }\r\n                //     if(error.status == 500){\r\n                //         // this.router.navigateByUrl(\"connexion\")\r\n                //         // this.dialogService.erreur('500');\r\n                //     }\r\n                //     if (error.error instanceof ErrorEvent) {\r\n                //         // client-side error\r\n                //         errorMessage = `Error: ${error.error.message}`;\r\n                //     }\r\n                    console.log('Erreur interceptor ', error.error);\r\n                    return throwError(error);\r\n            })\r\n        )\r\n\r\n    }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AdminService } from '../../../../../../services/admin/admin.service';\nimport { NotificationService } from '../../../../../../services/notification/notification.service';\n\n@Component({\n  selector: 'app-message-admin',\n  templateUrl: './message-admin.component.html',\n  styleUrls: ['./message-admin.component.scss']\n})\nexport class MessageAdminComponent implements OnInit {\n  error: string = null\n  messageForm : FormGroup;\n\n  constructor(\n    private adminService: AdminService,\n    private notificationService: NotificationService,\n    private formBuilder: FormBuilder\n  ) {\n    this.messageForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      objet: ['', Validators.required],\n      message: ['', Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  sendMail() {\n    this.error = null\n    if (this.messageForm.invalid) {\n      this.error = 'Veuillez compléter les champs'\n      return false;\n    }\n    let message = this.messageForm.value;\n\n      this.adminService.sendMail(message.email, message.objet, message.message).subscribe(\n        (data: any) => {\n          if (data.success) {\n            this.notificationService.info('Message', `Envoyé à ${message.email}`)\n          }\n        }, (error) => {\n          console.log(error)\n        }\n      )\n  }\n\n}\n","\n<app-infobar-admin title=\"Administration\" subTitle=\"Administration\"></app-infobar-admin>\n\n<div class=\"admin_container\">\n  <div class=\"admin_bottom_bar\">\n    MESSAGE\n  </div>\n\n  <div class=\"form_paiement\">\n    <div class=\"title_paiement\">\n      Envoi de Message\n    </div>\n\n    <div class=\"form\" [formGroup]=\"messageForm\">\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input formControlName=\"email\" type=\"email\" class=\"form-control\" name=\"email\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"objet\">Objet</label>\n        <input formControlName=\"objet\" type=\"text\" class=\"form-control\" name=\"objet\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"message\">Message</label>\n        <textarea formControlName=\"message\" class=\"form-control\" name=\"message\"></textarea>\n      </div>\n\n      <div class=\"contain_error\">\n        <p class=\"error\" *ngIf=\"error\">\n          {{error}}\n        </p>\n      </div>\n    </div>\n\n    <div class=\"contain_save\">\n      <button class=\"btn_save\" (click)=\"sendMail()\">\n        Envoyer\n      </button>\n    </div>\n  </div>\n</div>\n","import { AuthService } from './services/auth/auth.service';\nimport { NotificationService } from './services/notification/notification.service';\nimport { EncryptionService } from './services/encryption/encryption.service';\nimport { DisconnectedComponent } from './layouts/header/disconnected/disconnected.component';\nimport { ConnectedComponent } from './layouts/header/connected/connected.component';\nimport { HeaderComponent } from './layouts/header/header.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CUSTOM_ELEMENTS_SCHEMA, LOCALE_ID, NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { EnterComponent } from './components/client/enter/enter.component';\nimport { SignupComponent } from './components/client/signup/signup.component';\nimport { SigninComponent } from './components/client/signin/signin.component';\nimport { HeaderService } from './services/header/header.service';\nimport { DashboardComponent } from './components/modele/dashboard/dashboard.component';\nimport { ProfilComponent } from './components/client/profil/profil.component';\n\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { PasswordComponent } from './components/client/profil/password/password.component';\nimport { DeleteComponent } from './components/client/profil/delete/delete.component';\nimport { GainComponent } from './components/modele/dashboard/gain/gain.component';\nimport { InformationComponent } from './components/modele/dashboard/information/information.component';\nimport { SoldeComponent } from './components/modele/dashboard/solde/solde.component';\nimport { InscriptionModelComponent } from './components/modele/inscription-model/inscription-model.component';\n\nimport { AgChartsAngularModule } from 'ag-charts-angular';\nimport { ConnexionComponent } from './components/modele/dashboard/connexion/connexion.component';\nimport { SettingComponent } from './components/modele/dashboard/setting/setting.component';\nimport { PasswordModeleComponent } from './components/modele/dashboard/password-modele/password-modele.component';\nimport { ForgotPasswordComponent } from './modals/forgot-password/forgot-password.component';\n\nimport {NgxNotificationMsgModule} from 'ngx-notification-msg';\nimport { NotifierModule, NotifierOptions } from 'angular-notifier';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AlbumsComponent } from './components/modele/albums/albums.component';\nimport { ProfilModelComponent } from './components/modele/profil-model/profil-model.component';\nimport { AlbumService } from './services/album/album.service';\n\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { CreditComponent } from './components/modele/dashboard/credit/credit.component';\nimport { PackArgentComponent } from './components/modele/dashboard/credit/pack-argent/pack-argent.component';\nimport { PackBronzeComponent } from './components/modele/dashboard/credit/pack-bronze/pack-bronze.component';\nimport { PackBienvenueComponent } from './components/modele/dashboard/credit/pack-bienvenue/pack-bienvenue.component';\nimport { PackOrComponent } from './components/modele/dashboard/credit/pack-or/pack-or.component';\nimport { HomeClientComponent } from './components/home/home-connected/home-client.component';\nimport { ModelService } from './services/model/model.service';\nimport { HomeLiveComponent } from './components/home/home-disconnected/home-live.component';\nimport { LiveFreeComponent } from './components/live/live-free/live-free.component';\nimport { LivePrivateComponent } from './components/live/live-private/live-private.component';\nimport { LiveVipComponent } from './components/live/live-vip/live-vip.component';\n\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { LivePrivateCamComponent } from './components/live/live-private/live-private-cam/live-private-cam.component';\nimport { TopbarComponent } from './components/live/topbar/topbar.component';\nimport { LiveFreeChatComponent } from './components/live/live-free/live-free-chat/live-free-chat.component';\nimport { LiveVipStatComponent } from './components/live/live-vip/live-vip-stat/live-vip-stat.component';\nimport { OutComponent } from './components/client/out/out.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\n\nimport {NgxLocalStorageModule} from 'ngx-localstorage';\nimport { ScrolltopComponent } from './layouts/scrolltop/scrolltop.component';\nimport { BuyCreditComponent } from './components/client/buy-credit/buy-credit.component';\nimport { ConnectedModelComponent } from './layouts/header/connected-model/connected-model.component';\nimport { ConfirmLogoutComponent } from './modals/confirm-logout/confirm-logout/confirm-logout.component';\nimport { ConnexionModelComponent } from './components/modele/connexion-model/connexion-model.component';\nimport { AuthInterceptor } from './services/auth/auth.interceptor';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { PopupInfoComponent } from './modals/popup-info/popup-info.component';\nimport { PopupService } from './services/popup/popup.service';\nimport { SanitizePipe } from './pipes/sanitize/sanitize.pipe';\nimport { ProfilService } from './services/profil/profil.service';\nimport { LogService } from './services/log/log.service';\nimport { CreditService } from './services/credit/credit.service';\nimport { LiveChatModelComponent } from './components/modele/live-chat-model/live-chat-model.component';\nimport { RoomService } from './services/room/room.service';\nimport { ChatService } from './services/chat/chat.service';\n\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\nimport { LivePrivateModelComponent } from './components/modele/live-private-model/live-private-model.component';\nimport { LiveVipModelComponent } from './components/modele/live-vip-model/live-vip-model.component';\nimport { ClientService } from './services/client/client.service';\nimport { PackModalComponent } from './modals/pack-modal/pack-modal.component';\nimport { TimerService } from './services/timer/timer.service';\nimport { ConfirmEmailComponent } from './components/client/confirm-email/confirm-email.component';\nimport { SendForgotComponent } from './components/forgot/send-forgot/send-forgot.component';\nimport { NewPasswordComponent } from './components/forgot/new-password/new-password.component';\nimport { SendForgotModelComponent } from './components/forgot/send-forgot-model/send-forgot-model.component';\n\nimport { GalleryModule } from 'ng-gallery';\nimport { LightboxModule } from 'ng-gallery/lightbox';\nimport { PopupImageComponent } from './modals/popup-image/popup-image.component';\n\nimport { PickerModule } from '@ctrl/ngx-emoji-mart';\nimport { ReactivateAccountComponent } from './components/client/reactivate-account/reactivate-account.component';\n\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport { PaiementComponent } from './components/paiement/paiement.component';\n\nimport { LazyLoadImageModule } from 'ng-lazyload-image';\nimport { NgPaymentCardModule } from 'ng-payment-card';\nimport { AlbumLiveComponent } from './components/live/album-live/album-live.component';\nimport { DashboardAdminComponent } from './components/admin/connected/dashboard-admin/dashboard-admin.component';\nimport { TopbarAdminComponent } from './components/admin/connected/topbar-admin/topbar-admin.component';\nimport { InfobarAdminComponent } from './components/admin/connected/infobar-admin/infobar-admin.component';\nimport { LeftbarAdminComponent } from './components/admin/connected/leftbar-admin/leftbar-admin.component';\nimport { MainDashboardAdminComponent } from './components/admin/connected/dashboard-admin/main-dashboard-admin/main-dashboard-admin.component';\nimport { MainLeftDashboardAdminComponent } from './components/admin/connected/dashboard-admin/main-dashboard-admin/main-left-dashboard-admin/main-left-dashboard-admin.component';\nimport { MainRightDashboardAdminComponent } from './components/admin/connected/dashboard-admin/main-dashboard-admin/main-right-dashboard-admin/main-right-dashboard-admin.component';\nimport { ListClientsAdminComponent } from './components/admin/connected/dashboard-admin/list-clients-admin/list-clients-admin.component';\nimport { StatistiqueClientsAdminComponent } from './components/admin/connected/dashboard-admin/statistique-clients-admin/statistique-clients-admin.component';\nimport { DemandeClientsAdminComponent } from './components/admin/connected/dashboard-admin/demande-clients-admin/demande-clients-admin.component';\nimport { BloquerClientsAdminComponent } from './components/admin/connected/dashboard-admin/bloquer-clients-admin/bloquer-clients-admin.component';\nimport { ListModelsAdminComponent } from './components/admin/connected/dashboard-admin/model/list-models-admin/list-models-admin.component';\nimport { AskModelsAdminComponent } from './components/admin/connected/dashboard-admin/model/ask-models-admin/ask-models-admin.component';\nimport { BloquerModelsAdminComponent } from './components/admin/connected/dashboard-admin/model/bloquer-models-admin/bloquer-models-admin.component';\nimport { StatistiqueModelsAdminComponent } from './components/admin/connected/dashboard-admin/model/statistique-models-admin/statistique-models-admin.component';\nimport { DetailModelAdminComponent } from './components/admin/connected/dashboard-admin/model/detail-model-admin/detail-model-admin.component';\nimport { PaiementAdminComponent } from './components/admin/connected/dashboard-admin/administration/paiement-admin/paiement-admin.component';\nimport { ConnexionAdminComponent } from './components/admin/connexion-admin/connexion-admin.component';\nimport { ListPaiementAdminComponent } from './components/admin/connected/dashboard-admin/administration/list-paiement-admin/list-paiement-admin.component';\nimport { AdminService } from './services/admin/admin.service';\nimport { MotifRejectComponent } from './components/admin/connected/dashboard-admin/model/detail-model-admin/motif-reject/motif-reject.component';\nimport { MessageAdminComponent } from './components/admin/connected/dashboard-admin/administration/message-admin/message-admin.component';\nimport { SettingAdminComponent } from './components/admin/connected/dashboard-admin/administration/setting-admin/setting-admin.component';\n\nconst config: SocketIoConfig = {\n  // url: 'http://localhost:4000/',\n  url : 'https://143.198.109.141',\n  options: {\n\n  }\n};\n/**\n * Custom angular notifier options\n */\nconst customNotifierOptions: NotifierOptions = {\n  position: {\n\t\thorizontal: {\n\t\t\tposition: 'left',\n\t\t\tdistance: 12\n\t\t},\n\t\tvertical: {\n\t\t\tposition: 'bottom',\n\t\t\tdistance: 12,\n\t\t\tgap: 10\n\t\t}\n\t},\n  theme: 'material',\n  behaviour: {\n    autoHide: 5000,\n    onClick: 'hide',\n    onMouseover: 'pauseAutoHide',\n    showDismissButton: true,\n    stacking: 4\n  },\n  animations: {\n    enabled: true,\n    show: {\n      preset: 'slide',\n      speed: 300,\n      easing: 'ease'\n    },\n    hide: {\n      preset: 'fade',\n      speed: 300,\n      easing: 'ease',\n      offset: 50\n    },\n    shift: {\n      speed: 300,\n      easing: 'ease'\n    },\n    overlap: 150\n  }\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EnterComponent,\n    HeaderComponent,\n    ConnectedComponent,\n    DisconnectedComponent,\n    SignupComponent,\n    SigninComponent,\n    DashboardComponent,\n    ProfilComponent,\n    PasswordComponent,\n    DeleteComponent,\n    GainComponent,\n    InformationComponent,\n    SoldeComponent,\n    InscriptionModelComponent,\n    ConnexionComponent,\n    SettingComponent,\n    PasswordModeleComponent,\n    ForgotPasswordComponent,\n    AlbumsComponent,\n    ProfilModelComponent,\n    CreditComponent,\n    PackArgentComponent,\n    PackBronzeComponent,\n    PackBienvenueComponent,\n    PackOrComponent,\n    HomeClientComponent,\n    HomeLiveComponent,\n    LiveFreeComponent,\n    LivePrivateComponent,\n    LiveVipComponent,\n    LivePrivateCamComponent,\n    TopbarComponent,\n    LiveFreeChatComponent,\n    LiveVipStatComponent,\n    OutComponent,\n    PageNotFoundComponent,\n    ScrolltopComponent,\n    BuyCreditComponent,\n    ConnectedModelComponent,\n    ConfirmLogoutComponent,\n    ConnexionModelComponent,\n    PopupInfoComponent,\n    SanitizePipe,\n    LiveChatModelComponent,\n    LivePrivateModelComponent,\n    LiveVipModelComponent,\n    PackModalComponent,\n    ConfirmEmailComponent,\n    SendForgotComponent,\n    NewPasswordComponent,\n    SendForgotModelComponent,\n    PopupImageComponent,\n    ReactivateAccountComponent,\n    PaiementComponent,\n    AlbumLiveComponent,\n    DashboardAdminComponent,\n    TopbarAdminComponent,\n    InfobarAdminComponent,\n    LeftbarAdminComponent,\n    MainDashboardAdminComponent,\n    MainLeftDashboardAdminComponent,\n    MainRightDashboardAdminComponent,\n    ListClientsAdminComponent,\n    StatistiqueClientsAdminComponent,\n    DemandeClientsAdminComponent,\n    BloquerClientsAdminComponent,\n    ListModelsAdminComponent,\n    AskModelsAdminComponent,\n    BloquerModelsAdminComponent,\n    StatistiqueModelsAdminComponent,\n    DetailModelAdminComponent,\n    PaiementAdminComponent,\n    ConnexionAdminComponent,\n    ListPaiementAdminComponent,\n    MotifRejectComponent,\n    MessageAdminComponent,\n    SettingAdminComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule.withConfig({ warnOnNgModelWithFormControl: \"never\" }),\n    MatSlideToggleModule,\n    MatDialogModule,\n    MatTabsModule,\n    MatSnackBarModule,\n    AgChartsAngularModule,\n    NgxNotificationMsgModule,\n    NotifierModule.withConfig(customNotifierOptions),\n    HttpClientModule,\n    FileUploadModule,\n    SocketIoModule.forRoot(config),\n    NgxLocalStorageModule.forRoot(),\n    GalleryModule,\n    LightboxModule,\n    PickerModule,\n    MatTooltipModule,\n    LazyLoadImageModule,\n    NgPaymentCardModule\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA],\n  entryComponents: [\n    PasswordComponent,\n    DeleteComponent,\n    ConfirmLogoutComponent,\n    PopupInfoComponent,\n    PackModalComponent,\n    PopupImageComponent,\n    MotifRejectComponent\n  ],\n  providers: [\n    HeaderService,\n    EncryptionService,\n    NotificationService,\n    AlbumService,\n    ModelService,\n    AuthService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n    { provide: LOCALE_ID, useValue: \"fr\" },\n    PopupService,\n    ProfilService,\n    LogService,\n    CreditService,\n    RoomService,\n    ChatService,\n    ClientService,\n    TimerService,\n    AdminService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<app-infobar-admin title=\"Clients\" subTitle=\"Clients\"></app-infobar-admin>\n\n<div class=\"admin_container\">\n  <div class=\"admin_bottom_bar\">\n    LISTE DES CLIENTS <span>({{count}} Clients)</span>\n  </div>\n\n  <div class=\"contain_filter_client\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-lg-3\">\n          <div class=\"filter_client\">\n            <p class=\"txt\">Afficher par :</p>\n            <select name=\"filter\" id=\"filter\" (change)=\"select($event)\">\n              <option value=\"tous\">Tous</option>\n              <option value=\"Valide\">Actif</option>\n              <option value=\"Supprime\">Supprimé</option>\n              <option value=\"Desactive\">Desactivé</option>\n              <option value=\"En attente\">Inactif</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"col-lg-3\">\n          <div class=\"pagination_client\">\n            <!-- <div class=\"all\" (click)=\"tout()\">Lister Tout</div> -->\n            <div class=\"list_pagination\">\n              <div class=\"prev_pagination\" *ngIf=\"page > 0\" (click)=\"prevPage()\">\n                &lt;\n              </div>\n              <div\n              *ngFor=\"let item of list_pagination\"\n              (click)=\"selectPage(item)\"\n              >\n              <span class=\"item_pagination\" [ngClass]=\"{'actif': page === item}\"\n              *ngIf=\"item >= thirdlyPage - 3 && item  < thirdlyPage\">{{item + 1}}</span>\n              </div>\n              <div class=\"next_pagination\" *ngIf=\"page < topPage\" (click)=\"nextPage()\">\n                &gt;\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-lg-4\">\n          <div class=\"search_client\">\n            <input type=\"text\" class=\"search_input\" placeholder=\"Rechercher ......\"\n            (keyup)=\"input_search($event)\" [(ngModel)]=\"filter\">\n            <img [src]=\"search\" alt=\"\" class=\"search_icon\">\n          </div>\n        </div>\n        <div class=\"col-lg-2\">\n          <div class=\"other_action_client\">\n            <img [src]=\"four\" alt=\"\" class=\"other_icon_1\">\n            <img [src]=\"other\" alt=\"\" class=\"other_icon_2\">\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"contain_list_client\">\n    <div class=\"contain_header_list\">\n      <div>\n        LISTE DE TOUS LES CLIENTS\n      </div>\n      <div>\n        Total : {{count}}\n      </div>\n    </div>\n    <div>\n      <table class=\"table table-responsive\">\n        <tr class=\"header_table_client\">\n          <td>\n            <input type=\"checkbox\">\n          </td>\n          <td>Pseudo</td>\n          <td>Adresse email</td>\n          <td>Inscrit le</td>\n          <td>Etat</td>\n          <td>Actions</td>\n        </tr>\n        <tr *ngFor=\"let client of clients\" class=\"list_table\">\n          <td>\n            <input type=\"checkbox\">\n          </td>\n          <td>{{client.pseudo}}</td>\n          <td>{{client.email}}</td>\n          <td>{{client.createdAt}}</td>\n          <td>\n            <span *ngIf=\"client.state === 'En attente'\">En attente</span>\n            <span *ngIf=\"client.state === 'Supprime'\">Supprimé</span>\n            <span *ngIf=\"client.state === 'Desactive'\">Desactivé</span>\n            <span *ngIf=\"client.state === 'Refuse'\">Refusé</span>\n            <span *ngIf=\"client.state === 'Valide'\">Validé</span>\n          </td>\n          <td class=\"list_action\">\n            <img [src]=\"bloqued\" alt=\"\" (click)=\"blockClient(client.id)\">\n            <img [src]=\"deactivate\" alt=\"\" (click)=\"deactivateClient(client.id)\" *ngIf=\"client.state !== 'Desactive'\">\n            <img [src]=\"activate\" alt=\"\" (click)=\"activateClient(client.id)\" *ngIf=\"client.state === 'Desactive'\">\n            <img [src]=\"delete\" alt=\"\" (click)=\"deleteClient(client.id)\">\n          </td>\n        </tr>\n      </table>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from '../../../../../services/admin/admin.service';\nimport { NotificationService } from '../../../../../services/notification/notification.service';\n\n@Component({\n  selector: 'app-list-clients-admin',\n  templateUrl: './list-clients-admin.component.html',\n  styleUrls: ['./list-clients-admin.component.scss']\n})\nexport class ListClientsAdminComponent implements OnInit {\n  icon = './../../../../../../assets/icons/paper-clip.svg'\n\n  search = './../../../../../../assets/icons/admin-icons/search.png'\n  four = './../../../../../../assets/icons/admin-icons/menu_four.png'\n  other = './../../../../../../assets/icons/admin-icons/menu.png'\n\n  deactivate = './../../../../../../assets/icons/admin-icons/deactivate.png'\n  activate = './../../../../../../assets/icons/admin-icons/activate.png'\n  delete = './../../../../../../assets/icons/admin-icons/delete.png'\n  bloqued = './../../../../../../assets/icons/admin-icons/bloquer.png'\n  debloquer = './../../../../../../assets/icons/admin-icons/debloquer.png'\n\n  clients = []\n\n  count: number  = 0\n  range: number = 10\n  filter: string = ''\n  selected: string = 'tous'\n\n  page: number  = 0\n  topPage: number = 0\n  thirdlyPage: number = 3\n  list_pagination: number[] = []\n  constructor(\n    public adminService: AdminService,\n    private notificationService: NotificationService\n  ) { }\n\n  ngOnInit(): void {\n    this.countClient()\n    this.listClients()\n  }\n\n  initPagination() {\n    this.list_pagination = []\n    let res = this.count / this.range\n    res = Math.floor(res)\n    this.topPage = res\n    for (let i = 0; i <= res; i++) {\n      this.list_pagination.push(i)\n    }\n  }\n\n  countClient() {\n    this.adminService.countClients(this.selected).subscribe(\n      (data) => {\n        this.count = data.count\n        this.initPagination()\n      }\n    )\n  }\n\n  listClients() {\n    this.adminService.getClients(this.selected, this.range, this.page, this.filter).subscribe(\n      (data) => {\n        // console.log(data)\n        this.clients = data\n        this.clients.forEach( (client) => {\n          client.createdAt = this.adminService.formatDate(client.createdAt)\n        })\n        this.count = this.clients.length\n        this.initPagination()\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  select(event) {\n    const value = event.target.value;\n    this.selected = value\n    this.listClients()\n  }\n\n  input_search(event) {\n    this.listClients()\n  }\n\n  selectPage(page: number) {\n    this.page = page\n    this.listClients()\n  }\n\n  nextPage() {\n    this.page += 1\n    this.thirdlyPage += 3\n    this.listClients()\n  }\n\n  prevPage() {\n    this.page -= 1\n    this.thirdlyPage -= 3\n    if (this.thirdlyPage < 0) this.thirdlyPage = 0\n    this.listClients()\n  }\n\n  tout() {\n    this.page = 0\n    this.range = this.count\n    this.listClients()\n  }\n\n  deleteClient(idClient: number) {\n    this.adminService.deleteClient(idClient).subscribe(\n      (data: any) => {\n        if (data.success) this.listClients()\n        else if (data.error) this.notificationService.errorMsg(data.message)\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  blockClient(idClient: number) {\n    const data = {\n      idClient,\n      reverse: false\n    }\n    this.adminService.blockClient(data).subscribe(\n      (data: any) => {\n        if (data.success) this.listClients()\n        else if (data.error) this.notificationService.errorMsg(data.message)\n      }, (error) => {\n        console.log(error);\n      }\n    )\n  }\n\n  deactivateClient(idClient: number) {\n    this.adminService.deactivateClient(idClient).subscribe(\n      (data: any) => {\n        if (data.success) this.listClients()\n        else if (data.error) this.notificationService.errorMsg(data.message)\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  activateClient(idClient: number) {\n    this.adminService.activateClient(idClient).subscribe(\n      (data: any) => {\n        if (data.success) this.listClients()\n        else if (data.error) this.notificationService.errorMsg(data.message)\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { LocalStorageService } from 'ngx-localstorage';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n  endpoint = environment.endpoint\n\n  constructor(\n    private http: HttpClient,\n    private store: LocalStorageService\n  ) { }\n\n  getMyInfos(): Observable<any> {\n    return this.http.get(`${this.endpoint}/client`, httpOptions)\n  }\n\n  getClient(id: number): Observable<any> {\n    return this.http.get(`${this.endpoint}/client/${id}`, httpOptions)\n  }\n\n  getCredit(): Observable<any> {\n    return this.http.get(`${this.endpoint}/credit/client`, httpOptions)\n  }\n\n  forgot(email : string) : Observable<any>{\n    const options = {\n      email : email\n    }\n    return this.http.post(`${this.endpoint}/client/forgot`, options, httpOptions)\n  }\n\n  reinitPassword(userId: number, password: string) : Observable<any>{\n    const options = {\n      id : userId,\n      newPassword: password\n    }\n    return this.http.post(`${this.endpoint}/client/reinitPassword`, options, httpOptions)\n  }\n\n  lastRoom(linkRoom?: string) {\n    if (linkRoom === null) return this.store.remove('lastRoom');\n    if (linkRoom)\n      this.store.set(\"lastRoom\", linkRoom);\n    return this.store.get(\"lastRoom\");\n  }\n\n  changePseudo(pseudo: string) {\n    const data = {\n      pseudo\n    }\n    return this.http.post(`${this.endpoint}/client/changePseudo`, data, httpOptions)\n  }\n\n  changePassword(oldPassword: string, newPassword: string) {\n    const data = {\n      oldPassword,\n      newPassword\n    }\n    return this.http.post(`${this.endpoint}/client/changePassword`, data, httpOptions)\n  }\n\n  deleteAccount(password: string) {\n    const data = {\n      password\n    }\n    return this.http.post(`${this.endpoint}/client/deleteAccount`, data, httpOptions)\n  }\n\n  deactivateAccount(password: string) {\n    const data = {\n      password\n    }\n    return this.http.post(`${this.endpoint}/client/deactivateAccount`, data, httpOptions)\n  }\n\n  reactivateAccount() {\n    return this.http.post(`${this.endpoint}/client/reactivateAccount`, {}, httpOptions)\n  }\n\n  restoreAccount() {\n    return this.http.post(`${this.endpoint}/client/restoreAccount`, {}, httpOptions)\n  }\n}\n","<div class=\"contain_pass\">\n  <!-- <h2 mat-dialog-title>Confirmation</h2> -->\n  <mat-dialog-content>\n    <div class=\"content_text\">\n      <div class=\"img\">\n        <img [src]=\"exclamation\" alt=\"\" style=\"max-width: 100%;\">\n      </div>\n      <div class=\"text_warning\">\n        Motif du rejet :\n      </div>\n    </div>\n    <form>\n      <label for=\"motif\">\n        <img [src]=\"exclamation\" alt=\"\" *ngIf=\"empty\" id=\"imgAlert\">\n      </label>\n      <input type=\"text\" name=\"motif\" class=\"form-control input\" [(ngModel)]=\"motif\">\n      <p class=\"error\" *ngIf=\"empty\">Veuillez préciser</p>\n    </form>\n  </mat-dialog-content>\n\n  <mat-dialog-actions>\n    <button class=\"btn_cancel\" mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Annuler</button>\n    <button class=\"btn_valid\" (click)=\"validate()\">Confirmer</button>\n  </mat-dialog-actions>\n</div>\n\n","import {Component, Inject, OnInit} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DeleteComponent } from 'src/app/components/client/profil/delete/delete.component';\nimport { AdminService } from '../../../../../../../services/admin/admin.service';\n\n@Component({\n  selector: 'app-motif-reject',\n  templateUrl: './motif-reject.component.html',\n  styleUrls: ['./motif-reject.component.scss']\n})\nexport class MotifRejectComponent implements OnInit {\n  action: any;\n  exclamation = \"./../../../../../../../../assets/icons/chat-comment.svg\";\n  motif: string = \"\";\n  error: boolean = false;\n  empty: boolean = false;\n  constructor(\n    public dialogRef: MatDialogRef<DeleteComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private adminService: AdminService) {\n\n    }\n\n  onNoClick(): void {\n    this.dialogRef.close(0);\n  }\n\n  ngOnInit(): void {\n    // console.log(this.action);\n  }\n\n  async validate(): Promise<void> {\n    this.empty = false;\n    this.error = false;\n    if (this.motif == \"\") {\n        this.empty = true;\n        return null;\n    }\n    this.dialogRef.close(this.motif)\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n\n  constructor(private _sanitizer: DomSanitizer){}\n\n  transform(text: string) : SafeHtml {\n     return this._sanitizer.bypassSecurityTrustHtml(text);\n  }\n\n}\n","import { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { LocalStorageService } from 'ngx-localstorage';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoomPrivateService {\n  endpoint = environment.endpoint\n\n  constructor(\n    private http: HttpClient,\n    private store: LocalStorageService\n  ) { }\n\n  getColor(): Observable<any> {\n    return this.http.get(`${this.endpoint}/room-private/color`, httpOptions)\n  }\n\n  createRoom(): Observable<any> {\n    return this.http.post(`${this.endpoint}/room-private`,{}, httpOptions)\n  }\n\n  getRoomModel(id: number): Observable<any> {\n    return this.http.get(`${this.endpoint}/room-private/model/${id}`, httpOptions)\n  }\n\n  getInfo(id: number): Observable<any> {\n    return this.http.get(`${this.endpoint}/room-private/client/${id}`, httpOptions)\n  }\n\n  getActif(id: number): Observable<any> {\n    return this.http.get(`${this.endpoint}/room-private/${id}`, httpOptions)\n  }\n\n  joinRoom(idRoom: number) {\n    this.store.set(\"privateRoom\", idRoom);\n  }\n\n  joinedRoom(idRoom: number) {\n    const room = this.store.get(\"privateRoom\");\n    return room === idRoom;\n  }\n\n  leaveRoom() {\n    this.store.remove(\"privateRoom\");\n  }\n\n  updateActif(roomId: number, joined: boolean, type_room: string, peerId: string = null): Observable<any> {\n    const data = {\n      roomId,\n      joined,\n      type_room,\n      peerId\n    }\n    // console.log(\"Update actif \", data);\n    return this.http.post(`${this.endpoint}/actif-room-private`, data, httpOptions)\n  }\n\n  getGain(modelId: number): Observable<any> {\n    return this.http.get(`${this.endpoint}/room-private/gain/${modelId}`, httpOptions)\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PopupInfoComponent } from '../../modals/popup-info/popup-info.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PopupService {\n\n  constructor(\n    private dialog: MatDialog\n  ) { }\n\n  info(action: string, title: string, message: string) {\n    this.dialog.open(PopupInfoComponent, {\n      width: '50vh',\n      data: {action, title, message}\n    });\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { SlideInOutAnimation } from 'src/app/animation';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ConfirmLogoutComponent } from 'src/app/modals/confirm-logout/confirm-logout/confirm-logout.component';\r\nimport { ClientService } from '../../../services/client/client.service';\r\nimport { NotificationService } from '../../../services/notification/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-connected',\r\n  templateUrl: './connected.component.html',\r\n  styleUrls: ['./connected.component.scss'],\r\n  animations: [SlideInOutAnimation]\r\n})\r\nexport class ConnectedComponent implements OnInit {\r\n  animationState = 'out';\r\n  chat = \"assets/icons/chat-comment.svg\";\r\n  settings = \"assets/icons/settings.svg\";\r\n\r\n  @Input()\r\n  actif: string;\r\n  active: number = 0;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private dialog: MatDialog,\r\n    private clientService: ClientService,\r\n    private notificationService: NotificationService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.actif) this.active = parseInt(this.actif);\r\n  }\r\n\r\n  toggleShowDiv(divName: string) {\r\n    if (divName === 'contain_connected') {\r\n      console.log(this.animationState);\r\n      this.animationState = this.animationState === 'out' ? 'in' : 'out';\r\n      console.log(this.animationState);\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    const dialogRef = this.dialog.open(ConfirmLogoutComponent, {\r\n      width: '50vh',\r\n      data: {action: 'client'}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {});\r\n  }\r\n\r\n  lastChat() {\r\n    const lastRoom = this.clientService.lastRoom();\r\n    if (!lastRoom) {\r\n      this.notificationService.infoMsg(\"Aucun récent Chat\");\r\n      return null;\r\n    }\r\n    // console.log(lastRoom);\r\n    this.router.navigateByUrl(lastRoom);\r\n  }\r\n}\r\n","\n<div class=\"bars\">\n  <img [src]=\"chat\" alt=\"\" class=\"icon\">\n  <img [src]=\"settings\" alt=\"\" class=\"icon\">\n  <i class=\"fa fa-bars\" (click)=\"toggleShowDiv('contain_connected')\"></i>\n</div>\n\n<div class=\"contain_connected\" [@slideInOut]=\"animationState\">\n  <div class=\"list one\" [ngClass]=\"{'active': active == 1}\" routerLink=\"/client/accueil/registered\">\n    Tous les modèles\n    <span></span>\n  </div>\n  <div class=\"list two\" routerLink=\"/client/achat_de_credit\" [ngClass]=\"{'active': active == 2}\">\n    Acheter des crédits\n    <span></span>\n  </div>\n  <div class=\"list three\" [ngClass]=\"{'active': active == 3}\" (click)=\"lastChat()\">\n    <img [src]=\"chat\" alt=\"\" class=\"icon\">\n    <span></span>\n  </div>\n  <div class=\"list four\" routerLink=\"/client/profile\" [ngClass]=\"{'active': active == 4}\">\n    <img [src]=\"settings\" alt=\"\" class=\"icon\">\n    <span></span>\n  </div>\n  <div class=\"list five\" (click)=\"logout()\" [ngClass]=\"{'active': active == 5}\">\n    Déconnexion\n    <span></span>\n  </div>\n</div>\n","import { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Chat } from '../../interfaces/chat.interface';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n  endpoint = environment.endpoint\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  postMessage(message: Chat): Observable<any> {\n    return this.http.post(`${this.endpoint}/chat`, message, httpOptions)\n  }\n\n  getMessage(idRoom: number, type_chat: string = 'free'): Observable<any> {\n    let room = idRoom;\n    if (room === null) room = 0;\n    return this.http.get(`${this.endpoint}/chat/${type_chat}/${room}`, httpOptions)\n  }\n}\n","import { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { LocalStorageService } from 'ngx-localstorage';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoomService {\n  endpoint = environment.endpoint\n\n  constructor(\n    private http: HttpClient,\n    private store: LocalStorageService\n  ) { }\n\n  getColor(): Observable<any> {\n    return this.http.get(`${this.endpoint}/room/color`, httpOptions)\n  }\n\n  createRoom(): Observable<any> {\n    return this.http.post(`${this.endpoint}/room`,{}, httpOptions)\n  }\n\n  getRoomModel(id: number): Observable<any> {\n    return this.http.get(`${this.endpoint}/room/model/${id}`, httpOptions)\n  }\n\n  getInfo(id: number): Observable<any> {\n    return this.http.get(`${this.endpoint}/room/client/${id}`, httpOptions)\n  }\n\n  async getActif(id: number): Promise<number> {\n    let actif = 0;\n    await this.http.get(`${this.endpoint}/room/${id}`, httpOptions).subscribe(\n      (data: any) => {\n        if (data.actif) {\n          actif =  data.actif\n        }\n      }\n    );\n    return actif;\n  }\n\n  joinRoom() {\n    this.store.set(\"freeRoom\", true);\n  }\n\n  joinedRoom() {\n    return this.store.get(\"freeRoom\") ? true : false;\n  }\n\n  leaveRoom() {\n    this.store.remove(\"freeRoom\");\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pack-bronze',\n  templateUrl: './pack-bronze.component.html',\n  styleUrls: ['./pack-bronze.component.scss']\n})\nexport class PackBronzeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>pack-bronze works!</p>\n","<app-infobar-admin title=\"Administration\" subTitle=\"Administration\"></app-infobar-admin>\n\n<div class=\"admin_container\">\n  <div class=\"admin_bottom_bar\">\n    PAYEMENT\n  </div>\n\n  <div class=\"contain_filter_client\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-lg-3\">\n          <div class=\"filter_client\">\n            <p class=\"txt\">Afficher par :</p>\n            <select name=\"filter\" id=\"filter\" (change)=\"select($event)\">\n              <option value=\"tous\">Tous</option>\n              <option value=\"in\">Entrant</option>\n              <option value=\"out\">Sortant</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"col-lg-3\">\n          <div class=\"pagination_client\">\n            <!-- <div class=\"all\" (click)=\"tout()\">Lister Tout</div> -->\n            <div class=\"list_pagination\">\n              <div class=\"prev_pagination\" *ngIf=\"page > 0\" (click)=\"prevPage()\">\n                &lt;\n              </div>\n              <div\n              *ngFor=\"let item of list_pagination\"\n              (click)=\"selectPage(item)\"\n              >\n              <span class=\"item_pagination\" [ngClass]=\"{'actif': page === item}\"\n              *ngIf=\"item >= thirdlyPage - 3 && item  < thirdlyPage\">{{item + 1}}</span>\n              </div>\n              <div class=\"next_pagination\" *ngIf=\"page < topPage\" (click)=\"nextPage()\">\n                &gt;\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-lg-4\">\n          <div class=\"search_client\">\n            <input type=\"text\" class=\"search_input\" placeholder=\"Rechercher ......\"\n            (keyup)=\"input_search($event)\" [(ngModel)]=\"filter\">\n            <img [src]=\"search\" alt=\"\" class=\"search_icon\">\n          </div>\n        </div>\n        <div class=\"col-lg-2\">\n          <div class=\"other_action_client\">\n            <img [src]=\"four\" alt=\"\" class=\"other_icon_1\">\n            <img [src]=\"other\" alt=\"\" class=\"other_icon_2\" (click)=\"newPay()\">\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"contain_list_client\">\n    <div class=\"contain_header_list\">\n      <div>\n        PAYEMENT EFFECTUE\n      </div>\n      <div>\n        Total : {{count}}\n      </div>\n    </div>\n    <div>\n      <table class=\"table table-responsive\">\n        <tr class=\"header_table_client\">\n          <td>\n            <input type=\"checkbox\">\n          </td>\n          <td>Pseudo</td>\n          <td>Adresse email</td>\n          <td>Date</td>\n          <td>Crédit</td>\n          <td>Montant</td>\n        </tr>\n        <tr *ngFor=\"let pay of paiements\" class=\"list_table\">\n          <td>\n            <input type=\"checkbox\">\n          </td>\n          <td>{{pay.pseudo}}</td>\n          <td>{{pay.email}}</td>\n          <td>{{pay.createdAt}}</td>\n          <td>{{pay.credit}}</td>\n          <td>{{pay.montant}}</td>\n          <td class=\"list_action\">\n          </td>\n        </tr>\n      </table>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/services/admin/admin.service';\nimport { NotificationService } from 'src/app/services/notification/notification.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-list-paiement-admin',\n  templateUrl: './list-paiement-admin.component.html',\n  styleUrls: ['./list-paiement-admin.component.scss']\n})\nexport class ListPaiementAdminComponent implements OnInit {\n  icon = './../../../../../../../assets/icons/paper-clip.svg'\n\n  search = './../../../../../../../assets/icons/admin-icons/search.png'\n  four = './../../../../../../../assets/icons/admin-icons/menu_four.png'\n  other = './../../../../../../../assets/icons/admin-icons/menu.png'\n\n  deactivate = './../../../../../../../assets/icons/admin-icons/deactivate.png'\n  activate = './../../../../../../../assets/icons/admin-icons/activate.png'\n  delete = './../../../../../../../assets/icons/admin-icons/delete.png'\n  bloqued = './../../../../../../../assets/icons/admin-icons/bloquer.png'\n  debloquer = './../../../../../../../assets/icons/admin-icons/debloquer.png'\n\n  paiements = []\n\n  count: number  = 0\n  range: number = 10\n  filter: string = ''\n  selected: string = 'tous'\n\n  page: number  = 0\n  topPage: number = 0\n  thirdlyPage: number = 3\n  list_pagination: number[] = []\n  constructor(\n    public adminService: AdminService,\n    private notificationService: NotificationService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.countPay()\n    this.listPay()\n  }\n\n  initPagination() {\n    this.list_pagination = []\n    let res = this.count / this.range\n    res = Math.floor(res)\n    this.topPage = res\n    for (let i = 0; i <= res; i++) {\n      this.list_pagination.push(i)\n    }\n  }\n\n  countPay() {\n    this.adminService.countPay().subscribe(\n      (data: any) => {\n        this.count = data ? data : 0\n        this.initPagination()\n      }\n    )\n  }\n\n  listPay() {\n    this.adminService.getListPaiement(this.selected, this.range, this.page, this.filter).subscribe(\n      (data: any) => {\n        // console.log(data)\n        this.paiements = data\n        this.paiements.forEach( (client) => {\n          client.createdAt = this.adminService.formatDate(client.createdAt)\n          client.montant = client.montant + ' Eur'\n        })\n        this.count = this.paiements.length\n        this.initPagination()\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  select(event) {\n    const value = event.target.value;\n    this.selected = value\n    this.listPay()\n  }\n\n  input_search(event) {\n    this.listPay()\n  }\n\n  selectPage(page: number) {\n    this.page = page\n    this.listPay()\n  }\n\n  nextPage() {\n    this.page += 1\n    this.thirdlyPage += 3\n    this.listPay()\n  }\n\n  prevPage() {\n    this.page -= 1\n    this.thirdlyPage -= 3\n    if (this.thirdlyPage < 0) this.thirdlyPage = 0\n    this.listPay()\n  }\n\n  tout() {\n    this.page = 0\n    this.range = this.count\n    this.listPay()\n  }\n\n  deletePay(idPay: number) {\n    this.adminService.deletePaiement(idPay).subscribe(\n      (data: any) => {\n        if (data.success) this.listPay()\n        else if (data.error) this.notificationService.errorMsg(data.message)\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  newPay() {\n    this.router.navigate(['/admin/paiement'])\n  }\n\n}\n","<app-header actif=\"3\"></app-header>\n\n\n<div class=\"contain_signup_one\">\n  <div class=\"inside_sign part_one\">\n    <h2>INSCRIPTION</h2>\n    <p>CLIENT</p>\n    <div class=\"blank\"></div>\n  </div>\n</div>\n\n<div class=\"contain_signup_two inside_sign\">\n  <h2 class=\"title\">\n    Créer un compte <br>\n    Inscription gratuite\n  </h2>\n\n  <div class=\"descr\">\n      ENTRER DANS L'AVENTURE <span class=\"under\"> BETWEEN<span class=\"under_bold\">US</span>.LIVE</span> <br>\n      Un site français, moderne et innovant. <br>\n      Une plateforme unique et 100% live. <br>\n      Nos valeurs: respect et écoute des modèles et des abonnées. <br>\n      Votre fidelité recompensée.\n  </div>\n\n  <form class=\"form\" [formGroup]=\"signForm\" novalidate autocomplete=\"off\">\n    <div class=\"form-group\">\n      <label for=\"pseudo\">Pseudo *</label>\n      <input type=\"text\" formControlName=\"pseudo\" name=\"pseudo\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.pseudo.errors\">\n        <small *ngIf=\"form.pseudo.errors.required\" class=\"form-text error-text\">Pseudo requis</small>\n      </div>\n      <div *ngIf=\"pseudoExist\">\n        <small class=\"form-text error-text\">Pseudo existe déjà</small>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"email\">Email *</label>\n      <input type=\"text\" formControlName=\"email\" name=\"email\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.email.errors\">\n        <small *ngIf=\"form.email.errors.required\" class=\"form-text error-text \">\n          Adresse email requis\n        </small>\n        <small *ngIf=\"form.email.errors.email\" class=\"form-text error-text \">\n          Format invalide\n        </small>\n      </div>\n      <div *ngIf=\"emailExist\">\n        <small class=\"form-text error-text \">\n          Email déjà utilisé\n        </small>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"password\">Mot de passe *</label>\n      <input type=\"password\" formControlName=\"password\" name=\"password\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.password.errors\">\n        <small *ngIf=\"form.password.errors.required\" class=\"form-text error-text\">\n          Mot de passe requis\n        </small>\n        <small *ngIf=\"form.password.errors.pattern\" class=\"form-text error-text\">\n          Au moins 8 caractères, lettre majuscule et  minuscule,\n          un chiffre et/ou un caractère spécial.\n        </small>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"passwordConfirm\">Confirmer mot de passe *</label>\n      <input type=\"password\" formControlName=\"passwordConfirm\" name=\"passwordConfirm\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.passwordConfirm.errors\">\n        <small *ngIf=\"form.passwordConfirm.errors.required\" class=\"form-text error-text \">\n          Confirmation mot de passe requis\n        </small>\n        <small *ngIf=\"form.passwordConfirm.errors.mustMatch\" class=\"form-text error-text \">\n          Mot de passe ne correspond pas\n        </small>\n      </div>\n    </div>\n\n    <!-- <div>\n      <small *ngIf=\"error !== null\" class=\"form-text error-text\">\n        {{error}}\n      </small>\n    </div> -->\n\n\n    <div class=\"notif\">\n      * Champ obligatoire\n    </div>\n\n    <div class=\"action\">\n      <button class=\"btn btn_signup lighter\" (click)=\"register($event)\">\n        <div class=\"loader\" *ngIf=\"loading\"></div>\n        <span *ngIf=\"!loading\"> S'INSCRIRE</span>\n      </button>\n    </div>\n  </form>\n\n\n</div>\n","import { AuthService } from './../../../services/auth/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PopupService } from '../../../services/popup/popup.service';\nimport { registerClient } from 'src/app/interfaces/register.interface';\nimport { CreditService } from '../../../services/credit/credit.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n  signForm : FormGroup;\n  submitted :boolean =  false;\n  loading: boolean = false;\n\n  error: string = null;\n  emailExist: boolean = false;\n  pseudoExist: boolean = false;\n\n  constructor(\n    private formBuilder : FormBuilder,\n    private authService: AuthService,\n    private popupService: PopupService,\n    private creditService: CreditService\n  ) {\n    this.signForm = this.formBuilder.group({\n      pseudo : ['', Validators.required],\n      email : ['',[Validators.required, Validators.email]],\n      // password : ['',[Validators.required, Validators.pattern(/^(?=\\D*\\d)(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z]).{8,}$/)]],\n      password : ['', Validators.required],\n      passwordConfirm: ['',Validators.required],\n    },{\n      validators : this.mustMatch('password','passwordConfirm'),\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  get form() {return this.signForm.controls}\n\n  mustMatch = (controlName : string, matchControlName : string) => {\n    return (formGroup: FormGroup) => {\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchControlName];\n\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n          return;\n      }\n      if (control.value !== matchingControl.value) {\n          matchingControl.setErrors({ mustMatch: true });\n      } else {\n          matchingControl.setErrors(null);\n      }\n  }\n  }\n\n  async register(event) {\n    this.pseudoExist = false;\n    this.emailExist = false;\n    this.error = null;\n    this.submitted = true;\n    event.preventDefault();\n\n    if(this.signForm.invalid){\n      return false;\n    }\n    this.loading = true;\n    let user: registerClient = this.signForm.value;\n    await this.authService.registerClient(user).subscribe(\n      (res: any) => {\n          // console.log(res);\n          if (res.error) {\n            this.error = res.message;\n            if (res.pseudo) this.pseudoExist = true;\n            if (res.email) this.emailExist = true;\n            this.loading = false;\n          } else {\n            this.creditService.createCreditClient(res.id).subscribe(\n              (data) => {\n                this.submitted = false;\n                this.popupService.info('client','Félicitation',\n                `Un email de confirmation est envoyé à\n                <span style=\"font-style: italic; color: var(--pink)\">${res.email}</span>. <br>\n                <small>Veuillez vérifier dans vos spams</small>`);\n                this.signForm.reset();\n                this.loading = false;\n              }\n            )\n          }\n      },\n      (err: any) => {\n          this.loading = false;\n          console.log(err);\n      }\n    );\n    return true;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmLogoutComponent } from 'src/app/modals/confirm-logout/confirm-logout/confirm-logout.component';\n\n@Component({\n  selector: 'app-leftbar-admin',\n  templateUrl: './leftbar-admin.component.html',\n  styleUrls: ['./leftbar-admin.component.scss']\n})\nexport class LeftbarAdminComponent implements OnInit {\n  icon = './../../../../../assets/icons/paper-clip.svg'\n  logout = './../../../../../assets/icons/admin-icons/logout.png'\n  dashboard = './../../../../../assets/icons/admin-icons/dashboard.png'\n  menu = [\n    {\n      title: 'client',\n      under : [\n        {\n          label : 'Liste des clients',\n          icon : './../../../../../assets/icons/admin-icons/list.png',\n          route : '/les-clients'\n        },\n        {\n          label : 'Clients bloqués',\n          icon : './../../../../../assets/icons/admin-icons/user_block.png',\n          route : '/les-clients-bloques'\n        },\n        // {\n        //   label : 'Demandes',\n        //   icon : './../../../../../assets/icons/admin-icons/ask2.png',\n        //   route : '/les-demandes-clients'\n        // },\n        {\n          label : 'Statistiques',\n          icon : './../../../../../assets/icons/admin-icons/statistique.png',\n          route : '/clients-statistiques'\n        }\n      ]\n    },\n    {\n      title: 'modèles',\n      under : [\n        {\n          label : 'Liste des modèles',\n          icon : './../../../../../assets/icons/admin-icons/list.png',\n          route : '/les-modeles'\n        },\n        {\n          label : 'Modèles bloqués',\n          icon : './../../../../../assets/icons/admin-icons/user_block.png',\n          route : '/les-modeles-bloques'\n        },\n        {\n          label : 'Demandes',\n          icon : './../../../../../assets/icons/admin-icons/ask2.png',\n          route : '/les-demandes-modeles'\n        },\n        {\n          label : 'Statistiques',\n          icon : './../../../../../assets/icons/admin-icons/statistique.png',\n          route : '/modeles-statistiques'\n        }\n      ]\n    },\n    {\n      title: 'administration',\n      under : [\n        {\n          label : 'Paramètres',\n          icon : './../../../../../assets/icons/admin-icons/settings.png',\n          route : '/setting-admin'\n        },\n        {\n          label : 'Message',\n          icon : './../../../../../assets/icons/admin-icons/messenger.png',\n          route : '/message-admin'\n        },\n        {\n          label : 'Payements',\n          icon : './../../../../../assets/icons/admin-icons/payement.png',\n          route : '/list-paiement'\n        }\n      ]\n    }\n  ]\n\n\n  constructor(\n    private router: Router,\n    private dialog: MatDialog\n    ) { }\n\n  ngOnInit(): void {\n  }\n\n  navigate(route) {\n    this.router.navigate(['/admin' + route]);\n  }\n\n  out() {\n    const dialogRef = this.dialog.open(ConfirmLogoutComponent, {\n      width: '50vh',\n      data: {action: 'admin'}\n    });\n    dialogRef.afterClosed().subscribe(result => {});\n  }\n\n}\n","<div class=\"main_leftbar\">\n  <div class=\"title_leftbar\">\n    BETWEEN<span>US</span>\n  </div>\n\n  <div class=\"contain_leftbar top_dashboard\">\n    <div class=\"icon_left\">\n      <img [src]=\"dashboard\" alt=\"\" class=\"img_icon\">\n    </div>\n    <div class=\"label_left\" (click)=\"navigate('/dashboard')\">\n      Tableau de bord\n    </div>\n  </div>\n\n  <div class=\"menu_left\" *ngFor=\"let item of menu\">\n    <div class=\"title_menu\">\n      {{item.title}}\n    </div>\n    <div class=\"contain_leftbar\" *ngFor=\"let mini of item.under\">\n      <div class=\"icon_left\">\n        <img [src]=\"mini.icon\" alt=\"\" class=\"img_icon\">\n      </div>\n      <div class=\"label_left\" (click)=\"navigate(mini.route)\">\n        {{mini.label}}\n      </div>\n    </div>\n  </div>\n\n  <div class=\"bottom_menu\">\n    <div class=\"contain_leftbar\">\n      <div class=\"icon_left\">\n        <img [src]=\"logout\" alt=\"\" class=\"img_icon\">\n      </div>\n      <div class=\"label_left\" (click)=\"out()\">\n        Se déconnecter\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { cloneDeep } from 'lodash';\nimport { AdminService } from '../../../../../services/admin/admin.service';\n\n@Component({\n  selector: 'app-statistique-clients-admin',\n  templateUrl: './statistique-clients-admin.component.html',\n  styleUrls: ['./statistique-clients-admin.component.scss']\n})\nexport class StatistiqueClientsAdminComponent implements OnInit {\n  years : number[] = []\n\n  options: any;\n  updating: boolean = false;\n  inscriptions = []\n  original = []\n  currentYear: number = new Date().getFullYear()\n  currentMonth: string = '01'\n\n  isIntegral: boolean = false\n\n  constructor(\n    private adminService: AdminService\n  ) {\n    this.options = {\n      autoSize: true,\n      data: this.getData(),\n      series: [\n        {\n          xKey: 'date',\n          yKey: 'count',\n          yName: 'Inscriptions',\n          stroke: '#FB77FC',\n          marker: {\n            size: 2,\n            fill: '#FB77FC',\n            stroke: '#FB77FC',\n          },\n        }\n      ],\n      axes: [\n        {\n          type: 'category',\n          position: 'bottom',\n          nice: false,\n          // tick: { count: agCharts.time.second.every(3), color:  \"rgb(0, 0, 0)\"},\n          tick: { count: 0,color:  \"rgb(0, 0, 0)\"},\n          label: { format: '%m/%d/%Y', color:  \"rgb(0, 0, 0)\" },\n        },\n        {\n          type: 'number',\n          position: 'left',\n          nice: false,\n          tick: { count: 1,color:  \"rgb(0, 0, 0)\"},\n          label: { format: '#{.0f}', color:  \"#000\"}\n        }\n      ],\n      background: {\n        fill: \"#ffffff5f\",\n        visible: true\n      },\n      tooltip: {\n        enabled: true\n      },\n      navigator: {\n        enabled: true\n      },\n      title: { text: '' },\n      legend: {\n        position: 'bottom',\n        enabled: true,\n        item: {\n          label: {\n            color: 'black'\n          }\n        }\n      }\n    };\n  }\n\n  ngOnInit(): void {\n    this.initYears();\n    this.startUpdates();\n    this.useDefaultGridStyle();\n    this.getInscriptions()\n  }\n\n  initYears() {\n    const initial = 2021;\n    for(let i = 0; i < 50; i++ ) {\n      this.years.push(initial+i)\n    }\n  }\n\n  useDefaultGridStyle = () => {\n    const options = cloneDeep(this.options);\n\n    var gridStyle = [\n      {\n        stroke: 'white',\n        lineDash: [2, 1],\n      },\n    ];\n    options.axes[0].gridStyle = gridStyle;\n    options.axes[1].gridStyle = gridStyle;\n\n    this.options = options;\n  };\n\n  update = () => {\n    const options = cloneDeep(this.options);\n\n    options.data = this.getData();\n\n    this.options = options;\n  };\n\n  startUpdates = () => {\n    if (this.updating) {\n      return;\n    }\n    this.updating = true;\n    this.update();\n    setInterval(this.update, 1000);\n  };\n\n  getData() {\n    this.updating = false;\n    return this.inscriptions;\n  }\n\n  getInscriptions() {\n    this.adminService.getStatInscriptionClient().subscribe(\n      (data: any) => {\n        let tmp = data\n        tmp.forEach(inscrit => {\n          inscrit.date = this.adminService.formatDate(inscrit.date)\n          inscrit.count = parseInt(inscrit.count)\n        })\n        this.inscriptions = tmp\n        this.original = tmp\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  selectMonth(event) {\n    this.isIntegral = false\n    const value = event.target.value;\n    this.currentMonth = value\n    const search = this.currentMonth+'/'+this.currentYear\n    this.inscriptions =  this.original.filter(element => {\n      const year = element.date.substring(3, 10)\n      if (year === search) return true\n      return false\n    })\n  }\n\n  selectYear(event) {\n    this.isIntegral = false\n    const value = event.target.value;\n    this.currentYear = value\n    this.inscriptions =  this.original.filter(element => {\n      const year = element.date.substring(6, 10)\n      if (year === this.currentYear) return true\n      return false\n    })\n  }\n\n  integral() {\n    this.isIntegral = !this.isIntegral\n    if (this.isIntegral) {\n        this.inscriptions = this.original\n    } else {\n        const search = this.currentMonth+'/'+this.currentYear\n        this.inscriptions =  this.original.filter(element => {\n          const year = element.date.substring(3, 10)\n          if (year === search) return true\n          return false\n      })\n    }\n  }\n}\n","<app-infobar-admin title=\"Clients\" subTitle=\"Clients\"></app-infobar-admin>\n\n<div class=\"admin_container\">\n  <div class=\"admin_bottom_bar\">\n    STATISTIQUES\n  </div>\n\n  <div class=\"block_right\">\n    <div class=\"title_right\">\n      <select name=\"month\" id=\"month\" (change)=\"selectMonth($event)\">\n        <option value=\"01\">Janvier</option>\n        <option value=\"02\">Février</option>\n        <option value=\"03\">Mars</option>\n        <option value=\"04\">Avril</option>\n        <option value=\"05\">Mai</option>\n        <option value=\"06\">Juin</option>\n        <option value=\"07\">Juillet</option>\n        <option value=\"08\">Août</option>\n        <option value=\"09\">Septembre</option>\n        <option value=\"10\">Octobre</option>\n        <option value=\"11\">Novembre</option>\n        <option value=\"12\">Decembre</option>\n      </select>\n\n      <select name=\"year\" id=\"year\" (change)=\"selectYear($event)\">\n        <option [value]=\"year\" *ngFor=\"let year of years\">{{year}}</option>\n      </select>\n\n      <button class=\"btn btn_integrale\" (click)=\"integral()\"\n      [ngClass]=\"{'integral' : isIntegral}\">\n        Afficher l'intégrale\n      </button>\n    </div>\n\n    <div class=\"under_right\">\n      <div class=\"list_action_right\">\n        <button class=\"btn btn_list\" >\n          Nombres d'inscription\n        </button>\n        <!-- <button class=\"btn btn_list\">\n          Nombre d'abonnés\n        </button> -->\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"graph_right\">\n    <div class=\"wrapper\">\n      <ag-charts-angular\n        style=\"height: 70vh; width: 100%; overflow: hidden\"\n        [options]=\"options\"\n      ></ag-charts-angular>\n    </div>\n  </div>\n</div>\n\n\n","<app-header actif=\"4\" connected=\"true\" model=\"true\"></app-header>\n\n<div class=\"main_live\">\n  <img [src]=\"dot\" alt=\"\" id=\"dots\" (click)=\"toggleDots()\">\n  <div class=\"contain_top\">\n    <div class=\"contain_left\">\n      <app-topbar context=\"Live Chat\" visible=\"false\" minuteur=\"false\" [actif]=\"info.actif\"></app-topbar>\n      <div class=\"show_live_left\" [ngStyle]=\"{'background-image': 'url(' + info.bg + ')'}\">\n        <!-- <video autoplay [poster]=\"info.bg\" id=\"video_live_model\" #video_live_model>\n        </video> -->\n      </div>\n    </div>\n    <div class=\"contain_right\">\n      <div class=\"show_live_right\">\n        <div class=\"header_chat\">\n          <p>&gt;</p>\n          <div>\n            Live Chat\n          </div>\n        </div>\n        <app-live-free-chat [modelId]=\"info.modelId\" [messages]=\"messages\" [profil]=\"info.bg\"></app-live-free-chat>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"contain_bottom\">\n    <div class=\"contain_left\">\n      <div class=\"contain_action contain_action_desktop\">\n        <div class=\"launch\">\n          <button class=\"btn_launch\" (click)=\"launchLive()\">\n            Lancer le live\n          </button>\n        </div>\n      </div>\n\n      <!-- // mobile -->\n      <div class=\"contain_action contain_action_mobile\" *ngIf=\"toggleDot\">\n        <div class=\"launch\">\n          <button class=\"btn_launch\" (click)=\"launchLive()\">\n            Lancer le live\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"contain_right\">\n      <div class=\"contain_message\">\n        <emoji-mart class=\"emoji-mart\" set=\"{{set}}\"\n        *ngIf=\"showEmojiPicker\" (emojiSelect)=\"addEmoji($event)\"\n        searchIcons='./../../../../assets/icons/admin-icons/search.png'\n        title=\"\"\n        ></emoji-mart>\n        <div class=\"contain_thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n        </div>\n        <form (ngSubmit)=\"sendMessage()\">\n          <div class=\"input_text\">\n              <input type=\"text\" name=\"message\" autocomplete=\"off\" (focus)=\"focus()\"\n              placeholder=\"Entrer votre message ici ...\" [(ngModel)]=\"info.message\">\n              <button type=\"button\" (click) =\"toggleEmojiPicker()\">😀</button><br>\n              <button type=\"submit\">\n                <div class=\"p\">\n                  <img [src]=\"send\" alt=\"\">\n                </div>\n              </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n\n</div>\n\n<div class=\"lds-spinner\" *ngIf=\"loading\">\n  <div></div><div></div><div></div><div></div>\n  <div></div><div></div><div></div><div></div>\n  <div></div><div></div><div></div><div></div>\n</div>\n\n\n<div class=\"contain_invitation\">\n  <div class=\"list_invitation\">\n    <div class=\"invitation\" *ngFor=\"let item of listInvitation\">\n      <div class=\"close_invitation\"\n      (click)=\"closeInvitation(item.clientId, item.clientPseudo, item.roomId)\">x</div>\n      <p class=\"message_invitation\">\n        Invitation VIP <br>\n        Client : <span class=\"pseudo_invitation\">{{item.clientPseudo}}</span>\n      </p>\n      <div class=\"action_invitation\">\n        <button class=\"btn_invitation btn_accept lighter\"\n        (click)=\"acceptInvitationToVIP(item.clientId, item.clientPseudo, item.roomId)\">\n          OUI\n        </button>\n        <button class=\"btn_invitation btn_deny lighter\"\n        (click)=\"denyInvitationToVIP(item.clientId, item.clientPseudo, item.roomId)\">\n          NON\n        </button>\n      </div>\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit,\r\n  OnDestroy, PLATFORM_ID,\r\n  Inject, ViewChild,\r\n  ElementRef } from '@angular/core';\r\nimport {isPlatformBrowser} from '@angular/common';\r\nimport { NavigationExtras, Router, RouterStateSnapshot, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'ngx-localstorage';\r\nimport { ModelService } from '../../../services/model/model.service';\r\nimport { ProfilService } from '../../../services/profil/profil.service';\r\nimport { ChatService } from '../../../services/chat/chat.service';\r\nimport { Chat, ChatSocket } from 'src/app/interfaces/chat.interface';\r\nimport { RoomService } from '../../../services/room/room.service';\r\nimport { SocketService } from 'src/app/services/socket/socket.service';\r\nimport { RoomPrivateService } from '../../../services/roomPrivate/room-private.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { NotificationService } from '../../../services/notification/notification.service';\r\nimport { RoomVipService } from '../../../services/roomVip/room-vip.service';\r\n\r\ninterface Invitation {\r\n  clientId: number,\r\n  clientPseudo: string,\r\n  roomId: any\r\n}\r\n\r\n@Component({\r\n  selector: 'app-live-chat-model',\r\n  templateUrl: './live-chat-model.component.html',\r\n  styleUrls: ['./live-chat-model.component.scss', './../../live/live.scss']\r\n})\r\nexport class LiveChatModelComponent implements OnInit, OnDestroy {\r\n  context: string = \"FREE\";\r\n  imgPoster = \"assets/images/image.png\";\r\n  thrombone = \"assets/icons/paper-clip.svg\";\r\n  send = \"assets/icons/send-button.svg\";\r\n  dot = \"assets/icons/more_purple.svg\";\r\n  close = \"assets/icons/close.svg\";\r\n\r\n\r\n  info = {\r\n    bg : \"assets/logos/dark-light.jpg\",\r\n    message : '',\r\n    idRoom: 0,\r\n    pseudo: '',\r\n    chatColor:'#FB77FC',\r\n    modelId: 0,\r\n    actif: 0\r\n  }\r\n\r\n  messages: Chat[] = [];\r\n\r\n  toggleDot: boolean = false;\r\n\r\n  joinSub = new Subscription();\r\n  leaveSub = new Subscription();\r\n  invitePrivateSub = new Subscription();\r\n  messageSub = new Subscription();\r\n  inviteVIPSub = new Subscription();\r\n\r\n  loading: boolean = false;\r\n\r\n  listInvitation: Invitation[] = [];\r\n  // @HostListener(\"window:beforeunload\", [\"$event\"]) unloadHandler(event: Event) {\r\n  //   this.socketService.leave(this.info.idRoom, '');\r\n  // }\r\n\r\n  showEmojiPicker = false;\r\n  sets = [\r\n    'native',\r\n    'google',\r\n    'twitter',\r\n    'facebook',\r\n    'emojione',\r\n    'apple',\r\n    'messenger'\r\n  ]\r\n  set = 'google';\r\n\r\n\r\n  // WEB RTC VIDEO\r\n  @ViewChild('video_live_model', {static: true}) video: ElementRef<HTMLVideoElement>;\r\n\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private _platform: Object,\r\n    private router: Router,\r\n    private store: LocalStorageService,\r\n    private modelService: ModelService,\r\n    private chatService: ChatService,\r\n    private roomService: RoomService,\r\n    private roomPrivateService: RoomPrivateService,\r\n    private socketService: SocketService,\r\n    private notificationService: NotificationService,\r\n    private roomVipService: RoomVipService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getInfo();\r\n    // this.initLiveVideo();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    //Called once, before the instance is destroyed.\r\n    //Add 'implements OnDestroy' to the class.\r\n    this.joinSub.unsubscribe();\r\n    this.leaveSub.unsubscribe();\r\n    this.messageSub.unsubscribe();\r\n    this.invitePrivateSub.unsubscribe();\r\n    this.inviteVIPSub.unsubscribe();\r\n  }\r\n\r\n  initSocket() {\r\n    if (!this.roomService.joinedRoom()) {\r\n      this.roomService.joinRoom();\r\n      this.socketService.join(this.info.idRoom, this.info.modelId);\r\n    }\r\n\r\n    this.joinSub = this.socketService.listen(`joined ${this.info.idRoom}`).subscribe(\r\n      (data: any) => {\r\n        console.log('joined ', data);\r\n        this.info.actif = data < 1 ? 0 : data - 1;\r\n      }\r\n    );\r\n\r\n    this.leaveSub = this.socketService.listen(`leaved ${this.info.idRoom}`).subscribe(\r\n      (data: any) => {\r\n        // console.log('leaved ', data);\r\n        this.info.actif = data < 1 ? 0 : data - 1;\r\n      }\r\n    );\r\n\r\n    this.messageSub = this.socketService.listen(`message ${this.info.idRoom}`).subscribe(\r\n      (data) => {\r\n        // console.log('Message from client ', data);\r\n        this.getMessages();\r\n      }\r\n    );\r\n\r\n    this.invitePrivateSub = this.socketService.listen(`invite model to private ${this.info.idRoom} ${this.info.modelId}`).subscribe(\r\n      (data: {roomId: number, clientId: number, clientPseudo: string, modelId: number}) => {\r\n      // console.log('Invitation to private ', data)\r\n      this.notificationService.invitationPrivate('LIVE PRIVEE', 'Un client y participe !');\r\n      this.loading = true;\r\n      setTimeout(() => {\r\n        this.loading = false;\r\n        this.socketService.responseInvitationModelToPrivate(this.info.idRoom, data.clientId,\r\n          this.info.modelId, this.info.pseudo)\r\n        this.launchLive();\r\n      }, 3000);\r\n      }\r\n    );\r\n\r\n    this.inviteVIPSub = this.socketService.listen(`invite model to vip ${this.info.idRoom} ${this.info.modelId}`).subscribe(\r\n      (data: {roomId: any, clientId: number, clientPseudo: string, modelId: number}) => {\r\n        console.log('Invitation to vip ', data)\r\n        this.addInvitationToVIP(data.clientId, data.clientPseudo, data.roomId)\r\n      }\r\n    );\r\n  }\r\n\r\n  getInfo() {\r\n    this.modelService.getInfo().subscribe(\r\n      (data) => {\r\n        // console.log(data);\r\n        if (data.profile.status === 'En vip') {\r\n          this.router.navigate(['/modele/live-vip']);\r\n        }\r\n        if (data.profile.status === 'En live') {\r\n          this.router.navigate(['/modele/live-private']);\r\n        }\r\n        this.info.bg = data.path_soft;\r\n        this.info.modelId = data.id;\r\n        this.info.pseudo = data.pseudo;\r\n        this.getInfoRoom();\r\n      }\r\n    )\r\n  }\r\n\r\n  getInfoRoom() {\r\n    this.roomService.getRoomModel(this.info.modelId).subscribe(\r\n      (data) => {\r\n        console.log('Model room ', data);\r\n        this.info.idRoom = data.idRoom;\r\n        this.info.actif = data.actif < 1 ? 0 : data.actif - 1;\r\n        this.getMessages();\r\n        this.initSocket();\r\n      }\r\n    )\r\n  }\r\n\r\n  toggleDots() {\r\n    this.toggleDot = !this.toggleDot;\r\n    // console.log(this.toggleDot);\r\n  }\r\n\r\n  sendMessage() {\r\n    const data: Chat = {\r\n      idRoom: this.info.idRoom,\r\n      message: this.info.message,\r\n      type_source: 'model',\r\n      id_source: this.info.modelId,\r\n      code_couleur: this.info.chatColor\r\n    }\r\n    this.info.message = null;\r\n    this.chatService.postMessage(data).subscribe(\r\n      (data) => {\r\n        this.getMessages();\r\n        const msg: ChatSocket = {\r\n          room: this.info.idRoom + '',\r\n          role: 'model',\r\n          id: this.info.modelId,\r\n          message: this.info.message\r\n        }\r\n        this.socketService.sendMessage(msg);\r\n      }\r\n    )\r\n  }\r\n\r\n  getMessages() {\r\n    this.chatService.getMessage(this.info.idRoom).subscribe(\r\n      (data) => {\r\n        // console.log(data);\r\n        this.messages = data;\r\n      }\r\n    )\r\n  }\r\n\r\n  async launchLive() {\r\n    // console.log('launch')\r\n    this.loading = true;\r\n    this.roomPrivateService.createRoom().subscribe(\r\n      async (data) => {\r\n        await this.askLeave().then(\r\n          (data) => {\r\n            this.store.set(\"privateRoomId\", data.room);\r\n            this.router.navigate(['/modele/live-private']);\r\n            this.loading = false;\r\n          }\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  async askLeave() {\r\n    const data = {\r\n      room: this.info.idRoom + '',\r\n      role: 'model',\r\n      id: this.info.modelId,\r\n      pseudo: this.info.pseudo,\r\n      message: 'I pass to private live'\r\n    }\r\n    return await this.socketService.emit('Pass to private', data);\r\n  }\r\n\r\n\r\n  async askLeaveVIP() {\r\n    const data = {\r\n      room: this.info.idRoom,\r\n      role: 'model',\r\n      id: this.info.modelId,\r\n      pseudo: this.info.pseudo,\r\n      message: 'I pass to live VIP'\r\n    }\r\n    return await this.socketService.emit('Pass to VIP', data);\r\n  }\r\n\r\n  addInvitationToVIP(clientId: number, clientPseudo: string, roomId: any) {\r\n    const data: Invitation = {\r\n      clientId, clientPseudo, roomId\r\n    }\r\n    let exist = false;\r\n    this.listInvitation.forEach(item => {\r\n      if (item.clientId === clientId) {\r\n        exist = true\r\n      }\r\n    })\r\n    if (!exist) this.listInvitation.push(data)\r\n    console.log(data)\r\n  }\r\n\r\n  closeInvitation(clientId: number, clientPseudo, roomId) {\r\n    const index = this.listInvitation.indexOf({clientId, clientPseudo, roomId});\r\n    this.listInvitation.splice(index, 1);\r\n  }\r\n\r\n  acceptInvitationToVIP(clientId: number, clientPseudo: string, roomId: any) {\r\n    this.closeInvitation(clientId, clientPseudo, roomId)\r\n    this.liveVIP(clientId, roomId);\r\n  }\r\n\r\n  denyInvitationToVIP(clientId: number, clientPseudo: string, roomId: any) {\r\n    this.socketService.responseNegativeInvitationModelToVIP(roomId, clientId, this.info.modelId, this.info.pseudo)\r\n    this.closeInvitation(clientId, clientPseudo, roomId)\r\n  }\r\n\r\n  async liveVIP(clientId: number, roomId: any) {\r\n      this.loading = true;\r\n      this.roomVipService.createRoom(clientId).subscribe(\r\n        (data) => {\r\n          this.store.set(\"vipRoomId\", data.room);\r\n          const msg = {\r\n            roomId: roomId,\r\n            role: 'model',\r\n            clientId: clientId,\r\n            message: 'Let\\'s go to VIP',\r\n            roomVIP: data.room + 'V'\r\n          }\r\n          this.askLeaveVIP().then(\r\n            (data) => {\r\n              this.loading = false;\r\n              this.socketService.responsePositiveInvitationModelToVIP(roomId, clientId, this.info.modelId, this.info.pseudo)\r\n              this.router.navigate(['/modele/live-vip']);\r\n            }\r\n          )\r\n        }\r\n      )\r\n  }\r\n\r\n      // WEB RTC - LIVE VIDEO\r\n      initLiveVideo() {\r\n        this.onStart();\r\n      }\r\n\r\n      onStart(){\r\n        if(isPlatformBrowser(this._platform) && 'mediaDevices' in navigator) {\r\n          navigator.mediaDevices.getUserMedia({video: true, audio: true}).then((ms: MediaStream) => {\r\n            const _video = this.video.nativeElement;\r\n            _video.srcObject = ms;\r\n            _video.play();\r\n          });\r\n        }\r\n      }\r\n\r\n      onStop() {\r\n        if (this.video && this.video.nativeElement.srcObject) {\r\n          this.video.nativeElement.pause();\r\n          if ((this.video.nativeElement.srcObject as MediaStream).getVideoTracks()[0]) {\r\n            (this.video.nativeElement.srcObject as MediaStream).getVideoTracks()[0].stop();\r\n          }\r\n          this.video.nativeElement.srcObject = null;\r\n        }\r\n      }\r\n\r\n\r\n  // -------- EMOJI -----------------\r\n\r\n  toggleEmojiPicker() {\r\n    this.showEmojiPicker = !this.showEmojiPicker;\r\n  }\r\n\r\n  addEmoji(event) {\r\n    const {info} = this;\r\n    console.log(this.info.message)\r\n    console.log(`${event.emoji.native}`)\r\n    const text = `${info.message}${event.emoji.native}`;\r\n\r\n    this.info.message = text;\r\n    console.log(this.info.message)\r\n    // this.showEmojiPicker = false;\r\n  }\r\n\r\n  focus() {\r\n    this.showEmojiPicker = false;\r\n  }\r\n\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pack-argent',\n  templateUrl: './pack-argent.component.html',\n  styleUrls: ['./pack-argent.component.scss']\n})\nexport class PackArgentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>pack-argent works!</p>\n","import { Injectable } from '@angular/core';\nimport { addAlbum } from '../../interfaces/add-album.interface';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { SpecificAlbum } from '../../interfaces/specific-album.interface';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlbumService {\n  endpoint = environment.endpoint\n\n\n  public albumPrivate = [\n    'assets/images/image.png', 'assets/images/bg.jpg',\n    'assets/images/image.png', 'assets/images/image.png',\n    'assets/images/image.png', 'assets/images/image.png',\n    'assets/images/bg.jpg', 'assets/images/image.png',\n    'assets/images/image.png', 'assets/images/bg.jpg',\n    'assets/images/bg.jpg', 'assets/images/bg.jpg',\n    'assets/images/bg.jpg', 'assets/images/image.png',\n    'assets/images/bg.jpg', 'assets/images/image.png',\n    'assets/images/bg.jpg', 'assets/images/bg.jpg',\n    'assets/images/bg.jpg', 'assets/images/bg.jpg',\n    'assets/images/bg.jpg', 'assets/images/bg.jpg'\n  ];\n\n  public albumVIP = [\n    'assets/images/image2.jpg', 'assets/images/bg.jpg',\n    'assets/images/image2.jpg', 'assets/images/image.png',\n    'assets/images/image2.jpg', 'assets/images/image.png',\n    'assets/images/bg.jpg', 'assets/images/image.png',\n    'assets/images/image2.jpg', 'assets/images/image2.jpg',\n    'assets/images/bg.jpg', 'assets/images/bg.jpg',\n    'assets/images/bg.jpg', 'assets/images/image2.jpg',\n    'assets/images/bg.jpg', 'assets/images/image2.jpg',\n    'assets/images/bg.jpg', 'assets/images/bg.jpg',,\n    'assets/images/image2.jpg', 'assets/images/bg.jpg'\n  ];\n\n  public albumFree = [\n    'assets/images/image3.jpg', 'assets/images/image3.jpg',\n    'assets/images/image.png', 'assets/images/image.png',\n    'assets/images/bg.jpg', 'assets/images/image3.jpg',\n    'assets/images/image3.jpg', 'assets/images/bg.jpg',\n    'assets/images/bg.jpg', 'assets/images/bg.jpg',\n    'assets/images/bg.jpg', 'assets/images/image.png',\n    'assets/images/image3.jpg', 'assets/images/image.png',\n    'assets/images/bg.jpg', 'assets/images/bg.jpg',\n    'assets/images/image3.jpg', 'assets/images/bg.jpg'\n  ];\n\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  totalVip() {\n    return this.albumVIP.length;\n  }\n\n  totalFree() {\n    return this.albumFree.length;\n  }\n\n  totalPrivate() {\n    return this.albumPrivate.length;\n  }\n\n  async addPhoto(url: string, file: any, context: string) {\n    console.log(url);\n    console.log(context);\n    var tmp = [];\n    var tab: any;\n    tmp.push(url);\n    switch (context) {\n      case 'private':\n      for (let index = 0; index < this.albumPrivate.length; index++) {\n        tmp.push(this.albumPrivate[index]);\n      }\n      this.albumPrivate = tmp;\n      break;\n\n      case 'vip':\n        for (let index = 0; index < this.albumVIP.length; index++) {\n          tmp.push(this.albumVIP[index]);\n        }\n        this.albumVIP = tmp;\n        break;\n\n      case 'free':\n        for (let index = 0; index < this.albumFree.length; index++) {\n          tmp.push(this.albumFree[index]);\n        }\n        this.albumFree = tmp;\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  async getAlbums(context: string, debut: number, marge: number): Promise<Observable<any>> {\n    const album: SpecificAlbum = {\n      type_album: context,\n      begin: debut,\n      end: debut + marge\n    }\n    return this.http.post(`${this.endpoint}/album/specific`, album, httpOptions)\n  }\n\n  uploadAlbumModel(formData: FormData): Observable<any> {\n    return this.http.post(`${this.endpoint}/upload/album`,formData,{\n        reportProgress: true,\n        observe: 'events'\n    });\n  }\n\n  addAlbums(albums: addAlbum[]): Observable<any> {\n    return this.http.post(`${this.endpoint}/album`, albums, httpOptions)\n  }\n\n  getCount(): Observable<any> {\n    return this.http.get(`${this.endpoint}/album/model/count`, httpOptions)\n  }\n\n  // Get model albums by client\n  getModelAlbums(data: {modelId: number, type_album: string}) {\n    return this.http.post(`${this.endpoint}/album/getAlbums`, data, httpOptions)\n  }\n\n  deleteAlbum(id: number) {\n    return this.http.delete(`${this.endpoint}/album/${id}`, httpOptions)\n  }\n\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Pack } from 'src/app/interfaces/pack-credit.interface';\nimport { environment } from 'src/environments/environment';\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreditService {\n  endpoint = environment.endpoint;\n\n  public listPack = ['De Bienvenue', 'Bronze', 'Argent', 'Or'];\n\n  public packBienvenue: Pack[] = [\n    {credit: 30, cout: 0.18, montant: 5.25, affaire: false}\n  ];\n\n  public packBronze: Pack[] = [\n    {credit: 40, cout: 0.26, montant: 10.5, affaire: false},\n    {credit: 82, cout: 0.26, montant: 21, affaire: false},\n    {credit: 123, cout: 0.26, montant: 31.5, affaire: false},\n    {credit: 164, cout: 0.23, montant: 42, affaire: false},\n    {credit: 225, cout: 0.23, montant: 52.5, affaire: true},\n    {credit: 360, cout: 0.26, montant: 84 , affaire: false}\n  ];\n\n  public packArgent: Pack[] = [\n    {credit: 470, cout: 0.21, montant: 210, affaire: false},\n    {credit: 564, cout: 0.21, montant: 315, affaire: false},\n    {credit: 720, cout: 0.21, montant: 420, affaire: false},\n    {credit: 864, cout: 0.21, montant: 525, affaire: false},\n  ];\n\n  public packOr: Pack[] = [\n    {credit: 1000, cout: 0.21, montant: 210, affaire: false},\n    {credit: 1500, cout: 0.21, montant: 315, affaire: false},\n    {credit: 2000, cout: 0.21, montant: 420, affaire: false},\n    {credit: 2500, cout: 0.21, montant: 525, affaire: false},\n  ];\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getCredit(): Observable<any> {\n    return this.http.get(`${this.endpoint}/credit`, httpOptions)\n  }\n\n  createCredit(id: number): Observable<any> {\n    return this.http.post(`${this.endpoint}/credit/create/${id}`,{id}, httpOptions)\n  }\n\n  createCreditClient(id: number): Observable<any> {\n    return this.http.post(`${this.endpoint}/credit/create/client/${id}`,{id}, httpOptions)\n  }\n\n  updateCredit(id: number, credit: number) {\n    const data = {\n      credit\n    }\n    return this.http.patch(`${this.endpoint}/credit/${id}`, data, httpOptions)\n  }\n\n  buyCreditClient(montant: number, credit: number, creditId: number, clientId: number) {\n    const data = {\n      montant,\n      credit,\n      creditId,\n      clientId\n    }\n    return this.http.patch(`${this.endpoint}/credit/client`, data, httpOptions)\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {NgxNotificationDirection, NgxNotificationMsgService, NgxNotificationStatusMsg} from 'ngx-notification-msg'\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(\n    private _snackbar: MatSnackBar,\n    private readonly ngxNotificationMsgService: NgxNotificationMsgService) {\n    }\n\n  success (title: string, message: string) {\n    this.ngxNotificationMsgService.open({\n      status: NgxNotificationStatusMsg.SUCCESS,\n      header: title,\n      messages: [message],\n      displayIcon: true,\n      closeable: true,\n      direction: NgxNotificationDirection.TOP_RIGHT,\n      displayProgressBar: false,\n      delay: 2000\n    });\n  }\n\n  info (title: string, message: string) {\n    this.ngxNotificationMsgService.open({\n      status: NgxNotificationStatusMsg.INFO,\n      header: title,\n      messages: [message],\n      displayIcon: true,\n      closeable: true,\n      direction: NgxNotificationDirection.TOP_RIGHT,\n      displayProgressBar: false,\n      delay: 2000\n    });\n  }\n\n  failure (title: string, message: string) {\n    this.ngxNotificationMsgService.open({\n      status: NgxNotificationStatusMsg.FAILURE,\n      header: title,\n      messages: [message],\n      displayIcon: true,\n      closeable: true,\n      direction: NgxNotificationDirection.TOP_RIGHT,\n      displayProgressBar: false,\n      delay: 2000\n    });\n  }\n\n  simple (title: string, message: string) {\n    this.ngxNotificationMsgService.open({\n      status: NgxNotificationStatusMsg.NONE,\n      header: title,\n      messages: [message],\n      displayIcon: true,\n      closeable: true,\n      direction: NgxNotificationDirection.TOP_RIGHT,\n      displayProgressBar: false,\n      delay: 2000\n    });\n  }\n\n  errorMsg(message: string) {\n    this._snackbar.open(message, \"\", {\n      duration: 2000,\n      horizontalPosition: \"right\",\n      verticalPosition: \"bottom\",\n      panelClass: [\"erreur_snackar\"]\n  })\n  }\n\n  successMsg(message: string) {\n    this._snackbar.open(message, \"\", {\n      duration: 2000,\n      horizontalPosition: \"right\",\n      verticalPosition: \"bottom\",\n      panelClass: [\"success_snackar\"]\n  })\n  }\n\n  infoMsg(message: string) {\n    this._snackbar.open(message, \"\", {\n      duration: 2000,\n      horizontalPosition: \"right\",\n      verticalPosition: \"bottom\",\n      panelClass: [\"info_snackar\"]\n  })\n  }\n\n  invitationPrivate (title: string, message: string) {\n    this.ngxNotificationMsgService.open({\n      status: NgxNotificationStatusMsg.INFO,\n      header: title,\n      messages: [message],\n      displayIcon: true,\n      closeable: true,\n      direction: NgxNotificationDirection.BOTTOM_RIGHT,\n      displayProgressBar: true,\n      delay: 3000\n    });\n  }\n\n}\n","<app-header></app-header>\n\n<div class=\"contain_signin_one\">\n  <div class=\"inside_sign part_one\">\n    <h2>Bienvenue sur <span class=\"word_one\">BETWEEN</span><span class=\"word_two\">US</span></h2>\n  </div>\n</div>\n\n<div class=\"contain_signin_two inside_sign\">\n  <h2 class=\"title\">\n    Se connecter en tant que Modèle\n  </h2>\n\n  <div class=\"descr\">\n      Nous utilisons des cookies pour améliorer votre expérience\n      d'utilisateur. En poursuivant votre navigation, vous acceptez\n      l'utilisation de cookies, notamment de tiers. Politique relative aux cookies.\n  </div>\n\n  <form class=\"form\" [formGroup]=\"loginForm\" novalidate autocomplete=\"off\">\n    <div class=\"form-group\">\n      <label for=\"pseudo\">Pseudo</label>\n      <input type=\"text\" formControlName=\"pseudo\" name=\"pseudo\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.pseudo.errors\">\n        <small *ngIf=\"form.pseudo.errors.required\" class=\"form-text error-text\">Pseudo requis</small>\n      </div>\n    </div>\n\n\n    <div class=\"form-group\">\n      <label for=\"password\">Mot de passe</label>\n      <input type=\"password\" formControlName=\"password\" name=\"password\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.password.errors\">\n        <small *ngIf=\"form.password.errors.required\" class=\"form-text error-text\">\n          Mot de passe requis\n        </small>\n      </div>\n    </div>\n\n      <small *ngIf=\"errorAuth\" class=\"form-text error-text\">\n        {{errorAuth}}\n      </small>\n\n    <div class=\"options\">\n      <div class=\"stay_connected\">\n        <input (change)=\"remember($event)\" type=\"checkbox\" id=\"checker\" class=\"regular-checkbox\">\n        <label for=\"checker\" class=\"label_check\">Rester connecté</label>\n      </div>\n      <div class=\"forgot\" routerLink=\"/modele/motdepasseoublie\">\n        Mot de passe oublié ?\n      </div>\n    </div>\n\n    <div class=\"action\">\n      <button class=\"btn btn_signin lighter\" (click)=\"login($event)\">\n        <div class=\"loader\" *ngIf=\"loading\"></div>\n        <span *ngIf=\"!loading\">CONNEXION</span>\n      </button>\n    </div>\n\n    <div class=\"register\">\n      Pas encore membre ? <span routerLink=\"/modele/inscription\">Inscrivez-vous</span>\n    </div>\n  </form>\n\n  <br><br><br>\n</div>\n","import { EncryptionService } from './../../../services/encryption/encryption.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport * as $ from 'jquery';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { loginUser } from 'src/app/interfaces/login.interface';\nimport { environment } from 'src/environments/environment';\nimport { LogService } from '../../../services/log/log.service';\nimport { Log } from '../../../interfaces/log.interface';\nimport { RoomService } from '../../../services/room/room.service';\nimport { LocalStorageService } from 'ngx-localstorage';\n\n@Component({\n  selector: 'app-connexion-model',\n  templateUrl: './connexion-model.component.html',\n  styleUrls: ['./connexion-model.component.scss']\n})\nexport class ConnexionModelComponent implements OnInit {\n  loginForm : FormGroup;\n\n  submitted :boolean =  false;\n  loading: boolean = false;\n\n  checked :boolean =  false;\n\n  pseudoStorage : string = null;\n  passStorage : string = null;\n  errorAuth  :boolean = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private encryptionService: EncryptionService,\n    private authService: AuthService,\n    private router: Router,\n    private logService: LogService,\n    private roomService: RoomService,\n    private store: LocalStorageService\n  ) {\n    this.loginForm = this.formBuilder.group({\n      pseudo: ['', Validators.required],\n      password: ['', Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n    this.isRemembered();\n  }\n\n  get form() { return this.loginForm.controls }\n\n  remember(value) {\n    if (value.target.checked) {\n        this.checked = true;\n        localStorage.setItem(\"checklogmod\", \"true\");\n    } else {\n        this.checked = false;\n        localStorage.setItem(\"checklogmod\", \"false\");\n    }\n  }\n\n  async isRemember(user: loginUser) {\n    if (this.checked) {\n        const pseudoCrypted = this.encryptionService.encryptUsingAES256(user.pseudo);\n        const passCrypted = this.encryptionService.encryptUsingAES256(user.password);\n        localStorage.setItem(environment.CRYPT_PSEUDO_MODEL, pseudoCrypted);\n        localStorage.setItem(environment.CRYPT_PASS_MODEL, passCrypted);\n    } else {\n        localStorage.setItem(environment.CRYPT_PSEUDO_MODEL, null);\n        localStorage.setItem(environment.CRYPT_PASS_MODEL, null);\n    }\n  }\n\n  isRemembered() {\n    const pseudoStorage = localStorage.getItem(environment.CRYPT_PSEUDO_MODEL) ? localStorage.getItem(environment.CRYPT_PSEUDO_MODEL) : null;\n    const passStorage = localStorage.getItem(environment.CRYPT_PASS_MODEL) ? localStorage.getItem(environment.CRYPT_PASS_MODEL) : null;\n\n    if (pseudoStorage && passStorage) {\n      this.pseudoStorage = this.encryptionService.decryptUsingAES256(pseudoStorage);\n      this.passStorage = this.encryptionService.decryptUsingAES256(passStorage);\n\n      this.pseudoStorage = this.pseudoStorage.replace(/['\"]+/g, '');\n      this.passStorage = this.passStorage.replace(/['\"]+/g, '');\n\n      this.loginForm.setValue({\n            pseudo: this.pseudoStorage,\n            password: this.passStorage\n      })\n    }\n\n    if (localStorage.getItem(\"checklogmod\") === \"true\")\n      $('#checker').prop('checked', true);\n    else\n      $('#checker').prop('checked', false);\n  }\n\n  async login(event) {\n    this.submitted = true;\n    event.preventDefault();\n    if (this.loginForm.invalid) {return false;}\n    this.loading = true;\n    let user: loginUser = this.loginForm.value;\n    await this.authService.loginModel(user).subscribe(\n      (res: any) => {\n          console.log(res);\n          if (res.error) {\n            this.errorAuth = res.message;\n            this.loading = false;\n          } else {\n            this.errorAuth = null;\n            if (res.access_token)\n              this.authService.saveToken(res.access_token).then(\n                () => {\n                  this.logService.createLog(\"connection\").subscribe(\n                    (data) => {\n                      this.isRemember(user).then(\n                        () => {\n                          this.roomService.createRoom().subscribe(\n                            (data) => {\n                              this.store.set(\"room\", data.room);\n                              this.loading = false;\n                              this.router.navigate(['/modele/profile']);\n                            }\n                          )\n                        }\n                      );\n                    }, (error) => {\n                      this.loading = false;\n                      console.log(error);\n                    }\n                  );\n\n                }\n              );\n          }\n      },\n      (err: any) => {\n          this.loading = false;\n          console.log(err);\n      }\n    );\n\n    return true;\n  }\n\n  saveLog() {\n    this.logService.createLog(\"connection\").subscribe(\n      (data) => {\n        console.log('Log ', data)\n      }, (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n}\n","<app-infobar-admin title=\"Tableau de bord\" subTitle=\"Tableau de bord\"></app-infobar-admin>\n\n<div class=\"admin_container\">\n  <div class=\"admin_bottom_bar\">\n    tableau de bord\n  </div>\n\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-lg-4\">\n        <app-main-left-dashboard-admin></app-main-left-dashboard-admin>\n      </div>\n      <div class=\"col-lg-8\">\n        <app-main-right-dashboard-admin></app-main-right-dashboard-admin>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <div class=\"block_right second\">\n          <div class=\"title_right\">\n            Show\n          </div>\n\n          <div class=\"under_right\">\n            <div class=\"list_action_right\">\n              <button class=\"btn btn_list\" (click)=\"changeSelectionShow('private')\"\n              [ngClass]=\"{'selected': currentShowLabel === 'last'}\">\n                Show récents PRIVATE\n              </button>\n              <button class=\"btn btn_list\" (click)=\"changeSelectionShow('vip')\"\n              [ngClass]=\"{'selected': currentShowLabel === 'best'}\">\n              Show récents VIP\n              </button>\n              <button class=\"btn btn_list\" (click)=\"changeSelectionShow('top')\"\n              [ngClass]=\"{'selected': currentShowLabel === 'top'}\">\n                Rang des modèles\n              </button>\n            </div>\n\n            <div class=\"show_right\">\n              <div class=\"title_show\">\n                {{labelShow.title}}\n              </div>\n              <table class=\"table table_contain\">\n                <tr class=\"table_row\">\n                  <td *ngFor=\"let item of labelShow.label\">\n                    {{item}}\n                  </td>\n                </tr>\n                <tr *ngFor=\"let item of valueShow\" class=\"table_row\">\n                  <td class=\"name_modele\">{{item.pseudo}}</td>\n                  <td *ngIf=\"currentShowLabel !== 'top'\">{{item.date}}</td>\n                  <td *ngIf=\"currentShowLabel !== 'top'\">{{item.duree}}</td>\n                  <td *ngIf=\"currentShowLabel === 'top'\">{{item.showCreated}}</td>\n                  <td>{{item.gain}}</td>\n                  <td *ngIf=\"currentShowLabel === 'top'\">{{item.lastShow}}</td>\n                  <td *ngIf=\"currentShowLabel === 'top'\">{{item.rang}}</td>\n                  <td *ngIf=\"currentShowLabel !== 'top'\">{{item.type}}</td>\n                </tr>\n              </table>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from '../../../../../services/admin/admin.service';\nimport { TimerService } from '../../../../../services/timer/timer.service';\n\n@Component({\n  selector: 'app-main-dashboard-admin',\n  templateUrl: './main-dashboard-admin.component.html',\n  styleUrls: ['./main-dashboard-admin.component.scss']\n})\nexport class MainDashboardAdminComponent implements OnInit {\n  labelsShow = [\n    {\n      title: '10 DERNIERS SHOW',\n      label : [\n        'Modèle', 'Date', 'Durée',\n        'Gains', 'Type'\n      ]\n    },\n    {\n      title: 'TOP 10 MODELES',\n      label : [\n        'Modèle', 'Show crée', 'Gains',\n        'Dernier show', 'Rang'\n      ]\n    },\n    {\n      title: 'TOP 3 DES CLIENTS LES PLUS ACTIFS',\n      label : [\n        'Pseudo', 'Show regardé', 'Durée moyenne',\n        'Rang'\n      ]\n    }\n  ]\n\n  lastShowPrivate = []\n  lastShowVIP = []\n  valueShow = []\n\n  topModels = []\n\n  currentShowLabel = 'private'\n  labelShow = this.labelsShow[0]\n\n  constructor(\n    private adminService: AdminService,\n    private timerService: TimerService\n  ) { }\n\n  ngOnInit(): void {\n    this.getLastShowPrivate()\n    this.getLastShowVIP()\n    this.getTopModels()\n  }\n\n  getLastShowPrivate() {\n    this.adminService.get10LastShowPrivate().subscribe(\n      (data: any[]) => {\n        // console.log(data)\n        let tmp = data\n        tmp.forEach(value => {\n            value.pseudo = value.model.pseudo\n            value.date = this.adminService.formatDate(value.createdAt)\n            value.duree = this.getDuree(value.createdAt, value.updatedAt)\n            value.gain = value.gain\n            value.type = 'Private'\n        })\n        this.lastShowPrivate = tmp\n        this.valueShow = this.lastShowPrivate\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  getLastShowVIP() {\n    this.adminService.get10LastShowVIP().subscribe(\n      (data: any[]) => {\n        // console.log(data)\n        let tmp = data\n        tmp.forEach(value => {\n            value.pseudo = value.model.pseudo\n            value.date = this.adminService.formatDate(value.createdAt)\n            value.duree = this.getDuree(value.createdAt, value.updatedAt)\n            value.gain = value.gain\n            value.type = 'VIP'\n        })\n        this.lastShowVIP = tmp\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  getTopModels() {\n    this.adminService.getTop10Model().subscribe(\n      (data: any[]) => {\n        console.log(data)\n        let tmp = data\n        let countLoop = 0\n        tmp.forEach(value => {\n          value.pseudo = value.pseudo\n          value.showCreated = value.privateRooms.length + value.vipRooms.length\n          value.gain = value.credit.credit\n          value.lastShow = this.adminService.formatDate(value.credit.updatedAt)\n          value.rang = countLoop + 1\n          countLoop++\n        })\n        console.log(tmp)\n        this.topModels = tmp\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  changeSelectionShow(text) {\n    this.currentShowLabel = text\n    if (text === 'private') {\n      this.labelShow = this.labelsShow[0]\n      this.valueShow = this.lastShowPrivate\n    } else if (text === 'vip') {\n      this.labelShow = this.labelsShow[0]\n      this.valueShow = this.lastShowVIP\n    } else if (text === 'top') {\n      this.labelShow = this.labelsShow[1]\n      this.valueShow = this.topModels\n    }\n  }\n\n  getDuree(created: string, updated: string) {\n    const result = this.timerService.convertTime(created, updated)\n    const hourStr = result.hour < 10 ? '0'+result.hour : result.hour\n    const minStr = result.minute < 10 ? '0'+result.minute : result.minute\n    const secStr = result.second < 10 ? '0'+result.second : result.second\n\n    if (result.hour > 0) {\n      return hourStr+':'+minStr+':'+secStr\n    }\n    return minStr+':'+secStr\n  }\n}\n","<div class=\"main_topbar\">\n  <div class=\"contain_notification\">\n    <img [src]=\"icon_notification\" alt=\"\" class=\"img_notification rotateimg\">\n    <sup *ngIf=\"value_notification > 0\">\n      {{value_notification}}\n    </sup>\n  </div>\n\n  <div class=\"contain_label\">\n    {{info.pseudo}}\n  </div>\n\n  <div class=\"contain_profile\">\n    <img [src]=\"info.url\" alt=\"\" class=\"profile\">\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from '../../../../services/admin/admin.service';\n\n@Component({\n  selector: 'app-topbar-admin',\n  templateUrl: './topbar-admin.component.html',\n  styleUrls: ['./topbar-admin.component.scss']\n})\nexport class TopbarAdminComponent implements OnInit {\n  icon_notification = './../../../../../assets/icons/admin-icons/notification.png'\n  value_notification = 0\n\n  info = {\n    pseudo: '',\n    url: '',\n    email: ''\n  }\n\n  constructor(\n    private adminService: AdminService\n  ) { }\n\n  ngOnInit(): void {\n    this.getInfos()\n  }\n\n  getInfos() {\n    this.adminService.getInfosAdmin().subscribe(\n      (data: any) => {\n        this.info = data\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AlbumService } from '../../services/album/album.service';\nimport { NotificationService } from '../../services/notification/notification.service';\n\n@Component({\n  selector: 'app-popup-image',\n  templateUrl: './popup-image.component.html',\n  styleUrls: ['./popup-image.component.scss']\n})\nexport class PopupImageComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: {id: number, url: string, type: string},\n    private albumService: AlbumService,\n    private notificationService: NotificationService,\n    public dialogRef: MatDialogRef<PopupImageComponent>\n    ) { }\n\n  ngOnInit(): void {\n  }\n\n  close() {\n    this.dialogRef.close('close');\n  }\n\n  delete(id: number) {\n    this.albumService.deleteAlbum(id).subscribe(\n      (data) => {\n        this.notificationService.info(\"Suppression\", \"Photo Supprimée\");\n        this.dialogRef.close('success');\n      }\n    )\n  }\n\n}\n","<div class=\"main_popup\">\n  <img [src]=\"data.url\" alt=\"\" class=\"img_popup\" *ngIf=\"data.url\">\n\n  <div class=\"bottom_action\">\n    <div class=\"bottom_btn\">\n      <button class=\"btn_delete btn\" (click)=\"delete(data.id)\">\n        Supprimer\n      </button>\n      <button class=\"btn btn_close\" (click)=\"close()\">\n        Fermer\n      </button>\n    </div>\n    <div class=\"bottom_title\">\n      Photo {{data.type}}\n    </div>\n  </div>\n  <!-- <div class=\"action\">\n    <button class=\"btn_delete btn\" (click)=\"delete(data.id)\">\n      Supprimer\n    </button>\n    <button class=\"btn btn_close\" (click)=\"close()\">\n      Fermer\n    </button>\n  </div> -->\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { LocalStorageService } from 'ngx-localstorage';\nimport { NotificationService } from '../../../services/notification/notification.service';\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n@Component({\n  selector: 'app-confirm-email',\n  templateUrl: './confirm-email.component.html',\n  styleUrls: ['./confirm-email.component.scss']\n})\nexport class ConfirmEmailComponent implements OnInit {\n  endpoint = environment.endpoint\n\n  token = null;\n  errorToken: boolean = false;\n  errorMessageToken: string = null;\n  successMessageToken: string = null;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private http: HttpClient,\n    private store: LocalStorageService,\n    private router: Router,\n    private notificationService: NotificationService\n    ) {\n    this.activatedRoute.queryParams.subscribe(params => {\n          this.token = params['token'];\n      });\n  }\n\n  ngOnInit(): void {\n    this.confirmToken();\n  }\n\n  confirmToken() {\n    if (!this.token) {\n      this.errorToken = true;\n      this.errorMessageToken = \"Token introuvable\"\n      return false;\n    }\n    this.store.set(\"token\", this.token);\n\n    // POST client/confirm\n    this.http.post(`${this.endpoint}/client/confirm`,{}, httpOptions).subscribe(\n      (data: {success: boolean, message: string}) => {\n        // console.log(\"Client token \", data);\n        if (!data.success) {\n          this.errorMessageToken = data.message;\n          this.errorToken = true;\n        } else {\n          this.errorToken = false;\n          this.successMessageToken = data.message;\n          this.notificationService.infoMsg(\"Votre compte est confirmé\");\n          this.router.navigate(['/client/connexion']);\n        }\n      }\n    )\n  }\n\n}\n","<div class=\"main\"></div>\n\n<div class=\"main_token\">\n  <div class=\"main_contain\">\n    <h3 class=\"titre\">Confirmation d'inscription</h3>\n    <p class=\"success message\" *ngIf=\"!errorToken\">\n      {{successMessageToken}}\n    </p>\n    <p class=\"error message\" *ngIf=\"errorToken\">\n      {{errorMessageToken}}\n    </p>\n  </div>\n</div>\n\n","<div class=\"contain_credit\">\n  <div class=\"info_credit\">\n    <div class=\"txt_credit\">\n      Vous avez actuellement : <span> {{solde}} Crédits </span>\n    </div>\n    <div class=\"recharge_credit\">\n      <div class=\"title_credit\">\n        Rechargez mes crédits\n      </div>\n      <div class=\"input_credit\">\n        <input type=\"text\" placeholder=\"Entrer ici votre code promo\">\n      </div>\n    </div>\n  </div>\n\n  <div class=\"contain_pack\">\n    <div class=\"choice_pack\">\n      <select id=\"select_choice\" (change)=\"select($event)\">\n        <option value=\"bienvenue\">PACK DE BIENVENUE</option>\n        <option value=\"bronze\">PACK BRONZE</option>\n        <option value=\"argent\">PACK ARGENT</option>\n        <option value=\"or\">PACK OR</option>\n      </select>\n    </div>\n\n    <div class=\"container-fluid contain_pack\">\n\n      <div class=\"pack_bienvenue\" *ngIf=\"currentPack === 'bienvenue'\">\n        <div class=\"row\">\n          <div class=\"col-lg-4 offset-lg-4 column\">\n            <div class=\"pack\">\n              <div class=\"pack_credit\">\n                <div>\n                  {{packBienvenue.credit}}\n                </div>\n                <p>\n                  CREDITS\n                </p>\n              </div>\n              <div class=\"pack_cout\">\n                Coût / Crédit\n                <p>\n                  {{packBienvenue.cout}}$\n                </p>\n              </div>\n              <div class=\"pack_button\">\n                <button class=\"btn btn_buy lighter\">\n                  Acheter\n                </button>\n              </div>\n              <div class=\"pack_montant\">\n                {{packBienvenue.montant}} $\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"pack_or\" *ngIf=\"currentPack === 'or'\">\n        <div class=\"row\">\n          <div class=\"col-lg-3 column\" *ngFor=\"let item of packOr\">\n            <div class=\"pack\">\n              <div class=\"pack_credit\">\n                <div>\n                  {{item.credit}}\n                </div>\n                <p>\n                  CREDITS\n                </p>\n              </div>\n              <div class=\"pack_cout\">\n                Coût / Crédit\n                <p>\n                  {{item.cout}}$\n                </p>\n              </div>\n              <div class=\"pack_button\">\n                <button class=\"btn btn_buy lighter\">\n                  Acheter\n                </button>\n              </div>\n              <div class=\"pack_montant\">\n                {{item.montant}} $\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"pack_argent\" *ngIf=\"currentPack === 'argent'\">\n        <div class=\"row\">\n          <div class=\"col-lg-3 column\" *ngFor=\"let item of packArgent\">\n            <div class=\"pack\">\n              <div class=\"pack_credit\">\n                <div>\n                  {{item.credit}}\n                </div>\n                <p>\n                  CREDITS\n                </p>\n              </div>\n              <div class=\"pack_cout\">\n                Coût / Crédit\n                <p>\n                  {{item.cout}}$\n                </p>\n              </div>\n              <div class=\"pack_button\">\n                <button class=\"btn btn_buy lighter\">\n                  Acheter\n                </button>\n              </div>\n              <div class=\"pack_montant\">\n                {{item.montant}} $\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"pack_bronze\" *ngIf=\"currentPack === 'bronze'\">\n        <div class=\"row\">\n          <div class=\"col-lg-4 column\" *ngFor=\"let item of packBronze\">\n            <div class=\"pack\" [ngClass]=\"{'bonAffaire': item.affaire}\">\n              <div class=\"txt_bon_affaire\" *ngIf=\"item.affaire\">\n                Pack la plus bonne affaire\n              </div>\n              <div class=\"pack_credit\">\n                <div>\n                  {{item.credit}}\n                </div>\n                <p>\n                  CREDITS\n                </p>\n              </div>\n              <div class=\"pack_cout\">\n                Coût / Crédit\n                <p>\n                  {{item.cout}}$\n                </p>\n              </div>\n              <div class=\"pack_button\">\n                <button class=\"btn btn_buy lighter\">\n                  Acheter\n                </button>\n              </div>\n              <div class=\"pack_montant\">\n                {{item.montant}} $\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport * as $ from 'jquery';\n\ninterface Pack {\n  credit: number,\n  cout: number,\n  montant: number,\n  affaire: boolean\n}\n\n@Component({\n  selector: 'app-credit',\n  templateUrl: './credit.component.html',\n  styleUrls: ['./credit.component.scss']\n})\nexport class CreditComponent implements OnInit {\n  solde = 500;\n\n  currentPack: string = 'bienvenue';\n\n  packBienvenue: Pack = {\n    credit:30, cout: 0.18, montant: 5.25, affaire: false\n  };\n\n  packBronze: Pack[] = [\n    {credit: 40, cout: 0.26, montant: 10.5, affaire: false},\n    {credit: 82, cout: 0.26, montant: 21, affaire: false},\n    {credit: 123, cout: 0.26, montant: 31.5, affaire: false},\n    {credit: 164, cout: 0.23, montant: 42, affaire: false},\n    {credit: 225, cout: 0.23, montant: 52.5, affaire: true},\n    {credit: 360, cout: 0.26, montant: 84 , affaire: false}\n  ];\n\n  packArgent: Pack[] = [\n    {credit: 470, cout: 0.21, montant: 210, affaire: false},\n    {credit: 564, cout: 0.21, montant: 315, affaire: false},\n    {credit: 720, cout: 0.21, montant: 420, affaire: false},\n    {credit: 864, cout: 0.21, montant: 525, affaire: false},\n  ];\n\n  packOr: Pack[] = [\n    {credit: 1000, cout: 0.21, montant: 210, affaire: false},\n    {credit: 1500, cout: 0.21, montant: 315, affaire: false},\n    {credit: 2000, cout: 0.21, montant: 420, affaire: false},\n    {credit: 2500, cout: 0.21, montant: 525, affaire: false},\n  ];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  select(event) {\n    console.log(event.target.value);\n    const value = event.target.value;\n    this.currentPack = value;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Log } from '../../interfaces/log.interface';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogService {\n  endpoint = environment.endpoint\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  createLog(description: string): Observable<any> {\n    const log: Log = {\n      type: 'model',\n      description: description\n    }\n    return this.http.post(`${this.endpoint}/log`, log, httpOptions)\n  }\n\n  getLogs(): Observable<any> {\n    return this.http.get(`${this.endpoint}/log/all`, httpOptions)\n  }\n}\n","import { Component, OnInit,\r\n  OnDestroy, PLATFORM_ID,\r\n  Inject, ViewChild,\r\n  ElementRef,\r\n  HostListener} from '@angular/core';\r\nimport {isPlatformBrowser} from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LocalStorageService } from 'ngx-localstorage';\r\nimport { Chat, ChatSocket, ClientCam } from 'src/app/interfaces/chat.interface';\r\nimport { ChatService } from 'src/app/services/chat/chat.service';\r\nimport { ModelService } from 'src/app/services/model/model.service';\r\nimport { SocketService } from 'src/app/services/socket/socket.service';\r\nimport { RoomPrivateService } from '../../../services/roomPrivate/room-private.service';\r\nimport { PopupService } from '../../../services/popup/popup.service';\r\nimport { ProfilService } from '../../../services/profil/profil.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { PackModalComponent } from '../../../modals/pack-modal/pack-modal.component';\r\nimport { TimerService } from '../../../services/timer/timer.service';\r\nimport { TypeTimer } from 'src/app/interfaces/timer.interface';\r\nimport { ClientService } from '../../../services/client/client.service';\r\nimport { NotificationService } from '../../../services/notification/notification.service';\r\nimport { CreditTimer } from '../../../interfaces/timer.interface';\r\nimport { RoomVipService } from '../../../services/roomVip/room-vip.service';\r\n\r\n// Peer\r\nimport './../../modele/shim';\r\nimport Peer from \"peerjs\"\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { AlbumService } from 'src/app/services/album/album.service';\r\nimport * as $ from 'jquery';\r\n\r\ndeclare var initSettingVideoModel: any;\r\n\r\n\r\ninterface Stream {\r\n  clientId: number,\r\n  stream: MediaStream\r\n}\r\n\r\n@Component({\r\n  selector: 'app-live-private',\r\n  templateUrl: './live-private.component.html',\r\n  styleUrls: ['./live-private.component.scss', './../live.scss']\r\n})\r\nexport class LivePrivateComponent implements OnInit {\r\n  context: string = \"PRIVEE\";\r\n  imgPoster = \"assets/images/image.png\";\r\n  thrombone = \"assets/icons/paper-clip.svg\";\r\n  send = \"assets/icons/send-button.svg\";\r\n  dot = \"assets/icons/more_purple.svg\";\r\n  close = \"assets/icons/close.svg\";\r\n\r\n  toggleDot: boolean = false;\r\n\r\n  bg = \"assets/logos/dark-light.jpg\";\r\n  modelPseudo = '';\r\n  modelId: number;\r\n  idRoom: number;\r\n  actif: number;\r\n  message: string = '';\r\n  chatColor = \"black\";\r\n  clientId: number;\r\n  clientPseudo: string = null;\r\n  clientCredit: number  = 0.\r\n\r\n  messages: Chat[] = [];\r\n  leaved: boolean = false;\r\n\r\n  invitedVIP = false;\r\n  passedVIP = false;\r\n  roomVIP: string = null;\r\n\r\n  clients: ClientCam[] = [];\r\n\r\n  timer = {\r\n    id: 0,\r\n    hour: 0,\r\n    minute: 0,\r\n    second: 0,\r\n    fail: false,\r\n    reinit: false\r\n  };\r\n\r\n  show = {\r\n    id: 0,\r\n    credit: null,\r\n    second: null,\r\n    type: null\r\n  };\r\n\r\n  clientStream: Stream[] = [];\r\n\r\n  actifSub = new Subscription();\r\n  joinSub = new Subscription();\r\n  leaveSub = new Subscription();\r\n  messageSub = new Subscription();\r\n  modelLeaveSub = new Subscription();\r\n  modelPassedVipSub = new Subscription();\r\n  invitationVipSub = new Subscription();\r\n  peerSub = new Subscription();\r\n  newPeerSub = new Subscription();\r\n  responsePositiveInvitationVIPSub = new Subscription();;\r\n  responseNegativeInvitationVIPSub = new Subscription();;\r\n\r\n  albums = [];\r\n  loading: boolean = false;\r\n\r\n  showVideo: boolean = true;\r\n  showAudio: boolean = true;\r\n  // @HostListener(\"window:beforeunload\", [\"$event\"]) unloadHandler(event: Event) {\r\n  //   this.socketService.leavePrivate(this.idRoom, 'client');\r\n  // }\r\n\r\n  showEmojiPicker = false;\r\n  sets = [\r\n    'native',\r\n    'google',\r\n    'twitter',\r\n    'facebook',\r\n    'emojione',\r\n    'apple',\r\n    'messenger'\r\n  ]\r\n  set = 'google';\r\n\r\n    // WEB RTC VIDEO\r\n    @ViewChild('video_live_model', {static: true}) remote_video: ElementRef<HTMLVideoElement>;\r\n    // @ViewChild('video_live_client', {static: true}) video: ElementRef<HTMLVideoElement>;\r\n\r\n    private peer: Peer;\r\n    peerIdShare: string;\r\n    peerId: string = null;\r\n    private lazyStream: any;\r\n    currentPeer: any;\r\n    private peerList: Array<any> = [];\r\n\r\n\r\n    constructor(\r\n    @Inject(PLATFORM_ID) private _platform: Object,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private modelService: ModelService,\r\n    private roomPrivateService: RoomPrivateService,\r\n    private store: LocalStorageService,\r\n    private chatService: ChatService,\r\n    private socketService: SocketService,\r\n    private popupService: PopupService,\r\n    private profilService: ProfilService,\r\n    private dialog: MatDialog,\r\n    private timerService: TimerService,\r\n    private clientService: ClientService,\r\n    private notificationService: NotificationService,\r\n    private roomVipService: RoomVipService,\r\n    private albumService: AlbumService\r\n    ) {\r\n      this.peer = new Peer();\r\n      const id = this.route.snapshot.paramMap.get('model');\r\n      this.modelId = parseInt(id);\r\n    }\r\n\r\n  ngOnInit(): void {\r\n      if (!this.modelId) return null;\r\n      this.initLiveVideo();\r\n      this.getModel();\r\n      this.initColor();\r\n      this.clientService.lastRoom(this.router.url); // save last room for chat\r\n      $(document).ready(\r\n        function() {initSettingVideoModel();}\r\n      );\r\n  }\r\n\r\n  async ngOnDestroy() {\r\n    this.onStop();\r\n    (await this.creditTimer()).subscribe(\r\n      (data) => {\r\n        // console.log(\"Response credit timer \", data);\r\n      }\r\n    );\r\n\r\n    this.actifSub.unsubscribe();\r\n    this.joinSub.unsubscribe();\r\n    this.leaveSub.unsubscribe();\r\n    this.messageSub.unsubscribe();\r\n    this.modelLeaveSub.unsubscribe();\r\n    this.modelPassedVipSub.unsubscribe();\r\n    this.invitationVipSub.unsubscribe();\r\n    this.peerSub.unsubscribe();\r\n    this.newPeerSub.unsubscribe();\r\n    this.responseNegativeInvitationVIPSub.unsubscribe();\r\n    this.responsePositiveInvitationVIPSub.unsubscribe();\r\n  }\r\n\r\n  getModel() {\r\n    this.modelService.getModel(this.modelId).subscribe(\r\n      (data) => {\r\n        // console.log(\"Le model \", data);\r\n        this.bg = data.path_soft;\r\n        this.modelPseudo = data.pseudo;\r\n        if (data.profile.status === \"En vip\") {\r\n          this.passedVIP = true;\r\n          this.clearTimer();\r\n          // return null;\r\n        } else if (data.profile.status === \"En ligne\") {\r\n          this.obsolete();\r\n          this.clearTimer();\r\n          // return null;\r\n        }\r\n        this.getInfo();\r\n      }\r\n    )\r\n  }\r\n\r\n  getInfo() {\r\n    this.clientService.getMyInfos().subscribe( // My info\r\n      (data) => {\r\n        console.log(\"My info \", data)\r\n        this.clientId = data.id;\r\n        this.clientPseudo = data.pseudo;\r\n        this.clientCredit = data.credit ? data.credit.credit : 0; // Client Credit\r\n        this.getInfoRoom();\r\n      }\r\n    )\r\n  }\r\n\r\n  async getCredit() {\r\n    return await this.clientService.getCredit().subscribe(\r\n      (data) => {\r\n        this.clientCredit = data.credit;\r\n        // console.log('Client credit ', this.clientCredit);\r\n        if (this.show.credit < this.clientCredit) return null;\r\n        this.timer.fail = true;\r\n        // if Not leaved\r\n        if (!this.timer.reinit) {\r\n          this.notificationService.failure(\"CREDIT INSUFFISANT\", \"Veuillez vous recharger.\");\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  async getInfoRoom() {\r\n    await this.roomPrivateService.getRoomModel(this.modelId).subscribe(\r\n      async (data) => {\r\n        console.log('Info room ', data);\r\n        this.idRoom = data.idRoom;\r\n\r\n        if (data.idRoom === null) {\r\n          this.obsolete();\r\n          this.idRoom = 0;\r\n          this.clearTimer();\r\n        }\r\n        this.getMessages();\r\n        this.initSocket()\r\n      }\r\n    )\r\n  }\r\n\r\n  async getActifs() {\r\n    await this.roomPrivateService.getActif(this.idRoom).subscribe(\r\n      (data) => {\r\n        console.log(\"Get les actifs \", data);\r\n        this.actif = data.clients.length + 1; // +1 for the model\r\n        this.clients = data.clients;\r\n      }\r\n    )\r\n  }\r\n\r\n  getMessages() {\r\n    this.chatService.getMessage(this.idRoom, 'private').subscribe(\r\n      (data) => {\r\n        this.messages = data;\r\n      }\r\n    )\r\n  }\r\n\r\n  async initSocket() {\r\n\r\n    this.joinSub = this.socketService.listen(`joined ${this.idRoom}P`).subscribe(\r\n      (data: any) => {\r\n        // console.log('Joined ', data);\r\n        this.callPeerClient(data.id, data.peerId);\r\n        this.getActifs();\r\n      }\r\n    );\r\n\r\n    this.leaveSub = this.socketService.listen(`leaved ${this.idRoom}P`).subscribe(\r\n      (data: any) => {\r\n        // console.log('leaved ', data);\r\n        this.removeStream(data.clientId);\r\n        this.getActifs();\r\n      }\r\n    );\r\n\r\n    this.messageSub = this.socketService.listen(`message ${this.idRoom}P`).subscribe(\r\n      (data) => {\r\n        this.getMessages();\r\n      }\r\n    );\r\n\r\n    // Model leaved the room\r\n    this.modelLeaveSub = this.socketService.listen(`model leaved ${this.idRoom}P`).subscribe(\r\n      (data) => {\r\n        this.leaved = true;\r\n        this.actif--;\r\n        this.popupService.info('/client/accueil/registered','LIVE INDISPONIBLE',\r\n        `${this.modelPseudo} a fermé le live de ce room`);\r\n      }\r\n    );\r\n\r\n    // Model passed to VIP\r\n    this.modelPassedVipSub = this.socketService.listen(`Pass to VIP ${this.idRoom}P`).subscribe(\r\n      (data: any) => {\r\n        this.passedVIP = true;\r\n      }\r\n    );\r\n\r\n    // Invitation to pass in VIP\r\n    this.invitationVipSub = this.socketService.listen(`pass VIP ${this.clientId} ${this.idRoom}P`).subscribe(\r\n      (data: any) => {\r\n        this.invitedVIP = true;\r\n        // this.invitationVIP();\r\n        this.liveVIP();\r\n        this.roomVIP = data.roomVIP;\r\n        this.store.set(\"roomVIP\", this.roomVIP);\r\n      }\r\n    );\r\n\r\n    this.responsePositiveInvitationVIPSub = this.socketService.listen(`response positive invitation model to vip ${this.idRoom}P ${this.clientId}`).subscribe(\r\n      (data) => {\r\n          this.loading = false;\r\n          this.liveVIP();\r\n      }\r\n    );\r\n\r\n    this.responseNegativeInvitationVIPSub = this.socketService.listen(`response negative invitation model to vip ${this.idRoom}P ${this.clientId}`).subscribe(\r\n      (data) => {\r\n          this.loading = false;\r\n          this.popupService.info(null, 'LIVE VIP',\r\n          `${this.modelPseudo} n'est pas disponible pour le moment.`);\r\n      }\r\n    );\r\n\r\n    // Invitation to pass in VIP\r\n    this.peerSub = this.socketService.listen(`ans peerId ${this.clientId} ${this.idRoom}P`).subscribe(\r\n        (data: {peerId: any, room: string, clientId: number}) => {\r\n            console.log(\"ans peerId \", data);\r\n            this.peerIdShare = data.peerId;\r\n            this.connectWithPeer();\r\n      }\r\n    );\r\n\r\n    this.newPeerSub = this.socketService.listen(`new model peerId ${this.idRoom}P`).subscribe(\r\n      (data: {role: string, modelId: number, room: string, peerId: string}) => {\r\n          console.log(\"new model peerId\");\r\n          this.peerIdShare = data.peerId;\r\n          this.connectWithPeer();\r\n      }\r\n    );\r\n\r\n    this.initTimer();\r\n    if (this.peerId) {\r\n      this.socketService.askModelPeerId({peerId: this.peerId,\r\n        room: this.idRoom+'P', clientId: this.clientId});\r\n      await this.roomPrivateService.updateActif(this.idRoom, true, 'private', this.peerId).subscribe(\r\n          async (data) => {\r\n            // console.log(\"Retour Update Actif in room Service \", data);\r\n            await this.socketService.joinPrivate(this.idRoom, this.modelId,\r\n              this.clientId, this.clientPseudo, this.peerId);\r\n            this.getActifs();\r\n          }\r\n      );\r\n    } else {\r\n        this.relaunchPeerId();\r\n    }\r\n\r\n    this.getAlbums();\r\n  }\r\n\r\n  obsolete() {\r\n    this.leaved = true;\r\n    this.popupService.info('/client/accueil/registered','LIVE INDISPONIBLE',\r\n    `Aucun live n\\'est lancé dans ce room`);\r\n    this.onStop()\r\n  }\r\n\r\n  initColor() {\r\n    if (this.store.get(\"ticket_chat\")) {\r\n      this.chatColor = this.store.get(\"ticket_chat\");\r\n      return true;\r\n    };\r\n    this.roomPrivateService.getColor().subscribe(\r\n      (data) => {\r\n        this.chatColor = data.color;\r\n        this.store.set(\"ticket_chat\", data.color);\r\n      }\r\n    )\r\n  }\r\n\r\n  sendMessage() {\r\n    if (!this.message) return;\r\n    const data: Chat = {\r\n      idRoom: this.idRoom,\r\n      message: this.message,\r\n      type_source: 'client',\r\n      id_source: this.clientId,\r\n      code_couleur: this.chatColor,\r\n      type_chat: 'private'\r\n    }\r\n    this.message = null;\r\n    this.chatService.postMessage(data).subscribe(\r\n      (data) => {\r\n        this.getMessages();\r\n        const msg: ChatSocket = {\r\n          room: this.idRoom + 'P',\r\n          role: 'client',\r\n          id: this.clientId,\r\n          message: this.message\r\n        }\r\n        this.socketService.sendMessage(msg);\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  toggleDots() {\r\n    this.toggleDot = !this.toggleDot;\r\n  }\r\n\r\n  invitationToVIP() {\r\n    this.loading = true;\r\n    this.socketService.clientInviteModelToVIP(this.idRoom+'P', this.clientId, this.clientPseudo,\r\n      this.modelId);\r\n    setTimeout(() => {\r\n        if (this.loading) this.loading = false;\r\n    }, 10000);\r\n  }\r\n\r\n  async liveVIP() {\r\n    return (await this.leaveTimer()).subscribe(\r\n      async (data) => {\r\n        this.timer.reinit = true;\r\n        (await this.creditTimer()).subscribe(\r\n          (data: { credit: number; id: number; updatedAt: Date; }) => {\r\n            this.clientCredit = data.credit ? data.credit : 0;\r\n            if (data.credit <= 0) {\r\n              this.aucunCredit();\r\n              return null;\r\n            } else if (data.credit <= (this.show.credit * 2)) {\r\n              this.creditInsuffisant();\r\n              return null;\r\n            }\r\n            this.profilService.getSpecificProfil(this.modelId).subscribe(\r\n              async (data) => {\r\n                if (data.status === \"En vip\" && this.getInfoRoomVIP()) {\r\n                  this.router.navigate(['/client/live/vip', { model: this.modelId }]);\r\n                } else {\r\n                  this.popupService.info(null, 'LIVE VIP INDISPONIBLE',\r\n                    `${this.modelPseudo} ne vous a pas invité en VIP.`);\r\n                }\r\n              }\r\n            );\r\n\r\n          })\r\n      }\r\n    );\r\n  }\r\n\r\n  async getInfoRoomVIP() {\r\n    return await this.roomVipService.getRoomModel(this.modelId).subscribe(\r\n      (data) => {\r\n        if (data.idRoom === null) {return false;}\r\n        if (this.clientId !== data.clientId) {return false;}\r\n        return true;\r\n      })\r\n  }\r\n\r\n  async liveOut() {\r\n    // this.creditTimer();\r\n    this.onStop();\r\n    await (await this.leaveTimer()).subscribe(\r\n      async (data) => {\r\n        this.timer.reinit = true;\r\n        await this.roomPrivateService.updateActif(this.idRoom, false, 'private').subscribe(\r\n          (data) => {\r\n            this.socketService.leavePrivate(this.idRoom, 'client', this.clientId).then(\r\n              (data) => {\r\n                this.roomPrivateService.leaveRoom();\r\n                this.router.navigate(['/client/accueil/registered']);\r\n              }\r\n            );\r\n          }\r\n        );\r\n      })\r\n  }\r\n\r\n  buy() {\r\n    const dialogRef = this.dialog.open(PackModalComponent, {\r\n      width: '80vh',\r\n      data: {}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {});\r\n  }\r\n\r\n  invitationVIP() {\r\n    this.popupService.info(null,'LIVE VIP',\r\n    `${this.modelPseudo} vous invite à passer en VIP`);\r\n  }\r\n\r\n\r\n  // Timer\r\n  async initTimer() {\r\n    this.timerService.getTimer(this.modelId, TypeTimer.PRIVATE).subscribe(\r\n      async (data) => {\r\n        // console.log('Timer ', data);\r\n        const created: Date = data.createdAt;\r\n        const updated: Date = data.updatedAt;\r\n        this.timer.id = data.id;\r\n        // console.log(created.toString(), \" to \", updated.toString());\r\n        const {hour, minute, second} = this.timerService.convertTime(created.toString(), updated.toString());\r\n        this.timer.hour = hour;\r\n        this.timer.minute = minute;\r\n        this.timer.second = second;\r\n        // console.log(this.timer.hour, ':', this.timer.minute, ':', this.timer.second);\r\n        await this.getCostShow();\r\n      }\r\n    )\r\n  }\r\n\r\n  async getCostShow() {\r\n    return await this.timerService.getCostShow(TypeTimer.PRIVATE).subscribe(\r\n      (data: any) => {\r\n        this.show.id = data.id;\r\n        this.show.credit = data.credit;\r\n        this.show.second = data.second;\r\n        this.show.type = data.type;\r\n        // console.log('Show cost ' , this.show, \" - credit - \" , this.clientCredit);\r\n        if (this.clientCredit == 0) {\r\n          this.aucunCredit();\r\n          return null;\r\n        } else if (this.clientCredit <= (this.show.credit * 2)) {\r\n          this.creditInsuffisant();\r\n          return null;\r\n        }\r\n        this.beginTimer();\r\n      }\r\n    )\r\n  }\r\n\r\n  creditInsuffisant() {\r\n    this.popupService.info(null,'CREDIT INSUFFISANT',\r\n    `Vous n\\'avez presque plus de crédit. Veuillez vous recharger.`);\r\n    setTimeout(\r\n      () => {\r\n        this.getCredit();\r\n      }, 20000\r\n    )\r\n  }\r\n\r\n  aucunCredit() {\r\n    this.timer.fail = true;\r\n    this.popupService.info('/client/achat_de_credit','ACHAT DE CREDIT',\r\n    `Veuillez vous recharger.`);\r\n  }\r\n\r\n  // Timer set to 0\r\n  clearTimer() {\r\n    this.timer.reinit = true;\r\n  }\r\n\r\n  async leaveTimer(): Promise<Observable<any>> {\r\n    const data = {\r\n      id: this.timer.id,\r\n      type: TypeTimer.PRIVATE,\r\n      leaved: true,\r\n      push: new Date().toString()\r\n    }\r\n\r\n    return await this.timerService.updateTimer(data);\r\n  }\r\n\r\n  async beginTimer() {\r\n    const delay = this.show.second * 1000;\r\n    // console.log(delay, \" ms \");\r\n    await (await this.creditTimer()).subscribe( // launch main creditation\r\n      (data) => {\r\n        // console.log(\"Response credit timer \", data);\r\n        this.clientCredit = data.credit ? data.credit : 0;\r\n        if (data.credit <= 0) {\r\n          this.aucunCredit();\r\n          return null;\r\n        } else if (data.credit <= (this.show.credit * 2)) {\r\n          this.creditInsuffisant();\r\n          return null;\r\n        }\r\n      }\r\n    );\r\n    setInterval(\r\n      async () => {\r\n        if (!this.timer.reinit) {\r\n          await (await this.creditTimer()).subscribe(\r\n            (data) => {\r\n              // console.log(\"Response credit timer \", data);\r\n              this.clientCredit = data.credit ? data.credit : 0;\r\n              if (data.credit <= 0) {\r\n                this.aucunCredit();\r\n                return null;\r\n              } else if (data.credit <= (this.show.credit * 2)) {\r\n                this.creditInsuffisant();\r\n                return null;\r\n              }\r\n            }\r\n          );\r\n        }\r\n      }, delay\r\n    )\r\n  }\r\n\r\n  async creditTimer(): Promise<Observable<any>> {\r\n    if ((this.clientId === undefined) || (this.show.credit == null)) return null;\r\n    const data: CreditTimer = {\r\n      clientId: this.clientId,\r\n      modelId: this.modelId,\r\n      timerId: this.timer.id,\r\n      showCredit: this.show.credit,\r\n      showSecond: this.show.second,\r\n      showType: this.show.type,\r\n      roomId: this.idRoom\r\n    }\r\n    // console.log(\"credit timer post \", data);\r\n    return await this.timerService.creditTimer(data);\r\n  }\r\n\r\n    // WEB RTC - LIVE VIDEO\r\n    initLiveVideo() {\r\n      this.onStart();\r\n      this.getPeerId();\r\n    }\r\n\r\n    onStart(){\r\n      if(isPlatformBrowser(this._platform) && 'mediaDevices' in navigator) {\r\n        navigator.mediaDevices.getUserMedia({video: true, audio: false}).then((ms: MediaStream) => {\r\n          // const _video = this.video.nativeElement;\r\n          // _video.srcObject = ms;\r\n          // _video.play();\r\n          // console.log('my stream ', ms)\r\n          this.clientStream.push({\r\n            clientId: this.clientId,\r\n            stream: ms\r\n          });\r\n        });\r\n      }\r\n    }\r\n\r\n    onStop() {\r\n      this.removeStream(this.clientId)\r\n      // if (this.video && this.video.nativeElement.srcObject) {\r\n      //   this.video.nativeElement.pause();\r\n      //   if ((this.video.nativeElement.srcObject as MediaStream).getVideoTracks()[0]) {\r\n      //     (this.video.nativeElement.srcObject as MediaStream).getVideoTracks()[0].stop();\r\n      //   }\r\n      //   this.video.nativeElement.srcObject = null;\r\n      // }\r\n    }\r\n\r\n    relaunchPeerId() {\r\n      this.peer.on('open', (id) => {\r\n        console.log(\"Relaunch Peer Id \", id);\r\n        this.peerId = id;\r\n        // Send peer client\r\n        this.socketService.askModelPeerId({peerId: this.peerId,\r\n          room: this.idRoom+'P', clientId: this.clientId});\r\n        this.roomPrivateService.updateActif(this.idRoom, true, 'private', this.peerId).subscribe(\r\n            (data) => {\r\n                this.socketService.joinPrivate(this.idRoom, this.modelId,\r\n                this.clientId, this.clientPseudo, this.peerId\r\n                );\r\n              // console.log(\"Retour Update Actif in room Service \", data);\r\n              this.getActifs();\r\n            }\r\n        );\r\n      });\r\n    }\r\n\r\n    private getPeerId = () => {\r\n      console.log('Get peer waiting...')\r\n      this.peer.on('open', (id) => {\r\n        console.log(\"Peer Id \", id);\r\n        this.peerId = id;\r\n        // Send peer client\r\n      });\r\n\r\n      this.peer.on('call', (call) => {\r\n        this.onStop();\r\n        navigator.mediaDevices.getUserMedia({\r\n          video: true,\r\n          audio: true\r\n        }).then((stream) => {\r\n          this.lazyStream = stream;\r\n          // this.clientStream.push({\r\n          //   clientId: this.clientStream.length,\r\n          //   stream: stream\r\n          // });\r\n          // const _video = this.video.nativeElement;\r\n          // _video.srcObject = stream;\r\n          // _video.play();\r\n\r\n          call.answer(stream);\r\n          call.on('stream', (remoteStream) => {\r\n            if (!this.peerList.includes(call.peer)) {\r\n              this.streamRemoteVideo(remoteStream);\r\n              this.currentPeer = call.peerConnection;\r\n              this.peerList.push(call.peer);\r\n            }\r\n          });\r\n        }).catch(err => {\r\n          console.log(err + ' - Unable to get media');\r\n        });\r\n      });\r\n    }\r\n\r\n    connectWithPeer(): void {\r\n      this.callPeer(this.peerIdShare);\r\n    }\r\n\r\n    private callPeer(id: string): void {\r\n      console.log(\"Client call someone\");\r\n      this.onStop();\r\n      navigator.mediaDevices.getUserMedia({\r\n        video: true,\r\n        audio: true\r\n      }).then((stream) => {\r\n        this.lazyStream = stream;\r\n        this.clientStream.push({\r\n          clientId: this.clientStream.length,\r\n          stream: stream\r\n        });\r\n        console.log(\"Get client stream \", stream);\r\n        const call = this.peer.call(id, stream);\r\n        console.log(\"After call model\");\r\n        call.on('stream', (remoteStream) => {\r\n          console.log(\"On stream in client\");\r\n          if (!this.peerList.includes(call.peer)) {\r\n            this.streamRemoteVideo(remoteStream);\r\n            this.currentPeer = call.peerConnection;\r\n            this.peerList.push(call.peer);\r\n          }\r\n        });\r\n      }).catch(err => {\r\n        console.log(err + 'Unable to connect');\r\n      });\r\n    }\r\n\r\n    private streamRemoteVideo(stream: any): void {\r\n      const _video = this.remote_video.nativeElement;\r\n      _video.srcObject = stream;\r\n      _video.play();\r\n      // const video = document.createElement('video');\r\n      // video.classList.add('video');\r\n      // video.srcObject = stream;\r\n      // video.play();\r\n      // document.getElementById('remote-video').append(video);\r\n    }\r\n\r\n    callPeerClient(clientId: number, clientPeer: string): void {\r\n      console.log(\"Client call other client\");\r\n      this.onStop();\r\n      navigator.mediaDevices.getUserMedia({\r\n        video: true,\r\n        audio: true\r\n      }).then((stream) => {\r\n        this.lazyStream = stream;\r\n        console.log(\"Get client stream \", stream);\r\n        const call = this.peer.call(clientPeer, stream);\r\n        console.log(\"After call model\");\r\n        call.on('stream', (remoteStream) => {\r\n          console.log(\"On stream in client\");\r\n          if (!this.peerList.includes(call.peer)) {\r\n            this.addOtherClientstreamRemoteVideo(clientId, remoteStream);\r\n            this.currentPeer = call.peerConnection;\r\n            this.peerList.push(call.peer);\r\n          }\r\n        });\r\n      }).catch(err => {\r\n        console.log(err + 'Unable to connect');\r\n      });\r\n    }\r\n\r\n    private addOtherClientstreamRemoteVideo(clientId: number, stream: any): void {\r\n      this.clientStream.push({\r\n        clientId,\r\n        stream: stream\r\n      });\r\n    }\r\n\r\n\r\n    getAlbums() {\r\n      const data = {\r\n        modelId : this.modelId,\r\n        type_album: 'private'\r\n      }\r\n      this.albumService.getModelAlbums(data).subscribe(\r\n        (data: any) => {\r\n          for (let i = 0; i < data.length; i++) {\r\n            this.albums.push({\r\n              url: data[i].path_album\r\n            })\r\n          }\r\n        }\r\n      )\r\n    }\r\n\r\n    removeStream(clientId: number) {\r\n      console.log('Remove stream ', clientId)\r\n      const index = this.clientStream.findIndex(element => element.clientId === clientId)\r\n      console.log(index)\r\n      console.log(this.clientStream)\r\n      this.clientStream.splice(index, 1)\r\n    }\r\n\r\n    toggleVideo() {\r\n      this.showVideo = !this.showVideo;\r\n      this.onStop();\r\n      this.onStart();\r\n    }\r\n\r\n    toggleAudio() {\r\n      this.showAudio = !this.showAudio;\r\n      this.onStop();\r\n      this.onStart();\r\n    }\r\n\r\n        // -------- EMOJI -----------------\r\n\r\n        toggleEmojiPicker() {\r\n          this.showEmojiPicker = !this.showEmojiPicker;\r\n        }\r\n\r\n        addEmoji(event) {\r\n          const {message} = this;\r\n          console.log(this.message)\r\n          console.log(`${event.emoji.native}`)\r\n          const text = `${message}${event.emoji.native}`;\r\n\r\n          this.message = text;\r\n          console.log(this.message)\r\n          // this.showEmojiPicker = false;\r\n        }\r\n\r\n\r\n        focus() {\r\n          this.showEmojiPicker = false;\r\n        }\r\n}\r\n","<app-header connected=\"true\"></app-header>\n\n<div class=\"main_live\" [ngClass]=\"{'dry_up': timer.fail}\">\n  <img [src]=\"dot\" alt=\"\" id=\"dots\" (click)=\"toggleDots()\">\n  <div class=\"contain_top\">\n    <div class=\"contain_left\">\n      <app-topbar [context]=\"context\" [actif]=\"actif\"\n      [hour]=\"this.timer.hour\"\n      [minute]=\"this.timer.minute\"\n      [second]=\"this.timer.second\"\n      [reinit]=\"this.timer.reinit\"\n      [leaved]=\"leaved\"\n      ></app-topbar>\n      <div class=\"show_live_left\" id=\"show_live_left\" [ngClass]=\"{'dry_up': leaved}\">\n\n        <figure id=\"videoContainer\" data-fullscreen=\"false\" style=\"margin: 0px;\">\n          <!-- [poster]=\"info.bg\" -->\n          <video autoplay id=\"video_live_model\" #video_live_model muted=\"muted\"></video>\n        </figure>\n\n        <div id=\"video-controls\" class=\"controls\">\n          <div>\n            <button id=\"screen\" type=\"button\" class=\"btn_control\" (click)=\"toggleVideo()\">\n              <img src=\"./../../../../assets/icons/video-camera.svg\" alt=\"\" *ngIf=\"showVideo\">\n              <img src=\"./../../../../assets/icons/no-video.svg\" alt=\"\" *ngIf=\"!showVideo\">\n            </button>\n          </div>\n\n          <div>\n            <button id=\"sound\" type=\"button\" class=\"btn_control\" (click)=\"toggleAudio()\">\n              <img src=\"./../../../../assets/icons/volume.svg\" alt=\"\" *ngIf=\"showAudio\">\n              <img src=\"./../../../../assets/icons/mute.svg\" alt=\"\" *ngIf=\"!showAudio\">\n            </button>\n          </div>\n\n          <div>\n            <button id=\"fs\" type=\"button\" class=\"btn_control\">\n              <img src=\"./../../../../assets/icons/full-size.svg\" alt=\"\">\n            </button>\n          </div>\n        </div>\n\n        <div class=\"come_on\" *ngIf=\"passedVIP\">\n          {{modelPseudo}} est passée en VIP\n        </div>\n\n        <app-album-live [albums]=\"albums\"></app-album-live>\n\n      </div>\n    </div>\n    <div class=\"contain_right\">\n      <div class=\"show_live_right\">\n        <mat-tab-group mat-align-tabs=\"center\">\n          <mat-tab label=\"Live Cam\">\n            <app-live-private-cam [clients]=\"clients\" [streams]=\"clientStream\" [myId]=\"clientId\"></app-live-private-cam>\n          </mat-tab>\n          <mat-tab label=\"Live Chat\">\n            <app-live-free-chat [modelId]=\"modelId\" [messages]=\"messages\"\n            [pseudoModel]=\"modelPseudo\" [leaved]=\"leaved\" [profil]=\"bg\"></app-live-free-chat>\n              </mat-tab>\n        </mat-tab-group>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"contain_bottom\">\n    <div class=\"contain_left\">\n      <div class=\"contain_action contain_action_desktop\">\n        <div class=\"show_vip btn_show\">\n          <button class=\"btn btn_vip lighter\" (click)=\"invitationToVIP()\">Passer en show VIP</button>\n          <p>15 crédits / mn</p>\n        </div>\n        <div class=\"buy_credit btn_show\">\n          <button class=\"btn btn_buy lighter\" (click)=\"buy()\">Acheter des crédits</button>\n          <p>15 crédits / mn</p>\n        </div>\n        <div class=\"out_show btn_show\">\n          <button class=\"btn btn_out_show lighter\" (click)=\"liveOut()\">Sortir du Show</button>\n          <p>15 crédits / mn</p>\n        </div>\n      </div>\n\n      <!-- // mobile -->\n      <div class=\"contain_action contain_action_mobile\" *ngIf=\"toggleDot\">\n        <div class=\"show_vip btn_show\">\n          <button class=\"btn btn_vip lighter\" (click)=\"invitationToVIP()\">Passer en show VIP</button>\n          <p>15 crédits / mn</p>\n        </div>\n        <div class=\"buy_credit btn_show\">\n          <button class=\"btn btn_buy lighter\" (click)=\"buy()\">Acheter des crédits</button>\n          <!-- <p>15 crédits / mn</p> -->\n        </div>\n        <div class=\"out_show btn_show\">\n          <button class=\"btn btn_out_show lighter\" (click)=\"liveOut()\">Sortir du Show</button>\n          <!-- <p>15 crédits / mn</p> -->\n        </div>\n        <!-- <div class=\"contain_close\">\n          <img [src]=\"close\" alt=\"\" id=\"close\" (click)=\"toggleDots()\">\n        </div> -->\n      </div>\n\n    </div>\n    <div class=\"contain_right\">\n      <div class=\"contain_message\">\n        <emoji-mart class=\"emoji-mart\" set=\"{{set}}\"\n        *ngIf=\"showEmojiPicker\" (emojiSelect)=\"addEmoji($event)\"\n        searchIcons='./../../../../assets/icons/admin-icons/search.png'\n        title=\"\"\n        ></emoji-mart>\n        <div class=\"contain_thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n        </div>\n        <form (ngSubmit)=\"sendMessage()\">\n          <div class=\"input_text\">\n              <input type=\"text\" name=\"message\" autocomplete=\"off\" (focus)=\"focus()\"\n              placeholder=\"Entrer votre message ici ...\" [(ngModel)]=\"message\">\n              <button type=\"button\" (click) =\"toggleEmojiPicker()\">😀</button><br>\n              <button type=\"submit\">\n                <div class=\"p\">\n                  <img [src]=\"send\" alt=\"\">\n                </div>\n              </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n\n</div>\n\n<div class=\"lds-spinner\" *ngIf=\"loading\">\n  <div></div><div></div><div></div><div></div>\n  <div></div><div></div><div></div><div></div>\n  <div></div><div></div><div></div><div></div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-enter',\n  templateUrl: './enter.component.html',\n  styleUrls: ['./enter.component.scss']\n})\nexport class EnterComponent implements OnInit, OnDestroy {\n  logoDark = \"assets/logos/dark-light.jpg\";\n  alert = \"assets/icons/alert.png\";\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy() {  }\n\n}\n","<app-header clickable=\"false\"></app-header>\n\n<div class=\"main_enter\">\n  <div class=\"enter_img\">\n    <img [src]=\"logoDark\" alt=\"\">\n  </div>\n  <div class=\"enter_content\">\n    <div>\n      <img [src]=\"alert\" alt=\"\" class=\"img_alert\">\n    </div>\n    <div class=\"content content_one\">\n      SITE POUR ADULTE PLUS DE 18 ANS <br>\n      <span>VERIFICATION PAR CARTE BANCAIRE</span>\n    </div>\n\n    <div class=\"content\">\n        Betweenus contient du contenu reservé aux adultes\n        <br>\n        En utilisant ce site, vous reconnaissez avoir plus de 18 ans, avoir\n        lu notre Politique de Confidentialité et accepté nos Conditions\n        Générales.\n    </div>\n\n    <div class=\" content\">\n        Si vous êtes mineurs, veuillez quitter ce site en cliquant sur SORTIR ci-dessous.\n    </div>\n\n    <div class=\"content\">\n        En cliquant sur ENTRER, vous déclarez être majeur et adhérez au contrat\n        d'utilisation de ce site.\n    </div>\n\n    <div class=\"content\">\n        Nous utilisons des cookies pour améliorer votre expérience d'utilisateur.\n        En poursuivant votre navigation, vous acceptez l'utilisation de cookies, notamment de tiers.\n        Politique relative aux cookies.\n    </div>\n\n    <div class=\"enter_action\">\n      <button class=\"btn_out btn lighter\" routerLink=\"/bye\">\n        SORTIR\n      </button>\n      <button class=\"btn_in btn lighter\" routerLink=\"/accueil\">\n        ENTRER\n      </button>\n    </div>\n    <!-- <div class=\"contain_btn\">\n      <button class=\"btn btn_confirm\">\n        CONFIRMER\n      </button>\n    </div> -->\n  </div>\n\n  <!-- <div class=\"enter_action\">\n    <button class=\"btn_out btn lighter\">\n      SORTIR\n    </button>\n    <button class=\"btn_in btn lighter\">\n      ENTRER\n    </button>\n  </div> -->\n</div>\n","<app-header connected=\"true\"></app-header>\n\n\n<div class=\"main_live\">\n  <img [src]=\"dot\" alt=\"\" id=\"dots\" (click)=\"toggleDots()\">\n  <div class=\"contain_top\">\n    <div class=\"contain_left\">\n      <app-topbar [context]=\"context\" visible=\"false\" minuteur=\"false\" [actif]=\"actif\"></app-topbar>\n      <div class=\"show_live_left\">\n\n        <div class=\"bg_left\"\n        [ngStyle]=\"{'background-image': 'url(' + bg + ')'}\"\n        [ngClass]=\"{'pass_private': passedToPrivate ||leaved}\"></div>\n\n        <div class=\"come_on\" *ngIf=\"passedToPrivate\">\n          Venez me joindre en live privé\n        </div>\n\n        <div class=\"come_on\" *ngIf=\"passedVIP\">\n          Indisponible pour le moment. Je suis en VIP\n        </div>\n\n        <app-album-live [albums]=\"albums\"></app-album-live>\n\n      </div>\n\n    </div>\n    <div class=\"contain_right\">\n      <div class=\"show_live_right\">\n        <div class=\"header_chat\">\n          <p>&gt;</p>\n          <div>\n            Live Chat\n          </div>\n        </div>\n        <app-live-free-chat [modelId]=\"modelId\" [messages]=\"messages\"\n        [pseudoModel]=\"modelPseudo\" [leaved]=\"leaved\" [profil]=\"bg\"\n        [passedToPrivate]=\"passedToPrivate\"></app-live-free-chat>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"contain_bottom\">\n    <div class=\"contain_left\">\n      <div class=\"contain_action contain_action_desktop\">\n        <div class=\"show_private btn_show\">\n          <button class=\"btn btn_private lighter\" (click)=\"livePrivate()\">Passer en Privée</button>\n          <p>5 crédits / mn</p>\n        </div>\n        <div class=\"show_vip btn_show\">\n          <button class=\"btn btn_vip lighter\" (click)=\"liveVIP()\">Passer en show VIP</button>\n          <p>15 crédits / mn</p>\n        </div>\n        <div class=\"buy_credit btn_show\">\n          <button class=\"btn btn_buy lighter\" (click)=\"buy()\">Acheter des crédits</button>\n          <p>15 crédits / mn</p>\n        </div>\n      </div>\n\n      <!-- // mobile -->\n      <div class=\"contain_action contain_action_mobile\" *ngIf=\"toggleDot\">\n        <div class=\"show_private btn_show\">\n          <button class=\"btn btn_private lighter\" (click)=\"livePrivate()\">Passer en Privée</button>\n          <p>5 crédits / mn</p>\n        </div>\n        <div class=\"show_vip btn_show\">\n          <button class=\"btn btn_vip lighter\" (click)=\"liveVIP()\">Passer en show VIP</button>\n          <p>15 crédits / mn</p>\n        </div>\n        <div class=\"buy_credit btn_show\">\n          <button class=\"btn btn_buy lighter\" (click)=\"buy()\">Acheter des crédits</button>\n          <p>15 crédits / mn</p>\n        </div>\n      </div>\n\n    </div>\n    <div class=\"contain_right\">\n      <div class=\"contain_message\">\n        <emoji-mart class=\"emoji-mart\" set=\"{{set}}\"\n        *ngIf=\"showEmojiPicker\" (emojiSelect)=\"addEmoji($event)\"\n        searchIcons='./../../../../assets/icons/admin-icons/search.png'\n        title=\"\"\n        ></emoji-mart>\n        <div class=\"contain_thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n          <img [src]=\"thrombone\" alt=\"\" class=\"thrombone\">\n        </div>\n        <form (ngSubmit)=\"sendMessage()\">\n          <div class=\"input_text\">\n              <input type=\"text\" name=\"message\" autocomplete=\"off\" (focus)=\"focus()\"\n              placeholder=\"Entrer votre message ici ...\" [(ngModel)]=\"message\">\n              <button type=\"button\" (click) =\"toggleEmojiPicker()\">😀</button><br>\n              <button type=\"submit\">\n                <div class=\"p\">\n                  <img [src]=\"send\" alt=\"\">\n                </div>\n              </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n\n</div>\n\n<div class=\"lds-spinner\" *ngIf=\"loading\">\n  <div></div><div></div><div></div><div></div>\n  <div></div><div></div><div></div><div></div>\n  <div></div><div></div><div></div><div></div>\n</div>\n","import { Component, Input, OnInit, OnDestroy, HostListener } from '@angular/core';\r\nimport { NavigationExtras, Router, RouterStateSnapshot, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { LocalStorageService } from 'ngx-localstorage';\r\nimport { ModelService } from '../../../services/model/model.service';\r\nimport { RoomService } from '../../../services/room/room.service';\r\nimport { ChatService } from '../../../services/chat/chat.service';\r\nimport { Chat } from 'src/app/interfaces/chat.interface';\r\nimport { SocketService, ChatSocket } from '../../../services/socket/socket.service';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { ProfilService } from '../../../services/profil/profil.service';\r\nimport { PopupService } from '../../../services/popup/popup.service';\r\nimport { ClientService } from '../../../services/client/client.service';\r\nimport { AlbumService } from '../../../services/album/album.service';\r\nimport { TypeTimer } from 'src/app/interfaces/timer.interface';\r\nimport { TimerService } from '../../../services/timer/timer.service';\r\nimport { RoomVipService } from '../../../services/roomVip/room-vip.service';\r\n\r\n@Component({\r\n  selector: 'app-live-free',\r\n  templateUrl: './live-free.component.html',\r\n  styleUrls: ['./live-free.component.scss', './../live.scss']\r\n})\r\nexport class LiveFreeComponent implements OnInit, OnDestroy {\r\n  context: string = \"FREE\";\r\n  imgPoster = \"assets/images/image.png\";\r\n  thrombone = \"assets/icons/paper-clip.svg\";\r\n  send = \"assets/icons/send-button.svg\";\r\n  dot = \"assets/icons/more_purple.svg\";\r\n  close = \"assets/icons/close.svg\";\r\n\r\n  bg = \"assets/logos/dark-light.jpg\";\r\n  modelPseudo = '';\r\n  modelId: number;\r\n  idRoom: number;\r\n  actif: number;\r\n  message: string = '';\r\n  chatColor = \"black\";\r\n  id: number;\r\n\r\n  toggleDot: boolean = false;\r\n  messages: Chat[] = [];\r\n  leaved: boolean = false;\r\n  passedToPrivate: boolean = false;\r\n  passedVIP: boolean = false;\r\n  actifSub = new Subscription();\r\n  joinSub = new Subscription();\r\n  leaveSub = new Subscription();\r\n  messageSub = new Subscription();\r\n  modelPassedPrivateSub = new Subscription();\r\n  modelLeavedSub = new Subscription();\r\n  responseInvitationPrivateSub = new Subscription();\r\n  responsePositiveInvitationVIPSub = new Subscription();\r\n  responseNegativeInvitationVIPSub = new Subscription();\r\n  modelPassedVipSub  = new Subscription();\r\n  albums = []\r\n  clientId: number;\r\n  clientPseudo: string;\r\n  clientCredit: number;\r\n\r\n  loading: boolean = false;\r\n  acceptedInvitationToPrivate: boolean = false;\r\n\r\n  costShowPrivate: number = null;\r\n  costShowVip: number = null;\r\n  acceptedVIP: boolean = false;\r\n\r\n  showEmojiPicker = false;\r\n  sets = [\r\n    'native',\r\n    'google',\r\n    'twitter',\r\n    'facebook',\r\n    'emojione',\r\n    'apple',\r\n    'messenger'\r\n  ]\r\n  set = 'google';\r\n\r\n  @HostListener(\"window:beforeunload\", [\"$event\"]) unloadHandler(event: Event) {\r\n    this.socketService.leave(this.idRoom, 'client');\r\n  }\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private modelService: ModelService,\r\n    private roomService: RoomService,\r\n    private store: LocalStorageService,\r\n    private chatService: ChatService,\r\n    private socketService: SocketService,\r\n    private profilService: ProfilService,\r\n    private popupService: PopupService,\r\n    private clientService: ClientService,\r\n    private albumService: AlbumService,\r\n    private timerService: TimerService,\r\n    private roomVipService: RoomVipService\r\n    ) {\r\n      const id = this.route.snapshot.paramMap.get('model');\r\n      this.modelId = parseInt(id);\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    if (!this.modelId) return null;\r\n    this.getMyInfo();\r\n    this.getInfoRoom();\r\n    this.initColor();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.roomService.leaveRoom();\r\n    this.socketService.leave(this.idRoom, 'client');\r\n\r\n    this.actifSub.unsubscribe();\r\n    this.joinSub.unsubscribe();\r\n    this.leaveSub.unsubscribe();\r\n    this.messageSub.unsubscribe();\r\n    this.modelPassedPrivateSub.unsubscribe();\r\n    this.modelLeavedSub.unsubscribe();\r\n    this.responseInvitationPrivateSub.unsubscribe();\r\n    this.responsePositiveInvitationVIPSub.unsubscribe();\r\n    this.responseNegativeInvitationVIPSub.unsubscribe();\r\n    this.modelPassedVipSub.unsubscribe();\r\n  }\r\n\r\n  initSocket() {\r\n    // if (!this.roomService.joinedRoom()) {\r\n    //   this.roomService.joinRoom();\r\n    //   this.socketService.join(this.idRoom, this.modelId);\r\n    // }\r\n    this.socketService.join(this.idRoom, this.modelId);\r\n    this.joinSub = this.socketService.listen(`joined ${this.idRoom}`).subscribe(\r\n      (data: any) => {\r\n        console.log('Joined ', data);\r\n        this.actif = data < 0 ? 0 : data;\r\n        // console.log('Actif ', this.actif);\r\n      }\r\n    );\r\n\r\n    this.leaveSub = this.socketService.listen(`leaved ${this.idRoom}`).subscribe(\r\n      (data: any) => {\r\n        // console.log('leaved ', data);\r\n        this.actif = data < 0 ? 0 : data;\r\n        // console.log('Actif ', this.actif);\r\n      }\r\n    );\r\n\r\n    this.messageSub = this.socketService.listen(`message ${this.idRoom}`).subscribe(\r\n      (data) => {\r\n        // console.log('Msg to client ', data);\r\n        this.getMessages();\r\n      }\r\n    );\r\n\r\n    this.modelPassedPrivateSub = this.socketService.listen(`Pass to private ${this.idRoom}`).subscribe(\r\n      (data) => {\r\n        // console.log('Pass to private ', data);\r\n        if (this.acceptedInvitationToPrivate) {\r\n          this.livePrivate();\r\n        } else {\r\n          this.passedToPrivate = true;\r\n        }\r\n      }\r\n    );\r\n\r\n    this.modelLeavedSub = this.socketService.listen(`model leaved ${this.idRoom}`).subscribe(\r\n      (data) => {\r\n        this.leaved = true;\r\n      }\r\n    );\r\n\r\n    this.responseInvitationPrivateSub = this.socketService.listen(`response invitation private ${this.idRoom} ${this.clientId}`).subscribe(\r\n      (data) => {\r\n        this.loading = false;\r\n        // console.log('Answer')\r\n        this.acceptedInvitationToPrivate = true;\r\n        if (this.passedToPrivate) {\r\n          this.livePrivate();\r\n        }\r\n      }\r\n    );\r\n\r\n    this.responsePositiveInvitationVIPSub = this.socketService.listen(`response positive invitation model to vip ${this.idRoom} ${this.clientId}`).subscribe(\r\n      (data) => {\r\n          this.loading = false;\r\n          this.acceptedVIP = true;\r\n          this.acceptedInvitation();\r\n      }\r\n    );\r\n\r\n    this.responseNegativeInvitationVIPSub = this.socketService.listen(`response negative invitation model to vip ${this.idRoom} ${this.clientId}`).subscribe(\r\n      (data) => {\r\n          this.loading = false;\r\n          this.acceptedVIP = false;\r\n          this.popupService.info(null, 'LIVE VIP',\r\n          `${this.modelPseudo} n'est pas disponible pour le moment.`);\r\n      }\r\n    );\r\n\r\n    // Model passed to VIP\r\n    this.modelPassedVipSub = this.socketService.listen(`Pass to VIP ${this.idRoom}`).subscribe(\r\n      (data: any) => {\r\n        if (this.acceptedVIP) this.acceptedInvitation();\r\n        this.passedVIP = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  getMyInfo() {\r\n    this.loading = true;\r\n    this.clientService.getMyInfos().subscribe( // My info\r\n      (data) => {\r\n        // console.log(\"My info \", data)\r\n        this.clientId = data.id;\r\n        this.clientPseudo = data.pseudo;\r\n        this.clientCredit = data.credit ? data.credit.credit : 0; // Client Credit\r\n        this.getModel();\r\n      }, (error) => {\r\n        this.loading = false;\r\n      }\r\n    )\r\n  }\r\n\r\n  getModel() {\r\n    this.modelService.getModel(this.modelId).subscribe(\r\n      (data) => {\r\n        if (!data) {\r\n          this.invalideRoom();\r\n          this.clientService.lastRoom(null);\r\n          setTimeout(\r\n            () => {\r\n              this.router.navigateByUrl('/client/accueil/registered');\r\n            }, 2000\r\n          )\r\n          return null;\r\n        }\r\n        // console.log('Model ', data);\r\n        this.bg = data.path_soft;\r\n        this.modelPseudo = data.pseudo;\r\n        if (data.profile.status === \"En live\") {\r\n          this.passedToPrivate = true;\r\n        } else if (data.profile.status === \"En vip\") {\r\n          this.popupService.info(null,'CHAT INDISPONIBLE',\r\n          `${this.modelPseudo} est en live VIP.`);\r\n        }\r\n        this.getInfo();\r\n      }, (error) => {\r\n        this.loading = false;\r\n      }\r\n    )\r\n  }\r\n\r\n  getInfo() {\r\n    const id: number = parseInt(this.store.get(\"identification//\"));\r\n    this.roomService.getInfo(id).subscribe(\r\n      (data) => {\r\n        this.id = data.id;\r\n        this.getAlbums();\r\n      }\r\n    )\r\n  }\r\n\r\n  getInfoRoom() {\r\n    this.roomService.getRoomModel(this.modelId).subscribe(\r\n      (data) => {\r\n        if (!data) return null;\r\n        console.log('Model room ', data);\r\n        this.idRoom = data.idRoom;\r\n        this.actif = data.actif;\r\n        this.clientService.lastRoom(this.router.url);\r\n        this.getMessages();\r\n        this.initSocket();\r\n      }\r\n    )\r\n  }\r\n\r\n  initColor() {\r\n    if (this.store.get(\"ticket_chat\")) {\r\n      this.chatColor = this.store.get(\"ticket_chat\");\r\n      return true;\r\n    };\r\n    this.roomService.getColor().subscribe(\r\n      (data) => {\r\n        this.chatColor = data.color;\r\n        this.store.set(\"ticket_chat\", data.color);\r\n      }\r\n    )\r\n  }\r\n\r\n  toggleDots() {\r\n    this.toggleDot = !this.toggleDot;\r\n    // console.log(this.toggleDot);\r\n  }\r\n\r\n  sendMessage() {\r\n    if (!this.message) return;\r\n    const data: Chat = {\r\n      idRoom: this.idRoom,\r\n      message: this.message,\r\n      type_source: 'client',\r\n      id_source: this.id,\r\n      code_couleur: this.chatColor\r\n    }\r\n    this.message = null;\r\n    this.chatService.postMessage(data).subscribe(\r\n      (data) => {\r\n        this.getMessages();\r\n        const msg: ChatSocket = {\r\n          room: this.idRoom + '',\r\n          role: 'client',\r\n          id: this.id,\r\n          message: this.message\r\n        }\r\n        this.socketService.sendMessage(msg);\r\n      }\r\n    )\r\n  }\r\n\r\n  getMessages() {\r\n      this.chatService.getMessage(this.idRoom).subscribe(\r\n        (data) => {\r\n          this.messages = data;\r\n          this.getCostShow();\r\n          // console.log(this.messages);\r\n        }\r\n      )\r\n  }\r\n\r\n  livePrivate() {\r\n    this.profilService.getSpecificProfil(this.modelId).subscribe(\r\n      (data) => {\r\n        if (this.clientCredit <= this.costShowPrivate) {\r\n          this.popupService.info(null,'CREDIT INSUFFISANT',\r\n          `Veuillez recharger votre compte.`);\r\n          return false;\r\n        }\r\n        // console.log('To private ', data);\r\n        if (data.status === \"En live\") {\r\n          this.router.navigate(['/client/live/private', {model: this.modelId}]);\r\n        } else {\r\n          // Send invitation to pass to private\r\n          this.loading = true;\r\n          this.socketService.clientInviteModelToPrivate(this.idRoom, this.clientId, this.clientPseudo,\r\n            this.modelId);\r\n          setTimeout(() => {\r\n            if (this.loading) this.loading = false;\r\n          }, 10000);\r\n          // this.popupService.info(null,'LIVE INDISPONIBLE',\r\n          // `${this.modelPseudo} n\\'a pas encore lancé le live.`);\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  liveVIP() {\r\n    this.profilService.getSpecificProfil(this.modelId).subscribe(\r\n      (data) => {\r\n        if (this.clientCredit <= this.costShowVip) {\r\n          this.popupService.info(null,'CREDIT INSUFFISANT',\r\n          `Veuillez recharger votre compte.`);\r\n          return false;\r\n        }\r\n        // console.log('To vip ', data);\r\n        if (data.status === \"En vip\") {\r\n          this.router.navigate(['/client/live/vip', {model: this.modelId}]);\r\n        } else {\r\n          // this.popupService.info(null,'LIVE VIP INDISPONIBLE',\r\n          // `${this.modelPseudo} n\\'a pas encore lancé le live en VIP.`);\r\n          this.loading = true;\r\n          this.socketService.clientInviteModelToVIP(this.idRoom, this.clientId, this.clientPseudo,\r\n            this.modelId);\r\n          setTimeout(() => {\r\n              if (this.loading) this.loading = false;\r\n          }, 10000);\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  liveOut() {\r\n    this.router.navigate(['/client/accueil/registered']);\r\n  }\r\n\r\n  buy() {\r\n    this.router.navigate(['/client/achat_de_credit']);\r\n  }\r\n\r\n  invalideRoom() {\r\n    this.popupService.info('/client/accueil/registered','CHAT INDISPONIBLE',\r\n    `Ce chat est indisponible.`);\r\n  }\r\n\r\n  getAlbums() {\r\n    const data = {\r\n      modelId : this.modelId,\r\n      type_album: 'free'\r\n    }\r\n    this.albumService.getModelAlbums(data).subscribe(\r\n      (data: any) => {\r\n        for (let i = 0; i < data.length; i++) {\r\n          this.albums.push({\r\n            url: data[i].path_album\r\n          })\r\n        }\r\n        this.loading = false;\r\n      }, (error) => {\r\n        this.loading = false;\r\n      }\r\n    )\r\n  }\r\n\r\n  async getCostShow() {\r\n    return await this.timerService.getCostShow(TypeTimer.PRIVATE).subscribe(\r\n      (data: any) => {\r\n        this.costShowPrivate = data.credit;\r\n        this.timerService.getCostShow(TypeTimer.VIP).subscribe(\r\n          (data: any) => {\r\n            this.costShowVip = data.credit;\r\n          }\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  acceptedInvitation() {\r\n    this.profilService.getSpecificProfil(this.modelId).subscribe(\r\n      async (data) => {\r\n        if (data.status === \"En vip\" && this.getInfoRoomVIP()) {\r\n          this.router.navigate(['/client/live/vip', { model: this.modelId }]);\r\n        } else {\r\n          this.popupService.info(null, 'LIVE VIP INDISPONIBLE',\r\n            `${this.modelPseudo} ne vous a pas invité en VIP.`);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  async getInfoRoomVIP() {\r\n    return await this.roomVipService.getRoomModel(this.modelId).subscribe(\r\n      (data) => {\r\n        if (data.idRoom === null) {return false;}\r\n        if (this.clientId !== data.clientId) {return false;}\r\n        return true;\r\n      })\r\n  }\r\n\r\n      // -------- EMOJI -----------------\r\n\r\n      toggleEmojiPicker() {\r\n        this.showEmojiPicker = !this.showEmojiPicker;\r\n      }\r\n\r\n      addEmoji(event) {\r\n        const {message} = this;\r\n        const text = `${message}${event.emoji.native}`;\r\n        this.message = text;\r\n      }\r\n\r\n      focus() {\r\n        this.showEmojiPicker = false;\r\n      }\r\n\r\n}\r\n\r\n","export enum context {\r\n  OFFLINE = 'Hors ligne',\r\n  INLINE = 'En ligne',\r\n  LIVE  = \"En live\"\r\n}\r\n\r\nexport interface GetModel {\r\n  context: context;\r\n  begin: number;\r\n  end: number;\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ConnexionAdminComponent } from './components/admin/connexion-admin/connexion-admin.component';\nimport { EnterComponent } from './components/client/enter/enter.component';\nimport { OutComponent } from './components/client/out/out.component';\nimport { NewPasswordComponent } from './components/forgot/new-password/new-password.component';\nimport { SendForgotComponent } from './components/forgot/send-forgot/send-forgot.component';\nimport { HomeLiveComponent } from './components/home/home-disconnected/home-live.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\n\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EnterComponent\n  },\n  {\n    path: 'bye',\n    component: OutComponent\n  },\n\n  {\n    path: 'motdepasseoublie',\n    component: SendForgotComponent\n  },\n  {\n    path: 'reinitialisation',\n    component: NewPasswordComponent\n  },\n  {\n    path: 'accueil',\n    component: HomeLiveComponent\n  },\n  {\n    path: 'authentification-admin',\n    component: ConnexionAdminComponent\n  },\n  {\n    path: 'client',\n    loadChildren: () => import('./components/client/client-routing.module').then(m => m.ClientRoutingModule)\n  },\n  {\n    path: 'modele',\n    loadChildren: () => import('./components/modele/model-routing.module').then(m => m.ModelRoutingModule)\n  },\n  {\n    path: 'admin',\n    loadChildren: () => import('./components/admin/admin-routing.module').then(m => m.AdminRoutingModule)\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { scrollPositionRestoration: 'enabled', relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { DeleteComponent } from './delete/delete.component';\r\nimport { PasswordComponent } from './password/password.component';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ClientService } from '../../../services/client/client.service';\r\nimport { PackModalComponent } from 'src/app/modals/pack-modal/pack-modal.component';\r\nimport { NotificationService } from '../../../services/notification/notification.service';\r\nimport { AuthService } from '../../../services/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-profil',\r\n  templateUrl: './profil.component.html',\r\n  styleUrls: ['./profil.component.scss']\r\n})\r\nexport class ProfilComponent implements OnInit {\r\n  credit: number = 500;\r\n  sound: boolean = false;\r\n  autoRecharge = false;\r\n  coinImg = \"assets/icons/coin-stack.svg\";\r\n  exclamation = \"assets/icons/exclamation-mark.svg\";\r\n  // Switch\r\n  color = \"#FB77FC\";\r\n  disabled = false;\r\n\r\n  // Modification information\r\n  isModifing = false;\r\n  showExclam = false;\r\n\r\n  // Information\r\n  email = \"ohatra@yahoo.fr\";\r\n  pseudo = \"Cactus\";\r\n\r\n  info = {\r\n    clientId: 0,\r\n    clientPseudo: null,\r\n    clientEmail: null,\r\n    clientCredit: 0,\r\n    clientCreditId: 0\r\n  }\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private clientService: ClientService,\r\n    private notificationService: NotificationService,\r\n    private authService: AuthService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getInfo();\r\n  }\r\n\r\n  getInfo() {\r\n    this.clientService.getMyInfos().subscribe(\r\n      (data) => {\r\n        // console.log(\"My info \", data);\r\n        if (!data) return null;\r\n        this.info.clientId = data.id;\r\n        this.info.clientPseudo = data.pseudo;\r\n        this.info.clientEmail = data.email;\r\n        this.info.clientCredit = data.credit.credit;\r\n        this.info.clientCreditId = data.credit.id;\r\n      }\r\n    )\r\n  }\r\n\r\n  recharge() {\r\n    const dialogRef = this.dialog.open(PackModalComponent, {\r\n      width: '100vh',\r\n      data: {}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getInfo();\r\n    });\r\n  }\r\n\r\n\r\n  changeSound() {\r\n    this.sound = !this.sound;\r\n    console.log(this.sound);\r\n  }\r\n\r\n  toogleRecharge(event) {\r\n    console.log(event.checked);\r\n    this.autoRecharge = event.checked;\r\n  }\r\n\r\n  modifing () {\r\n    if (this.isModifing) {\r\n      // console.log(\"New Pseudo \", this.info.clientPseudo);\r\n      const newPseudo = this.info.clientPseudo;\r\n      this.clientService.changePseudo(newPseudo).subscribe(\r\n        (data: any) => {\r\n          // console.log(data);\r\n          if (data.access_token) {\r\n            this.authService.saveToken(data.access_token, data.id).then(\r\n              () => {\r\n                this.notificationService.success(\"Pseudo modifié\", \"\");\r\n              }\r\n            );\r\n          }\r\n        }\r\n      )\r\n    }\r\n    this.isModifing = !this.isModifing;\r\n  }\r\n\r\n  tryChangeEmail() {\r\n    if (this.isModifing) {\r\n      this.showExclam = true;\r\n      setTimeout(() => {\r\n        this.showExclam = false;\r\n      }, 4000);\r\n    }\r\n  }\r\n\r\n  openDialogPassword() {\r\n    const dialogRef = this.dialog.open(PasswordComponent, {\r\n      width: '50vh'\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      // console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n\r\n  deleteAccount(action: string): void {\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      width: '50vh',\r\n      data: {action: action}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      // console.log('The dialog was closed');\r\n    });\r\n  }\r\n}\r\n","<app-header connected=\"true\" actif=\"4\"></app-header>\n\n<div class=\"main_profil\">\n\n  <!-- Credit parameter -->\n  <div class=\"profil profil_1\">\n    <div class=\"profil_header\">\n      Crédits et Payement\n    </div>\n    <div class=\"block_profil\">\n      <div class=\"block_credit content_parameter\">\n        <img [src]=\"coinImg\" alt=\"\" class=\"coinImg\">\n        <div>\n          {{info.clientCredit}} crédit<span *ngIf=\"info.clientCredit > 2\">s</span>\n        </div>\n      </div>\n\n      <div class=\"rechargement marge_paiement\">\n        <div class=\"recharge_content\">\n          <div class=\"recharge_text\">\n            Rechargement automatique\n          </div>\n          <div class=\"sound\" (click)=\"changeSound()\">\n            <i class=\"fa fa-circle\" [ngClass]=\"{'show': sound, 'unshow': !sound}\"></i>\n            <span [ngClass]=\"{'span': !sound}\">Activer</span>  /\n            <span [ngClass]=\"{'span': sound}\">Désactiver</span> les sons de notification\n          </div>\n        </div>\n        <div class=\"switch\">\n          <mat-slide-toggle\n          class=\"toogle\"\n          id=\"toggle\"\n          [color]=\"color\"\n          [checked]=\"autoRecharge\"\n          [disabled]=\"disabled\"\n          (change)=\"toogleRecharge($event)\">\n          </mat-slide-toggle>\n        </div>\n      </div>\n\n      <div class=\"content_btn marge_paiement\">\n        <button class=\"btn btn_recharge lighter\" (click)=\"recharge()\">\n          Recharger\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Information parameter -->\n  <div class=\"profil profil_2\">\n    <div class=\"profil_header\">\n      Informations personnelles\n    </div>\n    <div class=\"block_profil\">\n      <div class=\"content_parameter\">\n        <form action=\"\" class=\"form\">\n          <div class=\"form-group\" (click)=\"tryChangeEmail()\">\n            <label id=\"email\" for=\"email\">Adresse email\n              <img [src]=\"exclamation\" alt=\"\"\n              data-toggle=\"tooltip\" *ngIf=\"showExclam\"\n              data-placement=\"top\" title=\"Impossible à changer\">\n            </label>\n            <input autocomplete=\"off\" type=\"email\" [(ngModel)]=\"info.clientEmail\"\n            name=\"email\" disabled class=\"form-control input\"\n            style=\"opacity: 0.8;\">\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"pseudo\">Pseudo</label>\n            <input autocomplete=\"off\" type=\"text\" name=\"pseudo\"\n            class=\"form-control input\" [(ngModel)]=\"info.clientPseudo\"\n            [ngClass]=\"{'enable': isModifing, 'disable': !isModifing}\"\n            [disabled]=\"!isModifing\">\n          </div>\n        </form>\n      </div>\n\n      <div class=\"content_btn marge_paiement\">\n        <button class=\"btn btn_modif lighter\" (click)=\"modifing()\">\n          <span *ngIf=\"!isModifing\">Modifier</span>\n          <span *ngIf=\"isModifing\">Sauvegarder</span>\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Password parameter -->\n  <div class=\"profil profil_2\">\n    <div class=\"profil_header\">\n      Mot de passe\n    </div>\n    <div class=\"block_profil\">\n      <div class=\"content_btn marge_paiement\">\n        <button class=\"btn btn_password lighter\" (click)=\"openDialogPassword()\">\n          Changer\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Account parameter -->\n  <div class=\"profil profil_2\">\n    <div class=\"block_profil\">\n      <div class=\"content_parameter\">\n        <div class=\"btn_account btn_delete lighter\" (click)=\"deleteAccount('suppression')\">\n          Supprimer compte\n        </div>\n        <div class=\"btn_account btn_delete lighter\" (click)=\"deleteAccount('désactivation')\">\n          Désactiver compte\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n","<div class=\"contain_pass\">\n  <!-- <h2 mat-dialog-title>Confirmation</h2> -->\n  <mat-dialog-content>\n    <div class=\"content_text\">\n      <div class=\"img\">\n        <img [src]=\"exclamation\" alt=\"\" style=\"max-width: 100%;\">\n      </div>\n      <div class=\"text_warning\">\n        Confirmer la <span>{{action}}</span> de votre compte !\n      </div>\n    </div>\n    <form>\n      <label for=\"password\">\n        Mot de passe\n        <img [src]=\"exclamation\" alt=\"\" *ngIf=\"empty\" id=\"imgAlert\">\n      </label>\n      <input type=\"password\" name=\"password\" class=\"form-control input\" [(ngModel)]=\"password\">\n      <p class=\"error\" *ngIf=\"error\">Mot de passe incorrect</p>\n    </form>\n  </mat-dialog-content>\n\n  <mat-dialog-actions>\n    <button class=\"btn_cancel\" mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Annuler</button>\n    <button class=\"btn_valid\" (click)=\"validate()\">Confirmer</button>\n  </mat-dialog-actions>\n</div>\n\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { ClientService } from '../../../../services/client/client.service';\r\nimport { PopupService } from '../../../../services/popup/popup.service';\r\nimport { AuthService } from '../../../../services/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-delete',\r\n  templateUrl: './delete.component.html',\r\n  styleUrls: ['./delete.component.scss']\r\n})\r\nexport class DeleteComponent implements OnInit {\r\n  action: any;\r\n  exclamation = \"assets/icons/exclamation-mark.svg\";\r\n  password: string = \"\";\r\n  error: boolean = false;\r\n  empty: boolean = false;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    private clientService: ClientService,\r\n    private popupService: PopupService,\r\n    private authService: AuthService) {\r\n      this.action = data.action;\r\n    }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // console.log(this.action);\r\n  }\r\n\r\n  async validate(): Promise<void> {\r\n    this.empty = false;\r\n    this.error = false;\r\n    if (this.password == \"\") {\r\n        this.empty = true;\r\n        return null;\r\n    }\r\n    if (this.action === 'suppression') {\r\n      this.clientService.deleteAccount(this.password).subscribe(\r\n        (data: any) => {\r\n          // console.log(data);\r\n          if (data.error) {\r\n            this.error = true;\r\n          } else {\r\n            this.popupService.info('client','Suppression',\r\n            `Un email de confirmation vous est envoyé pour motif :\r\n            <span style=\"font-style: italic; color: var(--pink)\">Suppression de compte</span>`);\r\n            this.onNoClick();\r\n            this.authService.logoutUser('client', '/accueil');\r\n          }\r\n        }\r\n      )\r\n    } else if (this.action === 'désactivation') {\r\n      this.clientService.deactivateAccount(this.password).subscribe(\r\n        (data: any) => {\r\n          // console.log(data);\r\n          if (data.error) {\r\n            this.error = true;\r\n          } else {\r\n            this.popupService.info('client','Désactivation',\r\n            `Un email de confirmation vous est envoyé pour motif :\r\n            <span style=\"font-style: italic; color: var(--pink)\">Désactivation de compte</span>`);\r\n            this.onNoClick();\r\n            this.authService.logoutUser('client', '/accueil');\r\n          }\r\n        }\r\n      )\r\n    }\r\n  }\r\n}\r\n","<app-infobar-admin title=\"Clients\" subTitle=\"Clients\"></app-infobar-admin>\n\n<div class=\"admin_container\">\n  <div class=\"admin_bottom_bar\">\n    CLIENTS BLOQUES <span>({{count}} Clients)</span>\n  </div>\n\n  <div class=\"contain_filter_client\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-lg-4\">\n          <div class=\"pagination_client\">\n            <!-- <div class=\"all\" (click)=\"tout()\">Lister Tout</div> -->\n            <div class=\"list_pagination\">\n              <div class=\"prev_pagination\" (click)=\"prevPage()\">\n                &lt;\n              </div>\n              <div\n              *ngFor=\"let item of list_pagination\"\n              (click)=\"selectPage(item)\"\n              >\n              <span class=\"item_pagination\" [ngClass]=\"{'actif': page === item}\"\n              *ngIf=\"item >= thirdlyPage - 3 && item  < thirdlyPage\">{{item + 1}}</span>\n              </div>\n              <div class=\"next_pagination\" (click)=\"nextPage()\">\n                &gt;\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-lg-5\">\n          <div class=\"search_client\">\n            <input type=\"text\" class=\"search_input\" placeholder=\"Rechercher ......\"\n            (keyup)=\"input_search($event)\" [(ngModel)]=\"filter\">\n            <img [src]=\"search\" alt=\"\" class=\"search_icon\">\n          </div>\n        </div>\n        <div class=\"col-lg-3\">\n          <div class=\"other_action_client\">\n            <img [src]=\"four\" alt=\"\" class=\"other_icon_1\">\n            <img [src]=\"other\" alt=\"\" class=\"other_icon_2\">\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"contain_list_client\">\n    <div class=\"contain_header_list\">\n      <div>\n        LES CLIENTS BLOQUES\n      </div>\n      <div>\n        Total : {{count}}\n      </div>\n    </div>\n    <div>\n      <table class=\"table table-responsive\">\n        <tr class=\"header_table_client\">\n          <td>\n            <input type=\"checkbox\">\n          </td>\n          <td>Pseudo</td>\n          <td>Adresse email</td>\n          <td>Inscrit le</td>\n          <td>Bloqué le</td>\n          <td>Actions</td>\n        </tr>\n        <tr *ngFor=\"let client of clients\" class=\"list_table\">\n          <td>\n            <input type=\"checkbox\">\n          </td>\n          <td>{{client.pseudo}}</td>\n          <td>{{client.email}}</td>\n          <td>{{client.createdAt}}</td>\n          <td>{{client.updatedAt}}</td>\n          <td class=\"list_action\">\n            <img [src]=\"debloquer\" alt=\"\" (click)=\"deblockedClient(client.id)\">\n            <img [src]=\"delete\" alt=\"\" (click)=\"deleteClient(client.id)\">\n          </td>\n        </tr>\n      </table>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/services/admin/admin.service';\nimport { NotificationService } from 'src/app/services/notification/notification.service';\n\n\n@Component({\n  selector: 'app-bloquer-clients-admin',\n  templateUrl: './bloquer-clients-admin.component.html',\n  styleUrls: ['./bloquer-clients-admin.component.scss']\n})\nexport class BloquerClientsAdminComponent implements OnInit {\n  icon = './../../../../../../assets/icons/paper-clip.svg'\n\n  search = './../../../../../../assets/icons/admin-icons/search.png'\n  four = './../../../../../../assets/icons/admin-icons/menu_four.png'\n  other = './../../../../../../assets/icons/admin-icons/menu.png'\n\n  deactivate = './../../../../../../assets/icons/admin-icons/deactivate.png'\n  activate = './../../../../../../assets/icons/admin-icons/activate.png'\n  delete = './../../../../../../assets/icons/admin-icons/delete.png'\n  bloqued = './../../../../../../assets/icons/admin-icons/bloquer.png'\n  debloquer = './../../../../../../assets/icons/admin-icons/debloquer.png'\n\n  clients = []\n\n  count: number  = 0\n  range: number = 10\n  filter: string = ''\n  selected: string = 'tous'\n\n  page: number  = 0\n  topPage: number = 0\n  thirdlyPage: number = 3\n  list_pagination: number[] = []\n\n  constructor(\n    public adminService: AdminService,\n    private notificationService: NotificationService\n  ) { }\n\n  ngOnInit(): void {\n    this.countClient()\n    this.listClients()\n  }\n\n  initPagination() {\n    this.list_pagination = []\n    let res = this.count / this.range\n    res = Math.floor(res)\n    this.topPage = res\n    console.log('TopPage ',this.topPage)\n    for (let i = 0; i <= res; i++) {\n      this.list_pagination.push(i)\n    }\n  }\n\n  countClient() {\n    this.adminService.countClientsBlocked().subscribe(\n      (data) => {\n        this.count = data ? data : 0\n        this.initPagination()\n      }\n    )\n  }\n\n\n  listClients() {\n    this.adminService.getClientsBlocked(this.range, this.page, this.filter).subscribe(\n      (data) => {\n        console.log(data)\n        this.clients = data\n        this.clients.forEach( (client) => {\n          client.createdAt = this.adminService.formatDate(client.createdAt)\n          client.updatedAt = this.adminService.formatDate(client.updatedAt)\n        })\n        this.count = this.clients.length\n        this.initPagination()\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  input_search(event) {\n    this.listClients()\n  }\n\n  selectPage(page: number) {\n    this.page = page\n    this.listClients()\n  }\n\n  nextPage() {\n    if (this.page + 1 >= this.topPage) return false\n    this.page += 1\n    this.thirdlyPage += 3\n    this.listClients()\n  }\n\n  prevPage() {\n    if (this.page - 1 < 0) return false\n    this.page -= 1\n    this.thirdlyPage -= 3\n    if (this.thirdlyPage < 0) this.thirdlyPage = 0\n    this.listClients()\n  }\n\n  tout() {\n    this.page = 0\n    this.range = this.count\n    this.listClients()\n  }\n\n  deleteClient(idClient: number) {\n    this.adminService.deleteClient(idClient).subscribe(\n      (data: any) => {\n        if (data.success) this.listClients()\n        else if (data.error) this.notificationService.errorMsg(data.message)\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  deblockedClient(idClient: number) {\n    const data = {\n      idClient,\n      reverse: true\n    }\n    this.adminService.blockClient(data).subscribe(\n      (data: any) => {\n        if (data.success) this.listClients()\n        else if (data.error) this.notificationService.errorMsg(data.message)\n      }, (error) => {\n        console.log(error);\n      }\n    )\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from '../auth/auth.service';\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\nconst user = \"1c1b28f2-a84b-4b30\";\nconst password = \"VJezNXV9Wz\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaiementService {\n  url = 'https://test-api.centralpay.net/v2/rest/paymentRequest'\n  endpoint = environment.endpoint\n\n  constructor(private http: HttpClient, private authService: AuthService) { }\n\n  payPack(email: string, amount: number) {\n    this.authService.paying = true;\n    const breakdown = \"{\\\"amount\\\": \" + amount + \" ,\\\"email\\\":\" + email +\"}\"\n      const data = {\n        \"paymentMethod[]\": \"TRANSACTION\",\n        \"currency\": \"EUR\",\n        \"totalAmount\": amount,\n        \"breakdown[]\": breakdown\n      }\n    this.http.post(`${this.url}`, data, httpOptions).subscribe(\n        (data) => {\n          console.log(data)\n          this.authService.paying = false;\n        }, (error) => {\n          console.log(error)\n          this.authService.paying = false;\n        }\n      )\n  }\n\n\n  buyPack(credit: number) {\n    const data = {\n      credit\n    }\n    return this.http.post(`${this.endpoint}/paiement/buy-pack`, data, httpOptions)\n  }\n}\n","<div class=\"main_topbar\">\n  <div class=\"top_left\">\n    <div class=\"context_live\">\n      {{context}}\n    </div>\n    <div class=\"minuteur\" *ngIf=\"!minuteur\">\n      <div class=\"minuteur_inside\">\n        <span *ngIf=\"hour > 0\"> <span *ngIf=\"hour < 10\">0</span>{{hour}} : </span>\n        <span *ngIf=\"minute < 10\">0</span>{{minute}} :\n        <span *ngIf=\"second < 10\">0</span>{{second}}\n      </div>\n    </div>\n    <div class=\"user\">\n      <img [src]=\"user\" alt=\"\">\n      <span>\n        <span *ngIf=\"actif < 10 && actif > 0\" class=\"span_zero\">0</span>\n        {{actif}}\n      </span>\n      <span *ngIf=\"actif === undefined\">0</span>\n    </div>\n  </div>\n  <div id=\"img_add\" (click)=\"toggleTools()\" *ngIf=\"!visible\">\n    <i class=\"fa fa-ellipsis-h\"></i>\n    <!-- <i class=\"fa fa-chevron-right\" *ngIf=\"!showTools\"></i>\n    <i class=\"fa fa-chevron-down\" *ngIf=\"showTools\"></i> -->\n  </div>\n\n  <!-- <div class=\"top_right top_right_desktop\" *ngIf=\"!visible\">\n    <div class=\"menu_right\" (click)=\"change('son')\">\n      <img [src]=\"volume\" alt=\"\" *ngIf=\"isSound\">\n      <img [src]=\"mute\" alt=\"\" *ngIf=\"!isSound\">\n      <span class=\"poptext\">Son</span>\n    </div>\n    <div class=\"menu_right\" (click)=\"change('video')\">\n      <img [src]=\"video\" alt=\"\" *ngIf=\"isVideo\">\n      <img [src]=\"noVideo\" alt=\"\" *ngIf=\"!isVideo\">\n      <span class=\"poptext\">Vidéo</span>\n    </div>\n    <div class=\"menu_right\" (click)=\"change('micro')\">\n      <img [src]=\"microOn\" alt=\"\" *ngIf=\"isMicro\">\n      <img [src]=\"microOff\" alt=\"\" *ngIf=\"!isMicro\">\n      <span class=\"poptext\">Micro</span>\n    </div>\n    <div class=\"menu_right\" (click)=\"change('strech')\">\n      <img [src]=\"strech\" alt=\"\">\n      <span class=\"poptext\">Agrandir</span>\n    </div>\n  </div> -->\n\n  <!-- <div class=\"top_right top_right_mobile\" *ngIf=\"showTools\">\n    <div class=\"menu_right\" (click)=\"change('son')\">\n      <img [src]=\"volume\" alt=\"\" *ngIf=\"isSound\">\n      <img [src]=\"mute\" alt=\"\" *ngIf=\"!isSound\">\n      <span class=\"poptext\">Son</span>\n    </div>\n    <div class=\"menu_right\" (click)=\"change('video')\">\n      <img [src]=\"video\" alt=\"\" *ngIf=\"isVideo\">\n      <img [src]=\"noVideo\" alt=\"\" *ngIf=\"!isVideo\">\n      <span class=\"poptext\">Vidéo</span>\n    </div>\n    <div class=\"menu_right\" (click)=\"change('micro')\">\n      <img [src]=\"microOn\" alt=\"\" *ngIf=\"isMicro\">\n      <img [src]=\"microOff\" alt=\"\" *ngIf=\"!isMicro\">\n      <span class=\"poptext\">Micro</span>\n    </div>\n    <div class=\"menu_right\" (click)=\"change('strech')\">\n      <img [src]=\"strech\" alt=\"\">\n      <span class=\"poptext\">Agrandir</span>\n    </div>\n  </div> -->\n\n</div>\n\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { PopupService } from '../../../services/popup/popup.service';\r\n\r\n@Component({\r\n  selector: 'app-topbar',\r\n  templateUrl: './topbar.component.html',\r\n  styleUrls: ['./topbar.component.scss']\r\n})\r\nexport class TopbarComponent implements OnInit {\r\n  @Input()\r\n  context: string;\r\n\r\n  @Input()\r\n  visible: boolean;\r\n\r\n  @Input()\r\n  minuteur: boolean;\r\n\r\n  @Input()\r\n  actif: number = 0;\r\n\r\n  @Input()\r\n  hour: number = 0;\r\n\r\n  @Input()\r\n  minute: number = 0;\r\n\r\n  @Input()\r\n  second: number = 0;\r\n\r\n  @Input()\r\n  reinit: boolean; // reinit to 0\r\n\r\n  @Input()\r\n  leaved: boolean; // Model Quitter\r\n\r\n  user = \"assets/icons/friends_soft.svg\";\r\n  strech = \"assets/icons/full-size.svg\";\r\n  microOn = \"assets/icons/microphone.svg\";\r\n  microOff = \"assets/icons/microphone-off.svg\";\r\n  mute = \"assets/icons/mute.svg\";\r\n  video = \"assets/icons/video-camera.svg\";\r\n  noVideo = \"assets/icons/no-video.svg\";\r\n  volume =\"assets/icons/volume.svg\";\r\n  soundOff = \"assets/icons/sound-off.svg\";\r\n  add = \"assets/icons/add.svg\";\r\n\r\n  isSound: boolean = true;\r\n  isVideo: boolean = true;\r\n  isStreched: boolean = true;\r\n  isMicro: boolean = true;\r\n\r\n  currentMinute: number = 0;\r\n  countUser: string = \"01\";\r\n\r\n  showTools = false;\r\n\r\n  constructor(\r\n    private popupService: PopupService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.startMinuteur();\r\n  }\r\n\r\n  change (material: string) {\r\n    switch (material) {\r\n      case 'son':\r\n        this.isSound = !this.isSound;\r\n        break;\r\n      case 'micro':\r\n        this.isMicro = !this.isMicro;\r\n        break;\r\n      case 'video':\r\n        this.isVideo = !this.isVideo;\r\n        break;\r\n      case 'strech':\r\n        this.isStreched = !this.isStreched;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  toggleTools() {\r\n    this.showTools = !this.showTools;\r\n  }\r\n\r\n  startMinuteur() {\r\n    setInterval(() => {\r\n      if (!this.leaved) {\r\n        if (!this.reinit) {\r\n          this.second++;\r\n          if (this.second > 59) {\r\n            this.second = 0;\r\n            this.minute++;\r\n            if (this.minute > 59) {\r\n              this.minute = 0;\r\n              this.hour++;\r\n            }\r\n          }\r\n        } else {\r\n          this.second = 0;\r\n          this.minute = 0;\r\n          this.hour = 0;\r\n        }\r\n      }\r\n    }, 1000);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pack-or',\n  templateUrl: './pack-or.component.html',\n  styleUrls: ['./pack-or.component.scss']\n})\nexport class PackOrComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>pack-or works!</p>\n","<app-header connected=\"true\" actif=\"1\"></app-header>\n\n<div class=\"main_home_client\">\n\n  <div class=\"section\">\n    <div class=\"bar_title\">\n      <div class=\"context\">\n        En live\n        <p class=\"btn_red\"></p>\n        <p class=\"count\"> ({{totalInLive}}) </p>\n      </div>\n      <div class=\"pagination\">\n        <ul style=\"list-style-type: none;\">\n          <li *ngFor=\"let item of paginationLive\"\n            (click)=\"initPhoto(LIVE, item)\"\n            [ngClass]=\"{'active': indiceLive == item}\">\n            {{item}}\n          </li>\n          <li class=\"dots\" (click)=\"prev(LIVE)\">&lt;&lt;</li>\n          <li class=\"next_link\" (click)=\"next(LIVE)\">>></li>\n        </ul>\n      </div>\n    </div>\n\n    <div class=\"profil_model\">\n          <div class=\"row_model\">\n            <p class=\"empty\" *ngIf=\"photoLive.length == 0\">\n              Aucun modèle n'est disponible pour le moment\n            </p>\n            <div class=\"col_model\" *ngFor=\"let item of photoLive; let i = index\">\n              <div class=\"profil\" (click)=\"livePrivate(item.id)\">\n                <img [defaultImage]=\"defaultImage\" alt=\"\"\n                [lazyLoad]=\"item.path_soft\" class=\"img_section\"/>\n\n                <!-- <img [src]=\"item.path_soft\" alt=\"\" class=\"img_section\"> -->\n                <div class=\"live_profil\">\n                  LIVE\n                </div>\n                <div class=\"pseudo_profil\">\n                  <p class=\"btn_red\"></p>\n                  <p class=\"pseudo\">{{item.pseudo}}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n    </div>\n  </div>\n\n\n  <div class=\"section\">\n    <div class=\"bar_title\">\n      <div class=\"context\">\n        En Chat\n        <p class=\"count\"> ({{totalInChat}}) </p>\n      </div>\n      <div class=\"pagination\">\n        <ul style=\"list-style-type: none;\">\n          <li *ngFor=\"let item of paginationChat\"\n            (click)=\"initPhoto(INLINE, item)\"\n              [ngClass]=\"{'active': indiceChat == item}\">\n              {{item}}\n          </li>\n          <li class=\"dots\" (click)=\"prev(INLINE)\">&lt;&lt;</li>\n          <li class=\"next_link\" (click)=\"next(INLINE)\">>></li>\n        </ul>\n      </div>\n    </div>\n\n    <div class=\"profil_model\">\n      <div class=\"row_model\">\n        <p class=\"empty\" *ngIf=\"photoChat.length == 0\">\n          Aucun modèle n'est disponible pour le moment\n        </p>\n        <div class=\"col_model\" *ngFor=\"let item of photoChat; let i = index\">\n          <div class=\"profil\" (click)=\"liveFree(item.id)\">\n            <img [defaultImage]=\"defaultImage\" alt=\"\"\n            [lazyLoad]=\"item.path_soft\" class=\"img_section\"/>\n\n            <!-- <img [src]=\"item.path_soft\" alt=\"\" class=\"img_section\"> -->\n            <div class=\"pseudo_profil\">\n              <p class=\"btn_chat\">\n                <i class=\"fa fa-comment\"></i>\n              </p>\n              <p class=\"pseudo\">{{item.pseudo}}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n  </div>\n\n  <div class=\"section offline\">\n    <div class=\"bar_title\">\n      <div class=\"context\">\n        Hors ligne\n        <p class=\"count\"> ({{totalOffline}}) </p>\n      </div>\n      <div class=\"pagination\">\n        <ul style=\"list-style-type: none;\">\n          <li *ngFor=\"let item of paginationChat\"\n            (click)=\"initPhoto(OFFLINE, item)\"\n            [ngClass]=\"{'active': indiceOffline == item}\">\n            {{item}}\n          </li>\n          <li class=\"dots\" (click)=\"prev(OFFLINE)\">&lt;&lt;</li>\n          <li class=\"next_link\" (click)=\"next(OFFLINE)\">>></li>\n        </ul>\n      </div>\n    </div>\n\n    <div class=\"profil_model\">\n      <div class=\"row_model\">\n        <p class=\"empty\" *ngIf=\"photoOffline.length == 0\">\n          Aucun modèle n'est disponible pour le moment\n        </p>\n        <div class=\"col_model\" *ngFor=\"let item of photoOffline; let i = index\">\n          <div class=\"profil\">\n            <img [defaultImage]=\"defaultImage\" alt=\"\"\n            [lazyLoad]=\"item.path_soft\" class=\"img_section\"/>\n            <!-- <img [src]=\"item.path_soft\" alt=\"\" class=\"img_section\"> -->\n            <div class=\"pseudo_profil\">\n              <p class=\"btn_white\"></p>\n              <p class=\"pseudo\">{{item.pseudo}}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { ModelService } from '../../../services/model/model.service';\r\nimport { Router } from '@angular/router';\r\nimport { context } from 'src/app/interfaces/get-model.interface';\r\nimport { GetModel } from '../../../interfaces/get-model.interface';\r\n\r\n@Component({\r\n  selector: 'app-home-client',\r\n  templateUrl: './home-client.component.html',\r\n  styleUrls: ['./home-client.component.scss']\r\n})\r\nexport class HomeClientComponent implements OnInit {\r\n  defaultImage = './../../../../assets/images/blured.jpg';\r\n\r\n  image = \"assets/images/image.png\";\r\n  section: number = 8;\r\n\r\n  totalInLive: number = 0;\r\n  paginationLive: number[] = [];\r\n  photoLive: string[] = [];\r\n  indiceLive: number = 1;\r\n\r\n  totalInChat: number = 0;\r\n  paginationChat: number[] = [];\r\n  photoChat: string[] = [];\r\n  indiceChat: number = 1;\r\n\r\n  totalOffline: number = 0;\r\n  paginationOffline: number[] = [];\r\n  photoOffline: string[] = [];\r\n  indiceOffline: number = 1;\r\n\r\n  // count = [0, 1, 2, 3, 4, 5, 6, 7];\r\n\r\n  OFFLINE = 'Hors ligne';\r\n  INLINE = 'En ligne';\r\n  LIVE  = \"En live\";\r\n\r\n  constructor(\r\n    private modelSrv: ModelService,\r\n    private router: Router) {\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.init();\r\n  }\r\n\r\n\r\n  init() {\r\n    this.getTotal().then(\r\n      (data) => {\r\n        this.initPagination();\r\n      }\r\n    );\r\n  }\r\n\r\n  async getTotal() {\r\n    await this.modelSrv.count().subscribe(\r\n      (data) => {\r\n        // console.log(data);\r\n        this.totalOffline = data.offline;\r\n        this.totalInChat = data.chat;\r\n        this.totalInLive = data.live;\r\n      }\r\n    )\r\n  }\r\n\r\n  initPagination() {\r\n    var margeLive = Math.ceil((this.totalInLive / this.section) - 0.1);\r\n    var margeChat = Math.ceil((this.totalInChat / this.section) - 0.1);\r\n    var margeOffline = Math.ceil((this.totalOffline / this.section) - 0.1);\r\n\r\n    margeLive = margeLive < 1 ? 1 : margeLive;\r\n    margeChat = margeChat < 1 ? 1 : margeChat;\r\n    margeOffline = margeOffline < 1 ? 1 : margeOffline;\r\n\r\n    for (let index = 1; index <= margeLive; index++) this.paginationLive.push(index);\r\n    for (let index = 1; index <= margeChat; index++) this.paginationChat.push(index);\r\n    for (let index = 1; index <= margeOffline; index++) this.paginationOffline.push(index);\r\n    this.initPhoto(context.LIVE, 1);\r\n    this.initPhoto(context.INLINE, 1);\r\n    this.initPhoto(context.OFFLINE, 1);\r\n  }\r\n\r\n  async initPhoto(contxt: any, indice: number) {\r\n    var debut = indice - 1;\r\n    debut = debut * this.section;\r\n\r\n    const model: GetModel = {\r\n      context: contxt,\r\n      begin: debut,\r\n      end: debut + this.section\r\n    }\r\n\r\n    switch (contxt) {\r\n      case context.LIVE :\r\n        if (debut > this.totalInLive) {this.indiceLive--; return null;}\r\n        this.indiceLive = indice;\r\n        await this.modelSrv.getList(model).subscribe(\r\n          (data) => {\r\n            // console.log(data);\r\n            this.photoLive = data;\r\n          }\r\n        );\r\n        break;\r\n\r\n      case context.INLINE :\r\n        if (debut > this.totalInChat) {this.indiceChat--; return null;}\r\n        this.indiceChat= indice;\r\n        await this.modelSrv.getList(model).subscribe(\r\n            (data) => {\r\n              // console.log('In chat ', data);\r\n              this.photoChat = data;\r\n            }, (error) => {\r\n              console.log(error)\r\n            }\r\n          );\r\n        break;\r\n\r\n      case context.OFFLINE :\r\n        if (debut > this.totalOffline) {this.indiceOffline--; return null;}\r\n        this.indiceOffline= indice;\r\n        await this.modelSrv.getList(model).subscribe(\r\n          (data) => {\r\n            // console.log(data);\r\n            this.photoOffline = data;\r\n          }\r\n        );\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  prev(contxt: any) {\r\n    switch (contxt) {\r\n      case context.LIVE :\r\n        if (this.indiceLive < 2) return false;\r\n        this.indiceLive--;\r\n        this.initPhoto(contxt, this.indiceLive);\r\n        break;\r\n\r\n      case context.INLINE :\r\n        if (this.indiceChat < 2) return false;\r\n        this.indiceChat--;\r\n        this.initPhoto(contxt, this.indiceChat);\r\n        break;\r\n\r\n      case context.OFFLINE :\r\n        if (this.indiceOffline < 2) return false;\r\n        this.indiceOffline--;\r\n        this.initPhoto(contxt, this.indiceOffline);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  next(contxt: any) {\r\n    switch (contxt) {\r\n      case context.LIVE :\r\n        this.indiceLive++;\r\n        this.initPhoto(contxt, this.indiceLive);\r\n        break;\r\n\r\n      case context.INLINE :\r\n        this.indiceChat++;\r\n        this.initPhoto(contxt, this.indiceChat);\r\n        break;\r\n\r\n      case context.OFFLINE :\r\n        this.indiceOffline++;\r\n        this.initPhoto(contxt, this.indiceOffline);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  liveFree(id: number) {\r\n    this.router.navigate(['/client/live/free', {model: id}]);\r\n  }\r\n\r\n  livePrivate(id: number) {\r\n    this.router.navigate(['/client/live/private', {model: id}]);\r\n  }\r\n\r\n}\r\n","\n<app-infobar-admin title=\"Administration\" subTitle=\"Administration\"></app-infobar-admin>\n\n<div class=\"admin_container\">\n  <div class=\"admin_bottom_bar\">\n    PARAMETRES\n  </div>\n\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-lg-7\">\n        <div class=\"contain_\">\n          <div class=\"title_contain\">\n            PROFIL ADMIN\n          </div>\n          <div class=\"contain_setting\">\n            <div class=\"contain_img\">\n              <img [src]=\"info.url\" alt=\"\" (click)=\"fileInput.click()\">\n              <input type=\"text\" [(ngModel)]=\"info.pseudo\">\n              <input type=\"text\" [(ngModel)]=\"info.email\" disabled style=\"cursor: no-drop;\">\n              <button class=\"btn btn_save\" (click)=\"uploadProfil()\">\n                Modifier\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"contain_\">\n          <div class=\"title_contain\">\n            MOT DE PASSE\n          </div>\n          <div class=\"form\">\n            <div class=\"form-group\">\n              <label for=\"old\">Ancien mot de passe</label>\n              <input type=\"password\" name=\"old\" [(ngModel)]=\"oldPassword\" class=\"form-control\">\n            </div>\n            <div class=\"form-group\">\n              <label for=\"new\">Nouveau mot de passe</label>\n              <input type=\"password\" name=\"new\" [(ngModel)]=\"newPassword\" class=\"form-control\">\n            </div>\n            <button class=\"btn btn_save\" (click)=\"changePassword()\">\n              Modifier\n            </button>\n            <div class=\"error\" *ngIf=\"errorPassword\">\n              <p>\n                {{errorPassword}}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-lg-5\">\n        <div class=\"contain_\">\n          <div class=\"title_contain\">\n            MOTS TABOO\n          </div>\n          <div class=\"add_contain\">\n            <div class=\"form\">\n              <div class=\"form-group\">\n                <input type=\"text\" name=\"word\" [(ngModel)]=\"text\">\n              </div>\n              <button class=\"btn btn_add_taboo\" (click)=\"addTaboo()\">\n                Ajouter\n              </button>\n            </div>\n          </div>\n          <div class=\"list_contain\">\n            <table>\n              <tr *ngFor=\"let item of listTaboo\">\n                <td>{{item.word}}</td>\n                <td><img [src]=\"imgDelete\" alt=\"\" (click)=\"deleteTaboo(item.id)\" class=\"img_delete\"></td>\n              </tr>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<input type=\"file\" #fileInput style=\"visibility: hidden;\"\naccept=\"image/x-png,image/gif,image/jpeg\" (change)=\"profilChoose($event)\">\n","import { HttpEventType } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { AdminService } from '../../../../../../services/admin/admin.service';\nimport { ProfilService } from '../../../../../../services/profil/profil.service';\nimport { NotificationService } from '../../../../../../services/notification/notification.service';\n\n@Component({\n  selector: 'app-setting-admin',\n  templateUrl: './setting-admin.component.html',\n  styleUrls: ['./setting-admin.component.scss']\n})\nexport class SettingAdminComponent implements OnInit {\n  listTaboo: any\n  imgDelete = './../../../../../../../assets/icons/admin-icons/delete.png'\n\n  default = './../../../../../../../assets/images/user_chat.png'\n\n  text: string = null\n\n  info = {\n    pseudo: '',\n    url: null,\n    email: '',\n    id: 0\n  }\n\n  file: File;\n  formData = new FormData();\n  changedProfil: boolean = false\n\n  oldPassword: string = null\n  newPassword: string = null\n  errorPassword: any = null;\n\n  constructor(\n    private adminService: AdminService,\n    private profilService: ProfilService,\n    private notificationService: NotificationService\n  ) { }\n\n  ngOnInit(): void {\n    this.getTaboos()\n    this.getInfosAdmin()\n  }\n\n  getTaboos() {\n    this.adminService.getTaboo().subscribe(\n      (data) => {\n        this.listTaboo = data\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  deleteTaboo(idTaboo) {\n    this.adminService.deleteTaboo(idTaboo).subscribe(\n      (data) => {\n        this.getTaboos()\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  addTaboo() {\n    if (!this.text || this.text === '') return false\n    this.adminService.addTaboo(this.text).subscribe(\n      (data) => {\n        this.text = null\n        this.getTaboos()\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  getInfosAdmin() {\n    this.adminService.getInfosAdmin().subscribe(\n      (data: any) => {\n        // console.log(data)\n        this.info = data\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  async profilChoose(fileInput) {\n    this.file =  fileInput.target.files[0];\n    var mimeType: any;\n    var reader = new FileReader();\n    mimeType = this.file.type;\n    if (!(mimeType === \"image/png\" || mimeType === \"image/jpeg\")) return false;\n    reader = new FileReader();\n    reader.readAsDataURL(this.file);\n    reader.onload = (event) => {\n      this.info.url = reader.result;\n      this.changedProfil = true\n      // console.log('New url ', this.info.url)\n      // this.nameRecto = this.fileRecto.name;\n    };\n\n    this.formData.delete('file');\n    this.formData.append('file', this.file, this.file.name);\n  }\n\n  async uploadProfil() {\n\n    if (!this.changedProfil) {\n      this.saveInfo(this.info.pseudo, this.info.url)\n      return false\n    }\n\n    this.profilService.updatePhoto(this.formData).subscribe(\n      async (events) => {\n        if (events.type === HttpEventType.UploadProgress) {\n          // this.fileUploadProgress = Math.round(events.loaded / events.total * 100) + '%';\n        }\n        else if (events.type === HttpEventType.Response) {\n          const path  = events.body.path;\n          this.info.url = path;\n          this.saveInfo(this.info.pseudo, path)\n        }\n      }, (error) => {\n        console.log(error);\n      }\n    )\n  }\n\n  async saveInfo(pseudo: string, url: string) {\n    this.adminService.updateInfoAdmin(pseudo, url).subscribe(\n      (data: any) => {\n        if (data.success) {\n          this.notificationService.infoMsg(\"Information modifiée\")\n        } else if (data.error) {\n          this.notificationService.errorMsg(data.message)\n        }\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  async changePassword() {\n    this.errorPassword = null\n    if (!this.oldPassword || this.oldPassword === '' || !this.newPassword || this.newPassword === '') {\n      this.errorPassword = 'Veuillez compléter les champs'\n      return false\n    }\n    this.adminService.changePasswordAdmin(this.oldPassword, this.newPassword).subscribe(\n      (data: any) => {\n        if (data.error) {\n          this.errorPassword = data.message\n        } else if (data.success) {\n          this.notificationService.infoMsg('Mot de passe modifié')\n        }\n      }, (error) => {\n        console.log(error)\n      }\n    )\n  }\n}\n","<app-header></app-header>\n\n<div class=\"contain_signin_one\">\n  <div class=\"inside_sign part_one\">\n    <h2>Bienvenue sur <span class=\"word_one\">BETWEEN</span><span class=\"word_two\">US</span></h2>\n  </div>\n</div>\n\n<div class=\"contain_signin_two inside_sign\">\n  <h2 class=\"title\">\n    Se connecter en tant qu' ADMIN\n  </h2>\n\n  <div class=\"descr\">\n      Veuillez quitter cette page si vous n'êtes pas l'administrateur.\n  </div>\n\n  <form class=\"form\" [formGroup]=\"loginForm\" novalidate autocomplete=\"off\">\n    <div class=\"form-group\">\n      <label for=\"email\">Email </label>\n      <input type=\"text\" formControlName=\"email\" name=\"email\" class=\"form-control input lighter\">\n      <div *ngIf=\"submitted && form.email.errors\">\n        <small *ngIf=\"form.email.errors.required\" class=\"form-text error-text \">\n          Adresse email requis\n        </small>\n        <small *ngIf=\"form.email.errors.email\" class=\"form-text error-text \">\n          Format invalide\n        </small>\n      </div>\n    </div>\n\n\n    <div class=\"form-group\">\n      <label for=\"password\">Mot de passe </label>\n      <input type=\"password\" formControlName=\"password\" name=\"password\" class=\"form-control input lighter\" required>\n      <div *ngIf=\"submitted && form.password.errors\">\n        <small *ngIf=\"form.password.errors.required\" class=\"form-text error-text\">\n          Mot de passe requis\n        </small>\n      </div>\n    </div>\n\n      <small *ngIf=\"errorAuth\" class=\"form-text error-text\">\n        {{errorAuth}}\n      </small>\n\n    <div class=\"action\">\n      <button class=\"btn btn_signin lighter\" (click)=\"login($event)\">\n        <div class=\"loader\" *ngIf=\"loading\"></div>\n        <span *ngIf=\"!loading\">CONNEXION</span>\n      </button>\n    </div>\n\n  </form>\n\n  <br><br><br>\n</div>\n","import { EncryptionService } from './../../../services/encryption/encryption.service';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HeaderService } from '../../../services/header/header.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { environment } from 'src/environments/environment';\nimport { loginUser } from '../../../interfaces/login.interface';\nimport * as $ from 'jquery';\nimport { AdminService } from '../../../services/admin/admin.service';\n\n@Component({\n  selector: 'app-connexion-admin',\n  templateUrl: './connexion-admin.component.html',\n  styleUrls: ['./connexion-admin.component.scss']\n})\nexport class ConnexionAdminComponent implements OnInit {\n  loginForm : FormGroup;\n  submitted :boolean =  false;\n  loading: boolean = false;\n  checked :boolean =  false;\n  pseudoStorage : string = null;\n  passStorage : string = null;\n  errorAuth  :boolean = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private adminService: AdminService,\n    private router: Router,\n    private authService: AuthService\n  ) {\n    this.loginForm = this.formBuilder.group({\n      email : ['',[Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  get form() { return this.loginForm.controls }\n\n\n  async login(event) {\n    this.submitted = true;\n    event.preventDefault();\n    if (this.loginForm.invalid) {return false;}\n    this.loading = true;\n    let user: any = this.loginForm.value;\n    await this.adminService.login(user).subscribe(\n      (res: any) => {\n          if (res.error) {\n            this.errorAuth = res.message;\n            this.loading = false;\n          } else {\n            this.errorAuth = null;\n            if (res.access_token)\n              this.authService.saveToken(res.access_token).then(\n                () => {\n                  this.loading = false;\n                  this.router.navigate(['/admin']);\n                }\n              );\n          }\n      },\n      (err: any) => {\n          this.loading = false;\n          console.log(err);\n      }\n    );\n    return true;\n}\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pack-bienvenue',\n  templateUrl: './pack-bienvenue.component.html',\n  styleUrls: ['./pack-bienvenue.component.scss']\n})\nexport class PackBienvenueComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>pack-bienvenue works!</p>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}